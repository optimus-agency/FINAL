#if defined(_WIN32)
#if defined(_MSC_VER)
        #pragma warning (disable:4018) // 'expression' : signed/unsigned mismatch
        #pragma warning (disable:4065) // switch statement contains 'default' but no 'case' labels
        #pragma warning (disable:4146) // unary minus operator applied to unsigned type, result still unsigned
        #pragma warning (disable:4244) // 'conversion' conversion from 'type1' to 'type2', possible loss of data
        #pragma warning (disable:4251) // 'identifier' : class 'type' needs to have dll-interface to be used by clients of class 'type2'
        #pragma warning (disable:4637) // 'var' : conversion from 'size_t' to 'type', possible loss of data
        #pragma warning (disable:4305) // 'identifier' : truncation from 'type1' to 'type2'
        #pragma warning (disable:4307) // 'operator' : integral constant overflow
        #pragma warning (disable:4309) // 'conversion' : truncation of constant value
        #pragma warning (disable:4334) // 'operator' : result of 32-bit shift implicitly converted to 64 bits (was 64-bit shift intended?)
        #pragma warning (disable:4355) // 'this' : used in base member initializer list
        #pragma warning (disable:4506) // no definition for inline function 'function'
        #pragma warning (disable:4996) // The compiler encountered a deprecated declaration.
        #pragma warning (disable:4125) // decimal digit terminates octal escape sequence
        #pragma warning (disable:4800) // decimal digit terminates octal escape sequence
        #pragma warning (disable:4668) // decimal digit terminates octal escape sequence
        #endif

        // Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto
// Protobuf C++ Version: 5.26.1

#include "service.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace service {

inline constexpr VisionInput_VideoData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        fps_{0},
        width_{0},
        height_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VisionInput_VideoData::VisionInput_VideoData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VisionInput_VideoDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisionInput_VideoDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisionInput_VideoDataDefaultTypeInternal() {}
  union {
    VisionInput_VideoData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisionInput_VideoDataDefaultTypeInternal _VisionInput_VideoData_default_instance_;

inline constexpr VisionInput_ImageData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        width_{0},
        height_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VisionInput_ImageData::VisionInput_ImageData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VisionInput_ImageDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisionInput_ImageDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisionInput_ImageDataDefaultTypeInternal() {}
  union {
    VisionInput_ImageData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisionInput_ImageDataDefaultTypeInternal _VisionInput_ImageData_default_instance_;

inline constexpr Viseme::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sil_{0},
        pp_{0},
        ff_{0},
        th_{0},
        dd_{0},
        kk_{0},
        ch_{0},
        ss_{0},
        nn_{0},
        rr_{0},
        aa_{0},
        e_{0},
        ih_{0},
        oh_{0},
        ou_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Viseme::Viseme(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VisemeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisemeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisemeDefaultTypeInternal() {}
  union {
    Viseme _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisemeDefaultTypeInternal _Viseme_default_instance_;

inline constexpr TriggerConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : trigger_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trigger_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TriggerConfig::TriggerConfig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TriggerConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TriggerConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TriggerConfigDefaultTypeInternal() {}
  union {
    TriggerConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TriggerConfigDefaultTypeInternal _TriggerConfig_default_instance_;

inline constexpr STTResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR STTResponse::STTResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct STTResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STTResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~STTResponseDefaultTypeInternal() {}
  union {
    STTResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STTResponseDefaultTypeInternal _STTResponse_default_instance_;

inline constexpr HelloResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HelloResponse::HelloResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HelloResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HelloResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HelloResponseDefaultTypeInternal() {}
  union {
    HelloResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HelloResponseDefaultTypeInternal _HelloResponse_default_instance_;

inline constexpr HelloRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HelloRequest::HelloRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HelloRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HelloRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HelloRequestDefaultTypeInternal() {}
  union {
    HelloRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HelloRequestDefaultTypeInternal _HelloRequest_default_instance_;

inline constexpr GetResponseResponse_UserTranscript::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : text_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_final_{false},
        end_of_response_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetResponseResponse_UserTranscript::GetResponseResponse_UserTranscript(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetResponseResponse_UserTranscriptDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseResponse_UserTranscriptDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseResponse_UserTranscriptDefaultTypeInternal() {}
  union {
    GetResponseResponse_UserTranscript _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseResponse_UserTranscriptDefaultTypeInternal _GetResponseResponse_UserTranscript_default_instance_;

inline constexpr GetResponseResponse_BehaviorTreeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bt_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bt_constants_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        narrative_section_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetResponseResponse_BehaviorTreeResponse::GetResponseResponse_BehaviorTreeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetResponseResponse_BehaviorTreeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseResponse_BehaviorTreeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseResponse_BehaviorTreeResponseDefaultTypeInternal() {}
  union {
    GetResponseResponse_BehaviorTreeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseResponse_BehaviorTreeResponseDefaultTypeInternal _GetResponseResponse_BehaviorTreeResponse_default_instance_;

inline constexpr GetResponseResponse_ActionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetResponseResponse_ActionResponse::GetResponseResponse_ActionResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetResponseResponse_ActionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseResponse_ActionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseResponse_ActionResponseDefaultTypeInternal() {}
  union {
    GetResponseResponse_ActionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseResponse_ActionResponseDefaultTypeInternal _GetResponseResponse_ActionResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUseDefaultTypeInternal _GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse_default_instance_;

inline constexpr FeedbackResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : feedback_response_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FeedbackResponse::FeedbackResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FeedbackResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeedbackResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeedbackResponseDefaultTypeInternal() {}
  union {
    FeedbackResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeedbackResponseDefaultTypeInternal _FeedbackResponse_default_instance_;

inline constexpr FeedbackRequest_Feedback::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tags_{},
        feedback_text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        thumbs_up_{false},
        is_test_case_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FeedbackRequest_Feedback::FeedbackRequest_Feedback(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FeedbackRequest_FeedbackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeedbackRequest_FeedbackDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeedbackRequest_FeedbackDefaultTypeInternal() {}
  union {
    FeedbackRequest_Feedback _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeedbackRequest_FeedbackDefaultTypeInternal _FeedbackRequest_Feedback_default_instance_;

inline constexpr EmotionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : emotion_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        scale_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EmotionResponse::EmotionResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EmotionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmotionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmotionResponseDefaultTypeInternal() {}
  union {
    EmotionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmotionResponseDefaultTypeInternal _EmotionResponse_default_instance_;

inline constexpr DynamicInfoConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DynamicInfoConfig::DynamicInfoConfig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DynamicInfoConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DynamicInfoConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DynamicInfoConfigDefaultTypeInternal() {}
  union {
    DynamicInfoConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DynamicInfoConfigDefaultTypeInternal _DynamicInfoConfig_default_instance_;

inline constexpr BlendShapesData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : blendshape_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlendShapesData::BlendShapesData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlendShapesDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlendShapesDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlendShapesDataDefaultTypeInternal() {}
  union {
    BlendShapesData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlendShapesDataDefaultTypeInternal _BlendShapesData_default_instance_;

inline constexpr AudioConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sample_rate_hertz_{0},
        disable_audio_{false},
        enable_facial_data_{false},
        enable_facial_emotion_data_{false},
        face_model_{static_cast< ::service::FaceModel >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AudioConfig::AudioConfig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AudioConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioConfigDefaultTypeInternal() {}
  union {
    AudioConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioConfigDefaultTypeInternal _AudioConfig_default_instance_;

inline constexpr ActionConfig_Object::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ActionConfig_Object::ActionConfig_Object(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ActionConfig_ObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActionConfig_ObjectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActionConfig_ObjectDefaultTypeInternal() {}
  union {
    ActionConfig_Object _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActionConfig_ObjectDefaultTypeInternal _ActionConfig_Object_default_instance_;

inline constexpr ActionConfig_Character::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bio_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ActionConfig_Character::ActionConfig_Character(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ActionConfig_CharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActionConfig_CharacterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActionConfig_CharacterDefaultTypeInternal() {}
  union {
    ActionConfig_Character _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActionConfig_CharacterDefaultTypeInternal _ActionConfig_Character_default_instance_;

inline constexpr VisionInput::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : vision_data_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR VisionInput::VisionInput(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VisionInputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisionInputDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisionInputDefaultTypeInternal() {}
  union {
    VisionInput _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisionInputDefaultTypeInternal _VisionInput_default_instance_;

inline constexpr VisemesData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        visemes_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VisemesData::VisemesData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VisemesDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisemesDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisemesDataDefaultTypeInternal() {}
  union {
    VisemesData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisemesDataDefaultTypeInternal _VisemesData_default_instance_;

inline constexpr STTRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : request_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR STTRequest::STTRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct STTRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STTRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~STTRequestDefaultTypeInternal() {}
  union {
    STTRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STTRequestDefaultTypeInternal _STTRequest_default_instance_;

inline constexpr GetResponseRequest_GetResponseData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : input_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GetResponseRequest_GetResponseData::GetResponseRequest_GetResponseData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetResponseRequest_GetResponseDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseRequest_GetResponseDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseRequest_GetResponseDataDefaultTypeInternal() {}
  union {
    GetResponseRequest_GetResponseData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseRequest_GetResponseDataDefaultTypeInternal _GetResponseRequest_GetResponseData_default_instance_;

inline constexpr FeedbackRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        interaction_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        character_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_query_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        text_feedback_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FeedbackRequest::FeedbackRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FeedbackRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeedbackRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeedbackRequestDefaultTypeInternal() {}
  union {
    FeedbackRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeedbackRequestDefaultTypeInternal _FeedbackRequest_default_instance_;

inline constexpr ActionConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : actions_{},
        characters_{},
        objects_{},
        classification_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        current_attention_object_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        context_level_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ActionConfig::ActionConfig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ActionConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActionConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActionConfigDefaultTypeInternal() {}
  union {
    ActionConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActionConfigDefaultTypeInternal _ActionConfig_default_instance_;

inline constexpr GetResponseResponse_AudioResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        audio_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        text_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        face_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        audio_config_{nullptr},
        face_emotion_{nullptr},
        emotion_response_{nullptr},
        end_of_response_{false},
        face_data_type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GetResponseResponse_AudioResponse::GetResponseResponse_AudioResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetResponseResponse_AudioResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseResponse_AudioResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseResponse_AudioResponseDefaultTypeInternal() {}
  union {
    GetResponseResponse_AudioResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseResponse_AudioResponseDefaultTypeInternal _GetResponseResponse_AudioResponse_default_instance_;

inline constexpr GetResponseRequest_GetResponseConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        narrative_template_keys_{},
        character_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        api_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        speaker_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        language_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        speaker_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        api_auth_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        audio_config_{nullptr},
        action_config_{nullptr},
        dynamic_info_config_{nullptr},
        vision_input_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetResponseRequest_GetResponseConfig::GetResponseRequest_GetResponseConfig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetResponseRequest_GetResponseConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseRequest_GetResponseConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseRequest_GetResponseConfigDefaultTypeInternal() {}
  union {
    GetResponseRequest_GetResponseConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseRequest_GetResponseConfigDefaultTypeInternal _GetResponseRequest_GetResponseConfig_default_instance_;

inline constexpr GetResponseResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GetResponseResponse::GetResponseResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetResponseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseResponseDefaultTypeInternal() {}
  union {
    GetResponseResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseResponseDefaultTypeInternal _GetResponseResponse_default_instance_;

inline constexpr GetResponseRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : request_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GetResponseRequest::GetResponseRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetResponseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseRequestDefaultTypeInternal() {}
  union {
    GetResponseRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseRequestDefaultTypeInternal _GetResponseRequest_default_instance_;

inline constexpr GetResponseRequestSingle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        response_config_{nullptr},
        response_data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetResponseRequestSingle::GetResponseRequestSingle(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetResponseRequestSingleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseRequestSingleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseRequestSingleDefaultTypeInternal() {}
  union {
    GetResponseRequestSingle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseRequestSingleDefaultTypeInternal _GetResponseRequestSingle_default_instance_;
}  // namespace service
static ::_pb::Metadata file_level_metadata_service_2eproto[30];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_service_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_service_2eproto = nullptr;
const ::uint32_t
    TableStruct_service_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::AudioConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::AudioConfig, _impl_.sample_rate_hertz_),
        PROTOBUF_FIELD_OFFSET(::service::AudioConfig, _impl_.disable_audio_),
        PROTOBUF_FIELD_OFFSET(::service::AudioConfig, _impl_.enable_facial_data_),
        PROTOBUF_FIELD_OFFSET(::service::AudioConfig, _impl_.face_model_),
        PROTOBUF_FIELD_OFFSET(::service::AudioConfig, _impl_.enable_facial_emotion_data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::TriggerConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::TriggerConfig, _impl_.trigger_name_),
        PROTOBUF_FIELD_OFFSET(::service::TriggerConfig, _impl_.trigger_message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Character, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Character, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Character, _impl_.bio_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Object, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Object, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Object, _impl_.description_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::ActionConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::ActionConfig, _impl_.actions_),
        PROTOBUF_FIELD_OFFSET(::service::ActionConfig, _impl_.characters_),
        PROTOBUF_FIELD_OFFSET(::service::ActionConfig, _impl_.objects_),
        PROTOBUF_FIELD_OFFSET(::service::ActionConfig, _impl_.classification_),
        PROTOBUF_FIELD_OFFSET(::service::ActionConfig, _impl_.context_level_),
        PROTOBUF_FIELD_OFFSET(::service::ActionConfig, _impl_.current_attention_object_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::STTRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::service::STTRequest, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::service::STTRequest, _impl_.request_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::STTResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::STTResponse, _impl_.text_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::DynamicInfoConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::DynamicInfoConfig, _impl_.text_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::VisionInput_ImageData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::VisionInput_ImageData, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::service::VisionInput_ImageData, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::service::VisionInput_ImageData, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::VisionInput_VideoData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::VisionInput_VideoData, _impl_.fps_),
        PROTOBUF_FIELD_OFFSET(::service::VisionInput_VideoData, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::service::VisionInput_VideoData, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::service::VisionInput_VideoData, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::VisionInput, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::service::VisionInput, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::service::VisionInput, _impl_.vision_data_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse, value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.character_id_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.api_key_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.audio_config_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.action_config_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.speaker_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.language_code_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.speaker_id_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.api_auth_token_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.narrative_template_keys_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.dynamic_info_config_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.vision_input_),
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        2,
        3,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseData, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseData, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseData, _impl_.input_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest, _impl_.request_type_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequestSingle, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequestSingle, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequestSingle, _impl_.response_config_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseRequestSingle, _impl_.response_data_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.audio_data_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.audio_config_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.text_data_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.end_of_response_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.face_data_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.face_emotion_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.emotion_response_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.face_data_type_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        1,
        2,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_ActionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_ActionResponse, _impl_.action_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_BehaviorTreeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_BehaviorTreeResponse, _impl_.bt_code_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_BehaviorTreeResponse, _impl_.bt_constants_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_BehaviorTreeResponse, _impl_.narrative_section_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_UserTranscript, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_UserTranscript, _impl_.text_data_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_UserTranscript, _impl_.is_final_),
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_UserTranscript, _impl_.end_of_response_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse, _impl_.session_id_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse, _impl_.response_type_),
        PROTOBUF_FIELD_OFFSET(::service::VisemesData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::service::VisemesData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::VisemesData, _impl_.visemes_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::EmotionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::EmotionResponse, _impl_.emotion_),
        PROTOBUF_FIELD_OFFSET(::service::EmotionResponse, _impl_.scale_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.sil_),
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.pp_),
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.ff_),
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.th_),
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.dd_),
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.kk_),
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.ch_),
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.ss_),
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.nn_),
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.rr_),
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.aa_),
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.e_),
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.ih_),
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.oh_),
        PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.ou_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::BlendShapesData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::BlendShapesData, _impl_.blendshape_data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::HelloRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::HelloRequest, _impl_.name_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::HelloResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::HelloResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest_Feedback, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest_Feedback, _impl_.thumbs_up_),
        PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest_Feedback, _impl_.feedback_text_),
        PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest_Feedback, _impl_.tags_),
        PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest_Feedback, _impl_.is_test_case_),
        PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest, _impl_.interaction_id_),
        PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest, _impl_.character_id_),
        PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest, _impl_.text_feedback_),
        PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest, _impl_.user_query_),
        PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest, _impl_.response_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::service::FeedbackResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::service::FeedbackResponse, _impl_.feedback_response_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::service::AudioConfig)},
        {13, -1, -1, sizeof(::service::TriggerConfig)},
        {23, -1, -1, sizeof(::service::ActionConfig_Character)},
        {33, -1, -1, sizeof(::service::ActionConfig_Object)},
        {43, -1, -1, sizeof(::service::ActionConfig)},
        {57, -1, -1, sizeof(::service::STTRequest)},
        {68, -1, -1, sizeof(::service::STTResponse)},
        {77, -1, -1, sizeof(::service::DynamicInfoConfig)},
        {86, -1, -1, sizeof(::service::VisionInput_ImageData)},
        {97, -1, -1, sizeof(::service::VisionInput_VideoData)},
        {109, -1, -1, sizeof(::service::VisionInput)},
        {120, 130, -1, sizeof(::service::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse)},
        {132, 152, -1, sizeof(::service::GetResponseRequest_GetResponseConfig)},
        {164, -1, -1, sizeof(::service::GetResponseRequest_GetResponseData)},
        {176, -1, -1, sizeof(::service::GetResponseRequest)},
        {187, 197, -1, sizeof(::service::GetResponseRequestSingle)},
        {199, 217, -1, sizeof(::service::GetResponseResponse_AudioResponse)},
        {226, -1, -1, sizeof(::service::GetResponseResponse_ActionResponse)},
        {235, -1, -1, sizeof(::service::GetResponseResponse_BehaviorTreeResponse)},
        {246, -1, -1, sizeof(::service::GetResponseResponse_UserTranscript)},
        {257, -1, -1, sizeof(::service::GetResponseResponse)},
        {274, 283, -1, sizeof(::service::VisemesData)},
        {284, -1, -1, sizeof(::service::EmotionResponse)},
        {294, -1, -1, sizeof(::service::Viseme)},
        {317, -1, -1, sizeof(::service::BlendShapesData)},
        {326, -1, -1, sizeof(::service::HelloRequest)},
        {335, -1, -1, sizeof(::service::HelloResponse)},
        {344, -1, -1, sizeof(::service::FeedbackRequest_Feedback)},
        {356, 370, -1, sizeof(::service::FeedbackRequest)},
        {376, -1, -1, sizeof(::service::FeedbackResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::service::_AudioConfig_default_instance_._instance,
    &::service::_TriggerConfig_default_instance_._instance,
    &::service::_ActionConfig_Character_default_instance_._instance,
    &::service::_ActionConfig_Object_default_instance_._instance,
    &::service::_ActionConfig_default_instance_._instance,
    &::service::_STTRequest_default_instance_._instance,
    &::service::_STTResponse_default_instance_._instance,
    &::service::_DynamicInfoConfig_default_instance_._instance,
    &::service::_VisionInput_ImageData_default_instance_._instance,
    &::service::_VisionInput_VideoData_default_instance_._instance,
    &::service::_VisionInput_default_instance_._instance,
    &::service::_GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse_default_instance_._instance,
    &::service::_GetResponseRequest_GetResponseConfig_default_instance_._instance,
    &::service::_GetResponseRequest_GetResponseData_default_instance_._instance,
    &::service::_GetResponseRequest_default_instance_._instance,
    &::service::_GetResponseRequestSingle_default_instance_._instance,
    &::service::_GetResponseResponse_AudioResponse_default_instance_._instance,
    &::service::_GetResponseResponse_ActionResponse_default_instance_._instance,
    &::service::_GetResponseResponse_BehaviorTreeResponse_default_instance_._instance,
    &::service::_GetResponseResponse_UserTranscript_default_instance_._instance,
    &::service::_GetResponseResponse_default_instance_._instance,
    &::service::_VisemesData_default_instance_._instance,
    &::service::_EmotionResponse_default_instance_._instance,
    &::service::_Viseme_default_instance_._instance,
    &::service::_BlendShapesData_default_instance_._instance,
    &::service::_HelloRequest_default_instance_._instance,
    &::service::_HelloResponse_default_instance_._instance,
    &::service::_FeedbackRequest_Feedback_default_instance_._instance,
    &::service::_FeedbackRequest_default_instance_._instance,
    &::service::_FeedbackResponse_default_instance_._instance,
};
const char descriptor_table_protodef_service_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rservice.proto\022\007service\032\030arkit_blend_sh"
    "apes.proto\"\247\001\n\013AudioConfig\022\031\n\021sample_rat"
    "e_hertz\030\001 \001(\005\022\025\n\rdisable_audio\030\002 \001(\010\022\032\n\022"
    "enable_facial_data\030\003 \001(\010\022&\n\nface_model\030\004"
    " \001(\0162\022.service.FaceModel\022\"\n\032enable_facia"
    "l_emotion_data\030\005 \001(\010\">\n\rTriggerConfig\022\024\n"
    "\014trigger_name\030\001 \001(\t\022\027\n\017trigger_message\030\002"
    " \001(\t\"\251\002\n\014ActionConfig\022\017\n\007actions\030\001 \003(\t\0223"
    "\n\ncharacters\030\002 \003(\0132\037.service.ActionConfi"
    "g.Character\022-\n\007objects\030\003 \003(\0132\034.service.A"
    "ctionConfig.Object\022\026\n\016classification\030\004 \001"
    "(\t\022\025\n\rcontext_level\030\005 \001(\005\022 \n\030current_att"
    "ention_object\030\006 \001(\t\032&\n\tCharacter\022\014\n\004name"
    "\030\001 \001(\t\022\013\n\003bio\030\002 \001(\t\032+\n\006Object\022\014\n\004name\030\001 "
    "\001(\t\022\023\n\013description\030\002 \001(\t\"a\n\nSTTRequest\022,"
    "\n\014audio_config\030\001 \001(\0132\024.service.AudioConf"
    "igH\000\022\025\n\013audio_chunk\030\002 \001(\014H\000B\016\n\014request_t"
    "ype\"\033\n\013STTResponse\022\014\n\004text\030\001 \001(\t\"!\n\021Dyna"
    "micInfoConfig\022\014\n\004text\030\001 \001(\t\"\211\002\n\013VisionIn"
    "put\0224\n\nimage_data\030\001 \001(\0132\036.service.Vision"
    "Input.ImageDataH\000\0224\n\nvideo_data\030\002 \001(\0132\036."
    "service.VisionInput.VideoDataH\000\0328\n\tImage"
    "Data\022\r\n\005width\030\001 \001(\005\022\016\n\006height\030\002 \001(\005\022\014\n\004d"
    "ata\030\003 \001(\014\032E\n\tVideoData\022\013\n\003fps\030\001 \001(\005\022\r\n\005w"
    "idth\030\002 \001(\005\022\016\n\006height\030\003 \001(\005\022\014\n\004data\030\004 \001(\014"
    "B\r\n\013vision_data\"\305\006\n\022GetResponseRequest\022L"
    "\n\023get_response_config\030\001 \001(\0132-.service.Ge"
    "tResponseRequest.GetResponseConfigH\000\022H\n\021"
    "get_response_data\030\002 \001(\0132+.service.GetRes"
    "ponseRequest.GetResponseDataH\000\032\212\004\n\021GetRe"
    "sponseConfig\022\024\n\014character_id\030\002 \001(\t\022\017\n\007ap"
    "i_key\030\003 \001(\t\022\022\n\nsession_id\030\004 \001(\t\022*\n\014audio"
    "_config\030\005 \001(\0132\024.service.AudioConfig\022,\n\ra"
    "ction_config\030\006 \001(\0132\025.service.ActionConfi"
    "g\022\017\n\007speaker\030\007 \001(\t\022\025\n\rlanguage_code\030\010 \001("
    "\t\022\022\n\nspeaker_id\030\t \001(\t\022\026\n\016api_auth_token\030"
    "\n \001(\t\022i\n\027narrative_template_keys\030\013 \003(\0132H"
    ".service.GetResponseRequest.GetResponseC"
    "onfig.NarrativeTemplateKeysEntry\0227\n\023dyna"
    "mic_info_config\030\014 \001(\0132\032.service.DynamicI"
    "nfoConfig\022*\n\014vision_input\030\r \001(\0132\024.servic"
    "e.VisionInput\032<\n\032NarrativeTemplateKeysEn"
    "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032z\n\017G"
    "etResponseData\022\024\n\naudio_data\030\001 \001(\014H\000\022\023\n\t"
    "text_data\030\002 \001(\tH\000\022.\n\014trigger_data\030\003 \001(\0132"
    "\026.service.TriggerConfigH\000B\014\n\ninput_typeB"
    "\016\n\014request_type\"\204\001\n\030GetResponseRequestSi"
    "ngle\0224\n\017response_config\030\001 \001(\0132\033.service."
    "GetResponseRequest\0222\n\rresponse_data\030\002 \001("
    "\0132\033.service.GetResponseRequest\"\337\007\n\023GetRe"
    "sponseResponse\022\022\n\nsession_id\030\001 \001(\t\022F\n\017ac"
    "tion_response\030\002 \001(\0132+.service.GetRespons"
    "eResponse.ActionResponseH\000\022D\n\016audio_resp"
    "onse\030\003 \001(\0132*.service.GetResponseResponse"
    ".AudioResponseH\000\022\023\n\tdebug_log\030\004 \001(\tH\000\022A\n"
    "\nuser_query\030\005 \001(\0132+.service.GetResponseR"
    "esponse.UserTranscriptH\000\022H\n\013bt_response\030"
    "\006 \001(\01321.service.GetResponseResponse.Beha"
    "viorTreeResponseH\000\022\032\n\020emotion_response\030\007"
    " \001(\tH\000\022\030\n\016interaction_id\030\010 \001(\tH\000\032\355\002\n\rAud"
    "ioResponse\022\022\n\naudio_data\030\001 \001(\014\022*\n\014audio_"
    "config\030\002 \001(\0132\024.service.AudioConfig\022\021\n\tte"
    "xt_data\030\003 \001(\t\022\027\n\017end_of_response\030\004 \001(\010\022\021"
    "\n\tface_data\030\005 \001(\t\022,\n\014visemes_data\030\006 \001(\0132"
    "\024.service.VisemesDataH\000\0224\n\020blendshapes_d"
    "ata\030\007 \001(\0132\030.service.BlendShapesDataH\000\0223\n"
    "\014face_emotion\030\010 \001(\0132\035.service.ARKitBlend"
    "ShapesData\0222\n\020emotion_response\030\t \001(\0132\030.s"
    "ervice.EmotionResponseB\020\n\016face_data_type"
    "\032 \n\016ActionResponse\022\016\n\006action\030\001 \001(\t\032[\n\024Be"
    "haviorTreeResponse\022\017\n\007bt_code\030\001 \001(\t\022\024\n\014b"
    "t_constants\030\002 \001(\t\022\034\n\024narrative_section_i"
    "d\030\003 \001(\t\032N\n\016UserTranscript\022\021\n\ttext_data\030\001"
    " \001(\t\022\020\n\010is_final\030\002 \001(\010\022\027\n\017end_of_respons"
    "e\030\003 \001(\010B\017\n\rresponse_type\"/\n\013VisemesData\022"
    " \n\007visemes\030\001 \001(\0132\017.service.Viseme\"1\n\017Emo"
    "tionResponse\022\017\n\007emotion\030\001 \001(\t\022\r\n\005scale\030\002"
    " \001(\t\"\274\001\n\006Viseme\022\013\n\003sil\030\001 \001(\002\022\n\n\002pp\030\002 \001(\002"
    "\022\n\n\002ff\030\003 \001(\002\022\n\n\002th\030\004 \001(\002\022\n\n\002dd\030\005 \001(\002\022\n\n\002"
    "kk\030\006 \001(\002\022\n\n\002ch\030\007 \001(\002\022\n\n\002ss\030\010 \001(\002\022\n\n\002nn\030\t"
    " \001(\002\022\n\n\002rr\030\n \001(\002\022\n\n\002aa\030\013 \001(\002\022\t\n\001e\030\014 \001(\002\022"
    "\n\n\002ih\030\r \001(\002\022\n\n\002oh\030\016 \001(\002\022\n\n\002ou\030\017 \001(\002\"*\n\017B"
    "lendShapesData\022\027\n\017blendshape_data\030\001 \001(\t\""
    "\034\n\014HelloRequest\022\014\n\004name\030\001 \001(\t\" \n\rHelloRe"
    "sponse\022\017\n\007message\030\001 \001(\t\"\215\002\n\017FeedbackRequ"
    "est\022\026\n\016interaction_id\030\001 \001(\t\022\024\n\014character"
    "_id\030\002 \001(\t\022\022\n\nsession_id\030\003 \001(\t\0228\n\rtext_fe"
    "edback\030\005 \001(\0132!.service.FeedbackRequest.F"
    "eedback\022\022\n\nuser_query\030\006 \001(\t\022\020\n\010response\030"
    "\007 \001(\t\032X\n\010Feedback\022\021\n\tthumbs_up\030\001 \001(\010\022\025\n\r"
    "feedback_text\030\002 \001(\t\022\014\n\004tags\030\003 \003(\t\022\024\n\014is_"
    "test_case\030\004 \001(\010\"-\n\020FeedbackResponse\022\031\n\021f"
    "eedback_response\030\001 \001(\t*\212\001\n\tFaceModel\022\032\n\026"
    "FACE_MODEL_UNSPECIFIED\020\000\022\036\n\032FACE_MODEL_A"
    "_2F_MODEL_NAME\020\001\022\"\n\036FACE_MODEL_PHONEMES_"
    "MODEL_NAME\020\002\022\035\n\031FACE_MODEL_OVR_MODEL_NAM"
    "E\020\0032\301\003\n\rConvaiService\0228\n\005Hello\022\025.service"
    ".HelloRequest\032\026.service.HelloResponse\"\000\022"
    "B\n\013HelloStream\022\025.service.HelloRequest\032\026."
    "service.HelloResponse\"\000(\0010\001\022\?\n\014SpeechToT"
    "ext\022\023.service.STTRequest\032\024.service.STTRe"
    "sponse\"\000(\0010\001\022N\n\013GetResponse\022\033.service.Ge"
    "tResponseRequest\032\034.service.GetResponseRe"
    "sponse\"\000(\0010\001\022X\n\021GetResponseSingle\022!.serv"
    "ice.GetResponseRequestSingle\032\034.service.G"
    "etResponseResponse\"\0000\001\022G\n\016SubmitFeedback"
    "\022\030.service.FeedbackRequest\032\031.service.Fee"
    "dbackResponse\"\000B\017Z\rproto/serviceb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_service_2eproto_deps[1] =
    {
        &::descriptor_table_arkit_5fblend_5fshapes_2eproto,
};
static ::absl::once_flag descriptor_table_service_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_service_2eproto = {
    false,
    false,
    4320,
    descriptor_table_protodef_service_2eproto,
    "service.proto",
    &descriptor_table_service_2eproto_once,
    descriptor_table_service_2eproto_deps,
    1,
    30,
    schemas,
    file_default_instances,
    TableStruct_service_2eproto::offsets,
    file_level_metadata_service_2eproto,
    file_level_enum_descriptors_service_2eproto,
    file_level_service_descriptors_service_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_service_2eproto_getter() {
  return &descriptor_table_service_2eproto;
}
namespace service {
const ::google::protobuf::EnumDescriptor* FaceModel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_service_2eproto);
  return file_level_enum_descriptors_service_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t FaceModel_internal_data_[] = {
    262144u, 0u, };
bool FaceModel_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class AudioConfig::_Internal {
 public:
};

AudioConfig::AudioConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.AudioConfig)
}
AudioConfig::AudioConfig(
    ::google::protobuf::Arena* arena, const AudioConfig& from)
    : AudioConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AudioConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AudioConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sample_rate_hertz_),
           0,
           offsetof(Impl_, face_model_) -
               offsetof(Impl_, sample_rate_hertz_) +
               sizeof(Impl_::face_model_));
}
AudioConfig::~AudioConfig() {
  // @@protoc_insertion_point(destructor:service.AudioConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AudioConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AudioConfig::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AudioConfig, _impl_._cached_size_),
              false,
          },
          &AudioConfig::MergeImpl,
          &AudioConfig::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AudioConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:service.AudioConfig)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.sample_rate_hertz_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.face_model_) -
      reinterpret_cast<char*>(&_impl_.sample_rate_hertz_)) + sizeof(_impl_.face_model_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AudioConfig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> AudioConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AudioConfig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::AudioConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 sample_rate_hertz = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AudioConfig, _impl_.sample_rate_hertz_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AudioConfig, _impl_.sample_rate_hertz_)}},
    // bool disable_audio = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AudioConfig, _impl_.disable_audio_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AudioConfig, _impl_.disable_audio_)}},
    // bool enable_facial_data = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AudioConfig, _impl_.enable_facial_data_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AudioConfig, _impl_.enable_facial_data_)}},
    // .service.FaceModel face_model = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AudioConfig, _impl_.face_model_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AudioConfig, _impl_.face_model_)}},
    // bool enable_facial_emotion_data = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AudioConfig, _impl_.enable_facial_emotion_data_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AudioConfig, _impl_.enable_facial_emotion_data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 sample_rate_hertz = 1;
    {PROTOBUF_FIELD_OFFSET(AudioConfig, _impl_.sample_rate_hertz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool disable_audio = 2;
    {PROTOBUF_FIELD_OFFSET(AudioConfig, _impl_.disable_audio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool enable_facial_data = 3;
    {PROTOBUF_FIELD_OFFSET(AudioConfig, _impl_.enable_facial_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .service.FaceModel face_model = 4;
    {PROTOBUF_FIELD_OFFSET(AudioConfig, _impl_.face_model_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool enable_facial_emotion_data = 5;
    {PROTOBUF_FIELD_OFFSET(AudioConfig, _impl_.enable_facial_emotion_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AudioConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.AudioConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 sample_rate_hertz = 1;
  if (this->_internal_sample_rate_hertz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_sample_rate_hertz(), target);
  }

  // bool disable_audio = 2;
  if (this->_internal_disable_audio() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_disable_audio(), target);
  }

  // bool enable_facial_data = 3;
  if (this->_internal_enable_facial_data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_enable_facial_data(), target);
  }

  // .service.FaceModel face_model = 4;
  if (this->_internal_face_model() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_face_model(), target);
  }

  // bool enable_facial_emotion_data = 5;
  if (this->_internal_enable_facial_emotion_data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_enable_facial_emotion_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.AudioConfig)
  return target;
}

::size_t AudioConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.AudioConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 sample_rate_hertz = 1;
  if (this->_internal_sample_rate_hertz() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_sample_rate_hertz());
  }

  // bool disable_audio = 2;
  if (this->_internal_disable_audio() != 0) {
    total_size += 2;
  }

  // bool enable_facial_data = 3;
  if (this->_internal_enable_facial_data() != 0) {
    total_size += 2;
  }

  // bool enable_facial_emotion_data = 5;
  if (this->_internal_enable_facial_emotion_data() != 0) {
    total_size += 2;
  }

  // .service.FaceModel face_model = 4;
  if (this->_internal_face_model() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_face_model());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AudioConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AudioConfig*>(&to_msg);
  auto& from = static_cast<const AudioConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.AudioConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sample_rate_hertz() != 0) {
    _this->_impl_.sample_rate_hertz_ = from._impl_.sample_rate_hertz_;
  }
  if (from._internal_disable_audio() != 0) {
    _this->_impl_.disable_audio_ = from._impl_.disable_audio_;
  }
  if (from._internal_enable_facial_data() != 0) {
    _this->_impl_.enable_facial_data_ = from._impl_.enable_facial_data_;
  }
  if (from._internal_enable_facial_emotion_data() != 0) {
    _this->_impl_.enable_facial_emotion_data_ = from._impl_.enable_facial_emotion_data_;
  }
  if (from._internal_face_model() != 0) {
    _this->_impl_.face_model_ = from._impl_.face_model_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioConfig::CopyFrom(const AudioConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.AudioConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AudioConfig::IsInitialized() const {
  return true;
}

void AudioConfig::InternalSwap(AudioConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AudioConfig, _impl_.face_model_)
      + sizeof(AudioConfig::_impl_.face_model_)
      - PROTOBUF_FIELD_OFFSET(AudioConfig, _impl_.sample_rate_hertz_)>(
          reinterpret_cast<char*>(&_impl_.sample_rate_hertz_),
          reinterpret_cast<char*>(&other->_impl_.sample_rate_hertz_));
}

::google::protobuf::Metadata AudioConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[0]);
}
// ===================================================================

class TriggerConfig::_Internal {
 public:
};

TriggerConfig::TriggerConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.TriggerConfig)
}
inline PROTOBUF_NDEBUG_INLINE TriggerConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : trigger_name_(arena, from.trigger_name_),
        trigger_message_(arena, from.trigger_message_),
        _cached_size_{0} {}

TriggerConfig::TriggerConfig(
    ::google::protobuf::Arena* arena,
    const TriggerConfig& from)
    : ::google::protobuf::Message(arena) {
  TriggerConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:service.TriggerConfig)
}
inline PROTOBUF_NDEBUG_INLINE TriggerConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : trigger_name_(arena),
        trigger_message_(arena),
        _cached_size_{0} {}

inline void TriggerConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TriggerConfig::~TriggerConfig() {
  // @@protoc_insertion_point(destructor:service.TriggerConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TriggerConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.trigger_name_.Destroy();
  _impl_.trigger_message_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TriggerConfig::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(TriggerConfig, _impl_._cached_size_),
              false,
          },
          &TriggerConfig::MergeImpl,
          &TriggerConfig::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void TriggerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:service.TriggerConfig)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trigger_name_.ClearToEmpty();
  _impl_.trigger_message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TriggerConfig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> TriggerConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TriggerConfig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::TriggerConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string trigger_message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TriggerConfig, _impl_.trigger_message_)}},
    // string trigger_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TriggerConfig, _impl_.trigger_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string trigger_name = 1;
    {PROTOBUF_FIELD_OFFSET(TriggerConfig, _impl_.trigger_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string trigger_message = 2;
    {PROTOBUF_FIELD_OFFSET(TriggerConfig, _impl_.trigger_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\14\17\0\0\0\0\0"
    "service.TriggerConfig"
    "trigger_name"
    "trigger_message"
  }},
};

::uint8_t* TriggerConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.TriggerConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string trigger_name = 1;
  if (!this->_internal_trigger_name().empty()) {
    const std::string& _s = this->_internal_trigger_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.TriggerConfig.trigger_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string trigger_message = 2;
  if (!this->_internal_trigger_message().empty()) {
    const std::string& _s = this->_internal_trigger_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.TriggerConfig.trigger_message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.TriggerConfig)
  return target;
}

::size_t TriggerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.TriggerConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trigger_name = 1;
  if (!this->_internal_trigger_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_trigger_name());
  }

  // string trigger_message = 2;
  if (!this->_internal_trigger_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_trigger_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TriggerConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TriggerConfig*>(&to_msg);
  auto& from = static_cast<const TriggerConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.TriggerConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trigger_name().empty()) {
    _this->_internal_set_trigger_name(from._internal_trigger_name());
  }
  if (!from._internal_trigger_message().empty()) {
    _this->_internal_set_trigger_message(from._internal_trigger_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TriggerConfig::CopyFrom(const TriggerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.TriggerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TriggerConfig::IsInitialized() const {
  return true;
}

void TriggerConfig::InternalSwap(TriggerConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trigger_name_, &other->_impl_.trigger_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trigger_message_, &other->_impl_.trigger_message_, arena);
}

::google::protobuf::Metadata TriggerConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[1]);
}
// ===================================================================

class ActionConfig_Character::_Internal {
 public:
};

ActionConfig_Character::ActionConfig_Character(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.ActionConfig.Character)
}
inline PROTOBUF_NDEBUG_INLINE ActionConfig_Character::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        bio_(arena, from.bio_),
        _cached_size_{0} {}

ActionConfig_Character::ActionConfig_Character(
    ::google::protobuf::Arena* arena,
    const ActionConfig_Character& from)
    : ::google::protobuf::Message(arena) {
  ActionConfig_Character* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:service.ActionConfig.Character)
}
inline PROTOBUF_NDEBUG_INLINE ActionConfig_Character::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        bio_(arena),
        _cached_size_{0} {}

inline void ActionConfig_Character::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ActionConfig_Character::~ActionConfig_Character() {
  // @@protoc_insertion_point(destructor:service.ActionConfig.Character)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ActionConfig_Character::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.bio_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ActionConfig_Character::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ActionConfig_Character, _impl_._cached_size_),
              false,
          },
          &ActionConfig_Character::MergeImpl,
          &ActionConfig_Character::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ActionConfig_Character::Clear() {
// @@protoc_insertion_point(message_clear_start:service.ActionConfig.Character)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.bio_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ActionConfig_Character::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 46, 2> ActionConfig_Character::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ActionConfig_Character_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::ActionConfig_Character>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string bio = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ActionConfig_Character, _impl_.bio_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ActionConfig_Character, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ActionConfig_Character, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string bio = 2;
    {PROTOBUF_FIELD_OFFSET(ActionConfig_Character, _impl_.bio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\4\3\0\0\0\0\0"
    "service.ActionConfig.Character"
    "name"
    "bio"
  }},
};

::uint8_t* ActionConfig_Character::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.ActionConfig.Character)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.ActionConfig.Character.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string bio = 2;
  if (!this->_internal_bio().empty()) {
    const std::string& _s = this->_internal_bio();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.ActionConfig.Character.bio");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.ActionConfig.Character)
  return target;
}

::size_t ActionConfig_Character::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.ActionConfig.Character)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string bio = 2;
  if (!this->_internal_bio().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_bio());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ActionConfig_Character::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ActionConfig_Character*>(&to_msg);
  auto& from = static_cast<const ActionConfig_Character&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.ActionConfig.Character)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_bio().empty()) {
    _this->_internal_set_bio(from._internal_bio());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ActionConfig_Character::CopyFrom(const ActionConfig_Character& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.ActionConfig.Character)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ActionConfig_Character::IsInitialized() const {
  return true;
}

void ActionConfig_Character::InternalSwap(ActionConfig_Character* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bio_, &other->_impl_.bio_, arena);
}

::google::protobuf::Metadata ActionConfig_Character::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[2]);
}
// ===================================================================

class ActionConfig_Object::_Internal {
 public:
};

ActionConfig_Object::ActionConfig_Object(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.ActionConfig.Object)
}
inline PROTOBUF_NDEBUG_INLINE ActionConfig_Object::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        description_(arena, from.description_),
        _cached_size_{0} {}

ActionConfig_Object::ActionConfig_Object(
    ::google::protobuf::Arena* arena,
    const ActionConfig_Object& from)
    : ::google::protobuf::Message(arena) {
  ActionConfig_Object* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:service.ActionConfig.Object)
}
inline PROTOBUF_NDEBUG_INLINE ActionConfig_Object::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        description_(arena),
        _cached_size_{0} {}

inline void ActionConfig_Object::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ActionConfig_Object::~ActionConfig_Object() {
  // @@protoc_insertion_point(destructor:service.ActionConfig.Object)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ActionConfig_Object::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ActionConfig_Object::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ActionConfig_Object, _impl_._cached_size_),
              false,
          },
          &ActionConfig_Object::MergeImpl,
          &ActionConfig_Object::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ActionConfig_Object::Clear() {
// @@protoc_insertion_point(message_clear_start:service.ActionConfig.Object)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ActionConfig_Object::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 51, 2> ActionConfig_Object::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ActionConfig_Object_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::ActionConfig_Object>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ActionConfig_Object, _impl_.description_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ActionConfig_Object, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ActionConfig_Object, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2;
    {PROTOBUF_FIELD_OFFSET(ActionConfig_Object, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\4\13\0\0\0\0\0"
    "service.ActionConfig.Object"
    "name"
    "description"
  }},
};

::uint8_t* ActionConfig_Object::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.ActionConfig.Object)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.ActionConfig.Object.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.ActionConfig.Object.description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.ActionConfig.Object)
  return target;
}

::size_t ActionConfig_Object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.ActionConfig.Object)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ActionConfig_Object::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ActionConfig_Object*>(&to_msg);
  auto& from = static_cast<const ActionConfig_Object&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.ActionConfig.Object)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ActionConfig_Object::CopyFrom(const ActionConfig_Object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.ActionConfig.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ActionConfig_Object::IsInitialized() const {
  return true;
}

void ActionConfig_Object::InternalSwap(ActionConfig_Object* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
}

::google::protobuf::Metadata ActionConfig_Object::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[3]);
}
// ===================================================================

class ActionConfig::_Internal {
 public:
};

ActionConfig::ActionConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.ActionConfig)
}
inline PROTOBUF_NDEBUG_INLINE ActionConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : actions_{visibility, arena, from.actions_},
        characters_{visibility, arena, from.characters_},
        objects_{visibility, arena, from.objects_},
        classification_(arena, from.classification_),
        current_attention_object_(arena, from.current_attention_object_),
        _cached_size_{0} {}

ActionConfig::ActionConfig(
    ::google::protobuf::Arena* arena,
    const ActionConfig& from)
    : ::google::protobuf::Message(arena) {
  ActionConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.context_level_ = from._impl_.context_level_;

  // @@protoc_insertion_point(copy_constructor:service.ActionConfig)
}
inline PROTOBUF_NDEBUG_INLINE ActionConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : actions_{visibility, arena},
        characters_{visibility, arena},
        objects_{visibility, arena},
        classification_(arena),
        current_attention_object_(arena),
        _cached_size_{0} {}

inline void ActionConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.context_level_ = {};
}
ActionConfig::~ActionConfig() {
  // @@protoc_insertion_point(destructor:service.ActionConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ActionConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.classification_.Destroy();
  _impl_.current_attention_object_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ActionConfig::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ActionConfig, _impl_._cached_size_),
              false,
          },
          &ActionConfig::MergeImpl,
          &ActionConfig::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ActionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:service.ActionConfig)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.actions_.Clear();
  _impl_.characters_.Clear();
  _impl_.objects_.Clear();
  _impl_.classification_.ClearToEmpty();
  _impl_.current_attention_object_.ClearToEmpty();
  _impl_.context_level_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ActionConfig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 74, 2> ActionConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ActionConfig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::ActionConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string actions = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ActionConfig, _impl_.actions_)}},
    // repeated .service.ActionConfig.Character characters = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ActionConfig, _impl_.characters_)}},
    // repeated .service.ActionConfig.Object objects = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(ActionConfig, _impl_.objects_)}},
    // string classification = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ActionConfig, _impl_.classification_)}},
    // int32 context_level = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ActionConfig, _impl_.context_level_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ActionConfig, _impl_.context_level_)}},
    // string current_attention_object = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ActionConfig, _impl_.current_attention_object_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string actions = 1;
    {PROTOBUF_FIELD_OFFSET(ActionConfig, _impl_.actions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .service.ActionConfig.Character characters = 2;
    {PROTOBUF_FIELD_OFFSET(ActionConfig, _impl_.characters_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .service.ActionConfig.Object objects = 3;
    {PROTOBUF_FIELD_OFFSET(ActionConfig, _impl_.objects_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string classification = 4;
    {PROTOBUF_FIELD_OFFSET(ActionConfig, _impl_.classification_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 context_level = 5;
    {PROTOBUF_FIELD_OFFSET(ActionConfig, _impl_.context_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string current_attention_object = 6;
    {PROTOBUF_FIELD_OFFSET(ActionConfig, _impl_.current_attention_object_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::service::ActionConfig_Character>()},
    {::_pbi::TcParser::GetTable<::service::ActionConfig_Object>()},
  }}, {{
    "\24\7\0\0\16\0\30\0"
    "service.ActionConfig"
    "actions"
    "classification"
    "current_attention_object"
  }},
};

::uint8_t* ActionConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.ActionConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string actions = 1;
  for (int i = 0, n = this->_internal_actions_size(); i < n; ++i) {
    const auto& s = this->_internal_actions().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.ActionConfig.actions");
    target = stream->WriteString(1, s, target);
  }

  // repeated .service.ActionConfig.Character characters = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_characters_size());
       i < n; i++) {
    const auto& repfield = this->_internal_characters().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .service.ActionConfig.Object objects = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_objects_size());
       i < n; i++) {
    const auto& repfield = this->_internal_objects().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string classification = 4;
  if (!this->_internal_classification().empty()) {
    const std::string& _s = this->_internal_classification();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.ActionConfig.classification");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int32 context_level = 5;
  if (this->_internal_context_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_context_level(), target);
  }

  // string current_attention_object = 6;
  if (!this->_internal_current_attention_object().empty()) {
    const std::string& _s = this->_internal_current_attention_object();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.ActionConfig.current_attention_object");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.ActionConfig)
  return target;
}

::size_t ActionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.ActionConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_actions().size());
  for (int i = 0, n = _internal_actions().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_actions().Get(i));
  }
  // repeated .service.ActionConfig.Character characters = 2;
  total_size += 1UL * this->_internal_characters_size();
  for (const auto& msg : this->_internal_characters()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .service.ActionConfig.Object objects = 3;
  total_size += 1UL * this->_internal_objects_size();
  for (const auto& msg : this->_internal_objects()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string classification = 4;
  if (!this->_internal_classification().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_classification());
  }

  // string current_attention_object = 6;
  if (!this->_internal_current_attention_object().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_current_attention_object());
  }

  // int32 context_level = 5;
  if (this->_internal_context_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_context_level());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ActionConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ActionConfig*>(&to_msg);
  auto& from = static_cast<const ActionConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.ActionConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_actions()->MergeFrom(from._internal_actions());
  _this->_internal_mutable_characters()->MergeFrom(
      from._internal_characters());
  _this->_internal_mutable_objects()->MergeFrom(
      from._internal_objects());
  if (!from._internal_classification().empty()) {
    _this->_internal_set_classification(from._internal_classification());
  }
  if (!from._internal_current_attention_object().empty()) {
    _this->_internal_set_current_attention_object(from._internal_current_attention_object());
  }
  if (from._internal_context_level() != 0) {
    _this->_impl_.context_level_ = from._impl_.context_level_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ActionConfig::CopyFrom(const ActionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.ActionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ActionConfig::IsInitialized() const {
  return true;
}

void ActionConfig::InternalSwap(ActionConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.actions_.InternalSwap(&other->_impl_.actions_);
  _impl_.characters_.InternalSwap(&other->_impl_.characters_);
  _impl_.objects_.InternalSwap(&other->_impl_.objects_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.classification_, &other->_impl_.classification_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.current_attention_object_, &other->_impl_.current_attention_object_, arena);
        swap(_impl_.context_level_, other->_impl_.context_level_);
}

::google::protobuf::Metadata ActionConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[4]);
}
// ===================================================================

class STTRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::service::STTRequest, _impl_._oneof_case_);
};

void STTRequest::set_allocated_audio_config(::service::AudioConfig* audio_config) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (audio_config) {
    ::google::protobuf::Arena* submessage_arena = audio_config->GetArena();
    if (message_arena != submessage_arena) {
      audio_config = ::google::protobuf::internal::GetOwnedMessage(message_arena, audio_config, submessage_arena);
    }
    set_has_audio_config();
    _impl_.request_type_.audio_config_ = audio_config;
  }
  // @@protoc_insertion_point(field_set_allocated:service.STTRequest.audio_config)
}
STTRequest::STTRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.STTRequest)
}
inline PROTOBUF_NDEBUG_INLINE STTRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : request_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

STTRequest::STTRequest(
    ::google::protobuf::Arena* arena,
    const STTRequest& from)
    : ::google::protobuf::Message(arena) {
  STTRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (request_type_case()) {
    case REQUEST_TYPE_NOT_SET:
      break;
      case kAudioConfig:
        _impl_.request_type_.audio_config_ = ::google::protobuf::Message::CopyConstruct<::service::AudioConfig>(arena, *from._impl_.request_type_.audio_config_);
        break;
      case kAudioChunk:
        new (&_impl_.request_type_.audio_chunk_) decltype(_impl_.request_type_.audio_chunk_){arena, from._impl_.request_type_.audio_chunk_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:service.STTRequest)
}
inline PROTOBUF_NDEBUG_INLINE STTRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : request_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void STTRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
STTRequest::~STTRequest() {
  // @@protoc_insertion_point(destructor:service.STTRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void STTRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_request_type()) {
    clear_request_type();
  }
  _impl_.~Impl_();
}

void STTRequest::clear_request_type() {
// @@protoc_insertion_point(one_of_clear_start:service.STTRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (request_type_case()) {
    case kAudioConfig: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.audio_config_;
      }
      break;
    }
    case kAudioChunk: {
      _impl_.request_type_.audio_chunk_.Destroy();
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = REQUEST_TYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
STTRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(STTRequest, _impl_._cached_size_),
              false,
          },
          &STTRequest::MergeImpl,
          &STTRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void STTRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:service.STTRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* STTRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 0, 2> STTRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_STTRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::STTRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .service.AudioConfig audio_config = 1;
    {PROTOBUF_FIELD_OFFSET(STTRequest, _impl_.request_type_.audio_config_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes audio_chunk = 2;
    {PROTOBUF_FIELD_OFFSET(STTRequest, _impl_.request_type_.audio_chunk_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::service::AudioConfig>()},
  }}, {{
  }},
};

::uint8_t* STTRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.STTRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (request_type_case()) {
    case kAudioConfig: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.request_type_.audio_config_, _impl_.request_type_.audio_config_->GetCachedSize(), target, stream);
      break;
    }
    case kAudioChunk: {
      const std::string& _s = this->_internal_audio_chunk();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.STTRequest)
  return target;
}

::size_t STTRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.STTRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (request_type_case()) {
    // .service.AudioConfig audio_config = 1;
    case kAudioConfig: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.request_type_.audio_config_);
      break;
    }
    // bytes audio_chunk = 2;
    case kAudioChunk: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_audio_chunk());
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void STTRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<STTRequest*>(&to_msg);
  auto& from = static_cast<const STTRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:service.STTRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_request_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAudioConfig: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.audio_config_ =
              ::google::protobuf::Message::CopyConstruct<::service::AudioConfig>(arena, *from._impl_.request_type_.audio_config_);
        } else {
          _this->_impl_.request_type_.audio_config_->MergeFrom(from._internal_audio_config());
        }
        break;
      }
      case kAudioChunk: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.audio_chunk_.InitDefault();
        }
        _this->_impl_.request_type_.audio_chunk_.Set(from._internal_audio_chunk(), arena);
        break;
      }
      case REQUEST_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void STTRequest::CopyFrom(const STTRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.STTRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool STTRequest::IsInitialized() const {
  return true;
}

void STTRequest::InternalSwap(STTRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.request_type_, other->_impl_.request_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata STTRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[5]);
}
// ===================================================================

class STTResponse::_Internal {
 public:
};

STTResponse::STTResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.STTResponse)
}
inline PROTOBUF_NDEBUG_INLINE STTResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : text_(arena, from.text_),
        _cached_size_{0} {}

STTResponse::STTResponse(
    ::google::protobuf::Arena* arena,
    const STTResponse& from)
    : ::google::protobuf::Message(arena) {
  STTResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:service.STTResponse)
}
inline PROTOBUF_NDEBUG_INLINE STTResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : text_(arena),
        _cached_size_{0} {}

inline void STTResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
STTResponse::~STTResponse() {
  // @@protoc_insertion_point(destructor:service.STTResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void STTResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.text_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
STTResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(STTResponse, _impl_._cached_size_),
              false,
          },
          &STTResponse::MergeImpl,
          &STTResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void STTResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.STTResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* STTResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 32, 2> STTResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_STTResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::STTResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string text = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(STTResponse, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string text = 1;
    {PROTOBUF_FIELD_OFFSET(STTResponse, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\4\0\0\0\0\0\0"
    "service.STTResponse"
    "text"
  }},
};

::uint8_t* STTResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.STTResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.STTResponse.text");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.STTResponse)
  return target;
}

::size_t STTResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.STTResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void STTResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<STTResponse*>(&to_msg);
  auto& from = static_cast<const STTResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.STTResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void STTResponse::CopyFrom(const STTResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.STTResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool STTResponse::IsInitialized() const {
  return true;
}

void STTResponse::InternalSwap(STTResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
}

::google::protobuf::Metadata STTResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[6]);
}
// ===================================================================

class DynamicInfoConfig::_Internal {
 public:
};

DynamicInfoConfig::DynamicInfoConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.DynamicInfoConfig)
}
inline PROTOBUF_NDEBUG_INLINE DynamicInfoConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : text_(arena, from.text_),
        _cached_size_{0} {}

DynamicInfoConfig::DynamicInfoConfig(
    ::google::protobuf::Arena* arena,
    const DynamicInfoConfig& from)
    : ::google::protobuf::Message(arena) {
  DynamicInfoConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:service.DynamicInfoConfig)
}
inline PROTOBUF_NDEBUG_INLINE DynamicInfoConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : text_(arena),
        _cached_size_{0} {}

inline void DynamicInfoConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DynamicInfoConfig::~DynamicInfoConfig() {
  // @@protoc_insertion_point(destructor:service.DynamicInfoConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DynamicInfoConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.text_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
DynamicInfoConfig::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(DynamicInfoConfig, _impl_._cached_size_),
              false,
          },
          &DynamicInfoConfig::MergeImpl,
          &DynamicInfoConfig::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void DynamicInfoConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:service.DynamicInfoConfig)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DynamicInfoConfig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 38, 2> DynamicInfoConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DynamicInfoConfig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::DynamicInfoConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string text = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DynamicInfoConfig, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string text = 1;
    {PROTOBUF_FIELD_OFFSET(DynamicInfoConfig, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\4\0\0\0\0\0\0"
    "service.DynamicInfoConfig"
    "text"
  }},
};

::uint8_t* DynamicInfoConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.DynamicInfoConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.DynamicInfoConfig.text");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.DynamicInfoConfig)
  return target;
}

::size_t DynamicInfoConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.DynamicInfoConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void DynamicInfoConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DynamicInfoConfig*>(&to_msg);
  auto& from = static_cast<const DynamicInfoConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.DynamicInfoConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DynamicInfoConfig::CopyFrom(const DynamicInfoConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.DynamicInfoConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DynamicInfoConfig::IsInitialized() const {
  return true;
}

void DynamicInfoConfig::InternalSwap(DynamicInfoConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
}

::google::protobuf::Metadata DynamicInfoConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[7]);
}
// ===================================================================

class VisionInput_ImageData::_Internal {
 public:
};

VisionInput_ImageData::VisionInput_ImageData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.VisionInput.ImageData)
}
inline PROTOBUF_NDEBUG_INLINE VisionInput_ImageData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_(arena, from.data_),
        _cached_size_{0} {}

VisionInput_ImageData::VisionInput_ImageData(
    ::google::protobuf::Arena* arena,
    const VisionInput_ImageData& from)
    : ::google::protobuf::Message(arena) {
  VisionInput_ImageData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, width_),
           offsetof(Impl_, height_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::height_));

  // @@protoc_insertion_point(copy_constructor:service.VisionInput.ImageData)
}
inline PROTOBUF_NDEBUG_INLINE VisionInput_ImageData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void VisionInput_ImageData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::height_));
}
VisionInput_ImageData::~VisionInput_ImageData() {
  // @@protoc_insertion_point(destructor:service.VisionInput.ImageData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VisionInput_ImageData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
VisionInput_ImageData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(VisionInput_ImageData, _impl_._cached_size_),
              false,
          },
          &VisionInput_ImageData::MergeImpl,
          &VisionInput_ImageData::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void VisionInput_ImageData::Clear() {
// @@protoc_insertion_point(message_clear_start:service.VisionInput.ImageData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.width_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.height_) -
      reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VisionInput_ImageData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> VisionInput_ImageData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VisionInput_ImageData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::VisionInput_ImageData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 width = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VisionInput_ImageData, _impl_.width_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VisionInput_ImageData, _impl_.width_)}},
    // int32 height = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VisionInput_ImageData, _impl_.height_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(VisionInput_ImageData, _impl_.height_)}},
    // bytes data = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(VisionInput_ImageData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 width = 1;
    {PROTOBUF_FIELD_OFFSET(VisionInput_ImageData, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 height = 2;
    {PROTOBUF_FIELD_OFFSET(VisionInput_ImageData, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bytes data = 3;
    {PROTOBUF_FIELD_OFFSET(VisionInput_ImageData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* VisionInput_ImageData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.VisionInput.ImageData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 width = 1;
  if (this->_internal_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_width(), target);
  }

  // int32 height = 2;
  if (this->_internal_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_height(), target);
  }

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.VisionInput.ImageData)
  return target;
}

::size_t VisionInput_ImageData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.VisionInput.ImageData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // int32 width = 1;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_width());
  }

  // int32 height = 2;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void VisionInput_ImageData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VisionInput_ImageData*>(&to_msg);
  auto& from = static_cast<const VisionInput_ImageData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.VisionInput.ImageData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_width() != 0) {
    _this->_impl_.width_ = from._impl_.width_;
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VisionInput_ImageData::CopyFrom(const VisionInput_ImageData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.VisionInput.ImageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VisionInput_ImageData::IsInitialized() const {
  return true;
}

void VisionInput_ImageData::InternalSwap(VisionInput_ImageData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VisionInput_ImageData, _impl_.height_)
      + sizeof(VisionInput_ImageData::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(VisionInput_ImageData, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::google::protobuf::Metadata VisionInput_ImageData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[8]);
}
// ===================================================================

class VisionInput_VideoData::_Internal {
 public:
};

VisionInput_VideoData::VisionInput_VideoData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.VisionInput.VideoData)
}
inline PROTOBUF_NDEBUG_INLINE VisionInput_VideoData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_(arena, from.data_),
        _cached_size_{0} {}

VisionInput_VideoData::VisionInput_VideoData(
    ::google::protobuf::Arena* arena,
    const VisionInput_VideoData& from)
    : ::google::protobuf::Message(arena) {
  VisionInput_VideoData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fps_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, fps_),
           offsetof(Impl_, height_) -
               offsetof(Impl_, fps_) +
               sizeof(Impl_::height_));

  // @@protoc_insertion_point(copy_constructor:service.VisionInput.VideoData)
}
inline PROTOBUF_NDEBUG_INLINE VisionInput_VideoData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void VisionInput_VideoData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fps_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, fps_) +
               sizeof(Impl_::height_));
}
VisionInput_VideoData::~VisionInput_VideoData() {
  // @@protoc_insertion_point(destructor:service.VisionInput.VideoData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VisionInput_VideoData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
VisionInput_VideoData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(VisionInput_VideoData, _impl_._cached_size_),
              false,
          },
          &VisionInput_VideoData::MergeImpl,
          &VisionInput_VideoData::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void VisionInput_VideoData::Clear() {
// @@protoc_insertion_point(message_clear_start:service.VisionInput.VideoData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.fps_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.height_) -
      reinterpret_cast<char*>(&_impl_.fps_)) + sizeof(_impl_.height_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VisionInput_VideoData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> VisionInput_VideoData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VisionInput_VideoData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::VisionInput_VideoData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(VisionInput_VideoData, _impl_.data_)}},
    // int32 fps = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VisionInput_VideoData, _impl_.fps_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VisionInput_VideoData, _impl_.fps_)}},
    // int32 width = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VisionInput_VideoData, _impl_.width_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(VisionInput_VideoData, _impl_.width_)}},
    // int32 height = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VisionInput_VideoData, _impl_.height_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(VisionInput_VideoData, _impl_.height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 fps = 1;
    {PROTOBUF_FIELD_OFFSET(VisionInput_VideoData, _impl_.fps_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 width = 2;
    {PROTOBUF_FIELD_OFFSET(VisionInput_VideoData, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 height = 3;
    {PROTOBUF_FIELD_OFFSET(VisionInput_VideoData, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bytes data = 4;
    {PROTOBUF_FIELD_OFFSET(VisionInput_VideoData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* VisionInput_VideoData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.VisionInput.VideoData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 fps = 1;
  if (this->_internal_fps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_fps(), target);
  }

  // int32 width = 2;
  if (this->_internal_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_width(), target);
  }

  // int32 height = 3;
  if (this->_internal_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_height(), target);
  }

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.VisionInput.VideoData)
  return target;
}

::size_t VisionInput_VideoData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.VisionInput.VideoData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // int32 fps = 1;
  if (this->_internal_fps() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_fps());
  }

  // int32 width = 2;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_width());
  }

  // int32 height = 3;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void VisionInput_VideoData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VisionInput_VideoData*>(&to_msg);
  auto& from = static_cast<const VisionInput_VideoData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.VisionInput.VideoData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_fps() != 0) {
    _this->_impl_.fps_ = from._impl_.fps_;
  }
  if (from._internal_width() != 0) {
    _this->_impl_.width_ = from._impl_.width_;
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VisionInput_VideoData::CopyFrom(const VisionInput_VideoData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.VisionInput.VideoData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VisionInput_VideoData::IsInitialized() const {
  return true;
}

void VisionInput_VideoData::InternalSwap(VisionInput_VideoData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VisionInput_VideoData, _impl_.height_)
      + sizeof(VisionInput_VideoData::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(VisionInput_VideoData, _impl_.fps_)>(
          reinterpret_cast<char*>(&_impl_.fps_),
          reinterpret_cast<char*>(&other->_impl_.fps_));
}

::google::protobuf::Metadata VisionInput_VideoData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[9]);
}
// ===================================================================

class VisionInput::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::service::VisionInput, _impl_._oneof_case_);
};

void VisionInput::set_allocated_image_data(::service::VisionInput_ImageData* image_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_vision_data();
  if (image_data) {
    ::google::protobuf::Arena* submessage_arena = image_data->GetArena();
    if (message_arena != submessage_arena) {
      image_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, image_data, submessage_arena);
    }
    set_has_image_data();
    _impl_.vision_data_.image_data_ = image_data;
  }
  // @@protoc_insertion_point(field_set_allocated:service.VisionInput.image_data)
}
void VisionInput::set_allocated_video_data(::service::VisionInput_VideoData* video_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_vision_data();
  if (video_data) {
    ::google::protobuf::Arena* submessage_arena = video_data->GetArena();
    if (message_arena != submessage_arena) {
      video_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, video_data, submessage_arena);
    }
    set_has_video_data();
    _impl_.vision_data_.video_data_ = video_data;
  }
  // @@protoc_insertion_point(field_set_allocated:service.VisionInput.video_data)
}
VisionInput::VisionInput(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.VisionInput)
}
inline PROTOBUF_NDEBUG_INLINE VisionInput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : vision_data_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

VisionInput::VisionInput(
    ::google::protobuf::Arena* arena,
    const VisionInput& from)
    : ::google::protobuf::Message(arena) {
  VisionInput* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (vision_data_case()) {
    case VISION_DATA_NOT_SET:
      break;
      case kImageData:
        _impl_.vision_data_.image_data_ = ::google::protobuf::Message::CopyConstruct<::service::VisionInput_ImageData>(arena, *from._impl_.vision_data_.image_data_);
        break;
      case kVideoData:
        _impl_.vision_data_.video_data_ = ::google::protobuf::Message::CopyConstruct<::service::VisionInput_VideoData>(arena, *from._impl_.vision_data_.video_data_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:service.VisionInput)
}
inline PROTOBUF_NDEBUG_INLINE VisionInput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : vision_data_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void VisionInput::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VisionInput::~VisionInput() {
  // @@protoc_insertion_point(destructor:service.VisionInput)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VisionInput::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_vision_data()) {
    clear_vision_data();
  }
  _impl_.~Impl_();
}

void VisionInput::clear_vision_data() {
// @@protoc_insertion_point(one_of_clear_start:service.VisionInput)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (vision_data_case()) {
    case kImageData: {
      if (GetArena() == nullptr) {
        delete _impl_.vision_data_.image_data_;
      }
      break;
    }
    case kVideoData: {
      if (GetArena() == nullptr) {
        delete _impl_.vision_data_.video_data_;
      }
      break;
    }
    case VISION_DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VISION_DATA_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
VisionInput::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(VisionInput, _impl_._cached_size_),
              false,
          },
          &VisionInput::MergeImpl,
          &VisionInput::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void VisionInput::Clear() {
// @@protoc_insertion_point(message_clear_start:service.VisionInput)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_vision_data();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VisionInput::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> VisionInput::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VisionInput_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::VisionInput>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .service.VisionInput.ImageData image_data = 1;
    {PROTOBUF_FIELD_OFFSET(VisionInput, _impl_.vision_data_.image_data_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .service.VisionInput.VideoData video_data = 2;
    {PROTOBUF_FIELD_OFFSET(VisionInput, _impl_.vision_data_.video_data_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::service::VisionInput_ImageData>()},
    {::_pbi::TcParser::GetTable<::service::VisionInput_VideoData>()},
  }}, {{
  }},
};

::uint8_t* VisionInput::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.VisionInput)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (vision_data_case()) {
    case kImageData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.vision_data_.image_data_, _impl_.vision_data_.image_data_->GetCachedSize(), target, stream);
      break;
    }
    case kVideoData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.vision_data_.video_data_, _impl_.vision_data_.video_data_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.VisionInput)
  return target;
}

::size_t VisionInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.VisionInput)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (vision_data_case()) {
    // .service.VisionInput.ImageData image_data = 1;
    case kImageData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.vision_data_.image_data_);
      break;
    }
    // .service.VisionInput.VideoData video_data = 2;
    case kVideoData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.vision_data_.video_data_);
      break;
    }
    case VISION_DATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void VisionInput::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VisionInput*>(&to_msg);
  auto& from = static_cast<const VisionInput&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:service.VisionInput)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_vision_data();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kImageData: {
        if (oneof_needs_init) {
          _this->_impl_.vision_data_.image_data_ =
              ::google::protobuf::Message::CopyConstruct<::service::VisionInput_ImageData>(arena, *from._impl_.vision_data_.image_data_);
        } else {
          _this->_impl_.vision_data_.image_data_->MergeFrom(from._internal_image_data());
        }
        break;
      }
      case kVideoData: {
        if (oneof_needs_init) {
          _this->_impl_.vision_data_.video_data_ =
              ::google::protobuf::Message::CopyConstruct<::service::VisionInput_VideoData>(arena, *from._impl_.vision_data_.video_data_);
        } else {
          _this->_impl_.vision_data_.video_data_->MergeFrom(from._internal_video_data());
        }
        break;
      }
      case VISION_DATA_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VisionInput::CopyFrom(const VisionInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.VisionInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VisionInput::IsInitialized() const {
  return true;
}

void VisionInput::InternalSwap(VisionInput* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.vision_data_, other->_impl_.vision_data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata VisionInput::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[10]);
}
// ===================================================================

GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse() {}
GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[11]);
}
// ===================================================================

class GetResponseRequest_GetResponseConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<GetResponseRequest_GetResponseConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_._has_bits_);
};

GetResponseRequest_GetResponseConfig::GetResponseRequest_GetResponseConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseRequest.GetResponseConfig)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseRequest_GetResponseConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        narrative_template_keys_{visibility, arena, from.narrative_template_keys_},
        character_id_(arena, from.character_id_),
        api_key_(arena, from.api_key_),
        session_id_(arena, from.session_id_),
        speaker_(arena, from.speaker_),
        language_code_(arena, from.language_code_),
        speaker_id_(arena, from.speaker_id_),
        api_auth_token_(arena, from.api_auth_token_) {}

GetResponseRequest_GetResponseConfig::GetResponseRequest_GetResponseConfig(
    ::google::protobuf::Arena* arena,
    const GetResponseRequest_GetResponseConfig& from)
    : ::google::protobuf::Message(arena) {
  GetResponseRequest_GetResponseConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.audio_config_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::service::AudioConfig>(
                              arena, *from._impl_.audio_config_)
                        : nullptr;
  _impl_.action_config_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::service::ActionConfig>(
                              arena, *from._impl_.action_config_)
                        : nullptr;
  _impl_.dynamic_info_config_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::service::DynamicInfoConfig>(
                              arena, *from._impl_.dynamic_info_config_)
                        : nullptr;
  _impl_.vision_input_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::service::VisionInput>(
                              arena, *from._impl_.vision_input_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:service.GetResponseRequest.GetResponseConfig)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseRequest_GetResponseConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        narrative_template_keys_{visibility, arena},
        character_id_(arena),
        api_key_(arena),
        session_id_(arena),
        speaker_(arena),
        language_code_(arena),
        speaker_id_(arena),
        api_auth_token_(arena) {}

inline void GetResponseRequest_GetResponseConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, audio_config_),
           0,
           offsetof(Impl_, vision_input_) -
               offsetof(Impl_, audio_config_) +
               sizeof(Impl_::vision_input_));
}
GetResponseRequest_GetResponseConfig::~GetResponseRequest_GetResponseConfig() {
  // @@protoc_insertion_point(destructor:service.GetResponseRequest.GetResponseConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetResponseRequest_GetResponseConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.character_id_.Destroy();
  _impl_.api_key_.Destroy();
  _impl_.session_id_.Destroy();
  _impl_.speaker_.Destroy();
  _impl_.language_code_.Destroy();
  _impl_.speaker_id_.Destroy();
  _impl_.api_auth_token_.Destroy();
  delete _impl_.audio_config_;
  delete _impl_.action_config_;
  delete _impl_.dynamic_info_config_;
  delete _impl_.vision_input_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetResponseRequest_GetResponseConfig::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_._cached_size_),
              false,
          },
          &GetResponseRequest_GetResponseConfig::MergeImpl,
          &GetResponseRequest_GetResponseConfig::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GetResponseRequest_GetResponseConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseRequest.GetResponseConfig)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.narrative_template_keys_.Clear();
  _impl_.character_id_.ClearToEmpty();
  _impl_.api_key_.ClearToEmpty();
  _impl_.session_id_.ClearToEmpty();
  _impl_.speaker_.ClearToEmpty();
  _impl_.language_code_.ClearToEmpty();
  _impl_.speaker_id_.ClearToEmpty();
  _impl_.api_auth_token_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.audio_config_ != nullptr);
      _impl_.audio_config_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.action_config_ != nullptr);
      _impl_.action_config_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.dynamic_info_config_ != nullptr);
      _impl_.dynamic_info_config_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.vision_input_ != nullptr);
      _impl_.vision_input_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetResponseRequest_GetResponseConfig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 5, 157, 2> GetResponseRequest_GetResponseConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959105,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetResponseRequest_GetResponseConfig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::GetResponseRequest_GetResponseConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string character_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.character_id_)}},
    // string api_key = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.api_key_)}},
    // string session_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.session_id_)}},
    // .service.AudioConfig audio_config = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.audio_config_)}},
    // .service.ActionConfig action_config = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.action_config_)}},
    // string speaker = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.speaker_)}},
    // string language_code = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.language_code_)}},
    // string speaker_id = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.speaker_id_)}},
    // string api_auth_token = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.api_auth_token_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .service.DynamicInfoConfig dynamic_info_config = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 2, 3, PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.dynamic_info_config_)}},
    // .service.VisionInput vision_input = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 3, 4, PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.vision_input_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string character_id = 2;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.character_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string api_key = 3;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.api_key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_id = 4;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.session_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .service.AudioConfig audio_config = 5;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.audio_config_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .service.ActionConfig action_config = 6;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.action_config_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string speaker = 7;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.speaker_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string language_code = 8;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.language_code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string speaker_id = 9;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.speaker_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string api_auth_token = 10;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.api_auth_token_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> narrative_template_keys = 11;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.narrative_template_keys_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .service.DynamicInfoConfig dynamic_info_config = 12;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.dynamic_info_config_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .service.VisionInput vision_input = 13;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.vision_input_), _Internal::kHasBitsOffset + 3, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::service::AudioConfig>()},
    {::_pbi::TcParser::GetTable<::service::ActionConfig>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GetResponseRequest_GetResponseConfig()._impl_.narrative_template_keys_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetTable<::service::DynamicInfoConfig>()},
    {::_pbi::TcParser::GetTable<::service::VisionInput>()},
  }}, {{
    "\54\14\7\12\0\0\7\15\12\16\27\0\0\0\0\0"
    "service.GetResponseRequest.GetResponseConfig"
    "character_id"
    "api_key"
    "session_id"
    "speaker"
    "language_code"
    "speaker_id"
    "api_auth_token"
    "narrative_template_keys"
  }},
};

::uint8_t* GetResponseRequest_GetResponseConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseRequest.GetResponseConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string character_id = 2;
  if (!this->_internal_character_id().empty()) {
    const std::string& _s = this->_internal_character_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseRequest.GetResponseConfig.character_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string api_key = 3;
  if (!this->_internal_api_key().empty()) {
    const std::string& _s = this->_internal_api_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseRequest.GetResponseConfig.api_key");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string session_id = 4;
  if (!this->_internal_session_id().empty()) {
    const std::string& _s = this->_internal_session_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseRequest.GetResponseConfig.session_id");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .service.AudioConfig audio_config = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.audio_config_, _impl_.audio_config_->GetCachedSize(), target, stream);
  }

  // .service.ActionConfig action_config = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.action_config_, _impl_.action_config_->GetCachedSize(), target, stream);
  }

  // string speaker = 7;
  if (!this->_internal_speaker().empty()) {
    const std::string& _s = this->_internal_speaker();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseRequest.GetResponseConfig.speaker");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string language_code = 8;
  if (!this->_internal_language_code().empty()) {
    const std::string& _s = this->_internal_language_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseRequest.GetResponseConfig.language_code");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // string speaker_id = 9;
  if (!this->_internal_speaker_id().empty()) {
    const std::string& _s = this->_internal_speaker_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseRequest.GetResponseConfig.speaker_id");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string api_auth_token = 10;
  if (!this->_internal_api_auth_token().empty()) {
    const std::string& _s = this->_internal_api_auth_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseRequest.GetResponseConfig.api_auth_token");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // map<string, string> narrative_template_keys = 11;
  if (!_internal_narrative_template_keys().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_narrative_template_keys();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            11, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseRequest.GetResponseConfig.narrative_template_keys");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseRequest.GetResponseConfig.narrative_template_keys");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            11, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseRequest.GetResponseConfig.narrative_template_keys");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseRequest.GetResponseConfig.narrative_template_keys");
      }
    }
  }

  // .service.DynamicInfoConfig dynamic_info_config = 12;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *_impl_.dynamic_info_config_, _impl_.dynamic_info_config_->GetCachedSize(), target, stream);
  }

  // .service.VisionInput vision_input = 13;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, *_impl_.vision_input_, _impl_.vision_input_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseRequest.GetResponseConfig)
  return target;
}

::size_t GetResponseRequest_GetResponseConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseRequest.GetResponseConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> narrative_template_keys = 11;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_narrative_template_keys_size());
  for (const auto& entry : _internal_narrative_template_keys()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string character_id = 2;
  if (!this->_internal_character_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_character_id());
  }

  // string api_key = 3;
  if (!this->_internal_api_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_api_key());
  }

  // string session_id = 4;
  if (!this->_internal_session_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_session_id());
  }

  // string speaker = 7;
  if (!this->_internal_speaker().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_speaker());
  }

  // string language_code = 8;
  if (!this->_internal_language_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_language_code());
  }

  // string speaker_id = 9;
  if (!this->_internal_speaker_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_speaker_id());
  }

  // string api_auth_token = 10;
  if (!this->_internal_api_auth_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_api_auth_token());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .service.AudioConfig audio_config = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.audio_config_);
    }

    // .service.ActionConfig action_config = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.action_config_);
    }

    // .service.DynamicInfoConfig dynamic_info_config = 12;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.dynamic_info_config_);
    }

    // .service.VisionInput vision_input = 13;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.vision_input_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetResponseRequest_GetResponseConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetResponseRequest_GetResponseConfig*>(&to_msg);
  auto& from = static_cast<const GetResponseRequest_GetResponseConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseRequest.GetResponseConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.narrative_template_keys_.MergeFrom(from._impl_.narrative_template_keys_);
  if (!from._internal_character_id().empty()) {
    _this->_internal_set_character_id(from._internal_character_id());
  }
  if (!from._internal_api_key().empty()) {
    _this->_internal_set_api_key(from._internal_api_key());
  }
  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (!from._internal_speaker().empty()) {
    _this->_internal_set_speaker(from._internal_speaker());
  }
  if (!from._internal_language_code().empty()) {
    _this->_internal_set_language_code(from._internal_language_code());
  }
  if (!from._internal_speaker_id().empty()) {
    _this->_internal_set_speaker_id(from._internal_speaker_id());
  }
  if (!from._internal_api_auth_token().empty()) {
    _this->_internal_set_api_auth_token(from._internal_api_auth_token());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.audio_config_ != nullptr);
      if (_this->_impl_.audio_config_ == nullptr) {
        _this->_impl_.audio_config_ =
            ::google::protobuf::Message::CopyConstruct<::service::AudioConfig>(arena, *from._impl_.audio_config_);
      } else {
        _this->_impl_.audio_config_->MergeFrom(*from._impl_.audio_config_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.action_config_ != nullptr);
      if (_this->_impl_.action_config_ == nullptr) {
        _this->_impl_.action_config_ =
            ::google::protobuf::Message::CopyConstruct<::service::ActionConfig>(arena, *from._impl_.action_config_);
      } else {
        _this->_impl_.action_config_->MergeFrom(*from._impl_.action_config_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.dynamic_info_config_ != nullptr);
      if (_this->_impl_.dynamic_info_config_ == nullptr) {
        _this->_impl_.dynamic_info_config_ =
            ::google::protobuf::Message::CopyConstruct<::service::DynamicInfoConfig>(arena, *from._impl_.dynamic_info_config_);
      } else {
        _this->_impl_.dynamic_info_config_->MergeFrom(*from._impl_.dynamic_info_config_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.vision_input_ != nullptr);
      if (_this->_impl_.vision_input_ == nullptr) {
        _this->_impl_.vision_input_ =
            ::google::protobuf::Message::CopyConstruct<::service::VisionInput>(arena, *from._impl_.vision_input_);
      } else {
        _this->_impl_.vision_input_->MergeFrom(*from._impl_.vision_input_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseRequest_GetResponseConfig::CopyFrom(const GetResponseRequest_GetResponseConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseRequest.GetResponseConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetResponseRequest_GetResponseConfig::IsInitialized() const {
  return true;
}

void GetResponseRequest_GetResponseConfig::InternalSwap(GetResponseRequest_GetResponseConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.narrative_template_keys_.InternalSwap(&other->_impl_.narrative_template_keys_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.character_id_, &other->_impl_.character_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.api_key_, &other->_impl_.api_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.speaker_, &other->_impl_.speaker_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.language_code_, &other->_impl_.language_code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.speaker_id_, &other->_impl_.speaker_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.api_auth_token_, &other->_impl_.api_auth_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.vision_input_)
      + sizeof(GetResponseRequest_GetResponseConfig::_impl_.vision_input_)
      - PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.audio_config_)>(
          reinterpret_cast<char*>(&_impl_.audio_config_),
          reinterpret_cast<char*>(&other->_impl_.audio_config_));
}

::google::protobuf::Metadata GetResponseRequest_GetResponseConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[12]);
}
// ===================================================================

class GetResponseRequest_GetResponseData::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseData, _impl_._oneof_case_);
};

void GetResponseRequest_GetResponseData::set_allocated_trigger_data(::service::TriggerConfig* trigger_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_input_type();
  if (trigger_data) {
    ::google::protobuf::Arena* submessage_arena = trigger_data->GetArena();
    if (message_arena != submessage_arena) {
      trigger_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, trigger_data, submessage_arena);
    }
    set_has_trigger_data();
    _impl_.input_type_.trigger_data_ = trigger_data;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseRequest.GetResponseData.trigger_data)
}
GetResponseRequest_GetResponseData::GetResponseRequest_GetResponseData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseRequest.GetResponseData)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseRequest_GetResponseData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : input_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GetResponseRequest_GetResponseData::GetResponseRequest_GetResponseData(
    ::google::protobuf::Arena* arena,
    const GetResponseRequest_GetResponseData& from)
    : ::google::protobuf::Message(arena) {
  GetResponseRequest_GetResponseData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (input_type_case()) {
    case INPUT_TYPE_NOT_SET:
      break;
      case kAudioData:
        new (&_impl_.input_type_.audio_data_) decltype(_impl_.input_type_.audio_data_){arena, from._impl_.input_type_.audio_data_};
        break;
      case kTextData:
        new (&_impl_.input_type_.text_data_) decltype(_impl_.input_type_.text_data_){arena, from._impl_.input_type_.text_data_};
        break;
      case kTriggerData:
        _impl_.input_type_.trigger_data_ = ::google::protobuf::Message::CopyConstruct<::service::TriggerConfig>(arena, *from._impl_.input_type_.trigger_data_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:service.GetResponseRequest.GetResponseData)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseRequest_GetResponseData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : input_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GetResponseRequest_GetResponseData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetResponseRequest_GetResponseData::~GetResponseRequest_GetResponseData() {
  // @@protoc_insertion_point(destructor:service.GetResponseRequest.GetResponseData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetResponseRequest_GetResponseData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_input_type()) {
    clear_input_type();
  }
  _impl_.~Impl_();
}

void GetResponseRequest_GetResponseData::clear_input_type() {
// @@protoc_insertion_point(one_of_clear_start:service.GetResponseRequest.GetResponseData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (input_type_case()) {
    case kAudioData: {
      _impl_.input_type_.audio_data_.Destroy();
      break;
    }
    case kTextData: {
      _impl_.input_type_.text_data_.Destroy();
      break;
    }
    case kTriggerData: {
      if (GetArena() == nullptr) {
        delete _impl_.input_type_.trigger_data_;
      }
      break;
    }
    case INPUT_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = INPUT_TYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
GetResponseRequest_GetResponseData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseData, _impl_._cached_size_),
              false,
          },
          &GetResponseRequest_GetResponseData::MergeImpl,
          &GetResponseRequest_GetResponseData::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GetResponseRequest_GetResponseData::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseRequest.GetResponseData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_input_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetResponseRequest_GetResponseData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 1, 60, 2> GetResponseRequest_GetResponseData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetResponseRequest_GetResponseData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::GetResponseRequest_GetResponseData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes audio_data = 1;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseData, _impl_.input_type_.audio_data_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // string text_data = 2;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseData, _impl_.input_type_.text_data_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .service.TriggerConfig trigger_data = 3;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseData, _impl_.input_type_.trigger_data_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::service::TriggerConfig>()},
  }}, {{
    "\52\0\11\0\0\0\0\0"
    "service.GetResponseRequest.GetResponseData"
    "text_data"
  }},
};

::uint8_t* GetResponseRequest_GetResponseData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseRequest.GetResponseData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (input_type_case()) {
    case kAudioData: {
      const std::string& _s = this->_internal_audio_data();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
      break;
    }
    case kTextData: {
      const std::string& _s = this->_internal_text_data();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseRequest.GetResponseData.text_data");
      target = stream->WriteStringMaybeAliased(2, _s, target);
      break;
    }
    case kTriggerData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.input_type_.trigger_data_, _impl_.input_type_.trigger_data_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseRequest.GetResponseData)
  return target;
}

::size_t GetResponseRequest_GetResponseData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseRequest.GetResponseData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (input_type_case()) {
    // bytes audio_data = 1;
    case kAudioData: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_audio_data());
      break;
    }
    // string text_data = 2;
    case kTextData: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_text_data());
      break;
    }
    // .service.TriggerConfig trigger_data = 3;
    case kTriggerData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.input_type_.trigger_data_);
      break;
    }
    case INPUT_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetResponseRequest_GetResponseData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetResponseRequest_GetResponseData*>(&to_msg);
  auto& from = static_cast<const GetResponseRequest_GetResponseData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseRequest.GetResponseData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_input_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAudioData: {
        if (oneof_needs_init) {
          _this->_impl_.input_type_.audio_data_.InitDefault();
        }
        _this->_impl_.input_type_.audio_data_.Set(from._internal_audio_data(), arena);
        break;
      }
      case kTextData: {
        if (oneof_needs_init) {
          _this->_impl_.input_type_.text_data_.InitDefault();
        }
        _this->_impl_.input_type_.text_data_.Set(from._internal_text_data(), arena);
        break;
      }
      case kTriggerData: {
        if (oneof_needs_init) {
          _this->_impl_.input_type_.trigger_data_ =
              ::google::protobuf::Message::CopyConstruct<::service::TriggerConfig>(arena, *from._impl_.input_type_.trigger_data_);
        } else {
          _this->_impl_.input_type_.trigger_data_->MergeFrom(from._internal_trigger_data());
        }
        break;
      }
      case INPUT_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseRequest_GetResponseData::CopyFrom(const GetResponseRequest_GetResponseData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseRequest.GetResponseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetResponseRequest_GetResponseData::IsInitialized() const {
  return true;
}

void GetResponseRequest_GetResponseData::InternalSwap(GetResponseRequest_GetResponseData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.input_type_, other->_impl_.input_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GetResponseRequest_GetResponseData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[13]);
}
// ===================================================================

class GetResponseRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest, _impl_._oneof_case_);
};

void GetResponseRequest::set_allocated_get_response_config(::service::GetResponseRequest_GetResponseConfig* get_response_config) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (get_response_config) {
    ::google::protobuf::Arena* submessage_arena = get_response_config->GetArena();
    if (message_arena != submessage_arena) {
      get_response_config = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_response_config, submessage_arena);
    }
    set_has_get_response_config();
    _impl_.request_type_.get_response_config_ = get_response_config;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseRequest.get_response_config)
}
void GetResponseRequest::set_allocated_get_response_data(::service::GetResponseRequest_GetResponseData* get_response_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (get_response_data) {
    ::google::protobuf::Arena* submessage_arena = get_response_data->GetArena();
    if (message_arena != submessage_arena) {
      get_response_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_response_data, submessage_arena);
    }
    set_has_get_response_data();
    _impl_.request_type_.get_response_data_ = get_response_data;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseRequest.get_response_data)
}
GetResponseRequest::GetResponseRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : request_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GetResponseRequest::GetResponseRequest(
    ::google::protobuf::Arena* arena,
    const GetResponseRequest& from)
    : ::google::protobuf::Message(arena) {
  GetResponseRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (request_type_case()) {
    case REQUEST_TYPE_NOT_SET:
      break;
      case kGetResponseConfig:
        _impl_.request_type_.get_response_config_ = ::google::protobuf::Message::CopyConstruct<::service::GetResponseRequest_GetResponseConfig>(arena, *from._impl_.request_type_.get_response_config_);
        break;
      case kGetResponseData:
        _impl_.request_type_.get_response_data_ = ::google::protobuf::Message::CopyConstruct<::service::GetResponseRequest_GetResponseData>(arena, *from._impl_.request_type_.get_response_data_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:service.GetResponseRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : request_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GetResponseRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetResponseRequest::~GetResponseRequest() {
  // @@protoc_insertion_point(destructor:service.GetResponseRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetResponseRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_request_type()) {
    clear_request_type();
  }
  _impl_.~Impl_();
}

void GetResponseRequest::clear_request_type() {
// @@protoc_insertion_point(one_of_clear_start:service.GetResponseRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (request_type_case()) {
    case kGetResponseConfig: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.get_response_config_;
      }
      break;
    }
    case kGetResponseData: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.get_response_data_;
      }
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = REQUEST_TYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
GetResponseRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetResponseRequest, _impl_._cached_size_),
              false,
          },
          &GetResponseRequest::MergeImpl,
          &GetResponseRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GetResponseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetResponseRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> GetResponseRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetResponseRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::GetResponseRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .service.GetResponseRequest.GetResponseConfig get_response_config = 1;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest, _impl_.request_type_.get_response_config_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .service.GetResponseRequest.GetResponseData get_response_data = 2;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequest, _impl_.request_type_.get_response_data_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::service::GetResponseRequest_GetResponseConfig>()},
    {::_pbi::TcParser::GetTable<::service::GetResponseRequest_GetResponseData>()},
  }}, {{
  }},
};

::uint8_t* GetResponseRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (request_type_case()) {
    case kGetResponseConfig: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.request_type_.get_response_config_, _impl_.request_type_.get_response_config_->GetCachedSize(), target, stream);
      break;
    }
    case kGetResponseData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.request_type_.get_response_data_, _impl_.request_type_.get_response_data_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseRequest)
  return target;
}

::size_t GetResponseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (request_type_case()) {
    // .service.GetResponseRequest.GetResponseConfig get_response_config = 1;
    case kGetResponseConfig: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.request_type_.get_response_config_);
      break;
    }
    // .service.GetResponseRequest.GetResponseData get_response_data = 2;
    case kGetResponseData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.request_type_.get_response_data_);
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetResponseRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetResponseRequest*>(&to_msg);
  auto& from = static_cast<const GetResponseRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_request_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kGetResponseConfig: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.get_response_config_ =
              ::google::protobuf::Message::CopyConstruct<::service::GetResponseRequest_GetResponseConfig>(arena, *from._impl_.request_type_.get_response_config_);
        } else {
          _this->_impl_.request_type_.get_response_config_->MergeFrom(from._internal_get_response_config());
        }
        break;
      }
      case kGetResponseData: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.get_response_data_ =
              ::google::protobuf::Message::CopyConstruct<::service::GetResponseRequest_GetResponseData>(arena, *from._impl_.request_type_.get_response_data_);
        } else {
          _this->_impl_.request_type_.get_response_data_->MergeFrom(from._internal_get_response_data());
        }
        break;
      }
      case REQUEST_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseRequest::CopyFrom(const GetResponseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetResponseRequest::IsInitialized() const {
  return true;
}

void GetResponseRequest::InternalSwap(GetResponseRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.request_type_, other->_impl_.request_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GetResponseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[14]);
}
// ===================================================================

class GetResponseRequestSingle::_Internal {
 public:
  using HasBits = decltype(std::declval<GetResponseRequestSingle>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetResponseRequestSingle, _impl_._has_bits_);
};

GetResponseRequestSingle::GetResponseRequestSingle(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseRequestSingle)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseRequestSingle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetResponseRequestSingle::GetResponseRequestSingle(
    ::google::protobuf::Arena* arena,
    const GetResponseRequestSingle& from)
    : ::google::protobuf::Message(arena) {
  GetResponseRequestSingle* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.response_config_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::service::GetResponseRequest>(
                              arena, *from._impl_.response_config_)
                        : nullptr;
  _impl_.response_data_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::service::GetResponseRequest>(
                              arena, *from._impl_.response_data_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:service.GetResponseRequestSingle)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseRequestSingle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetResponseRequestSingle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, response_config_),
           0,
           offsetof(Impl_, response_data_) -
               offsetof(Impl_, response_config_) +
               sizeof(Impl_::response_data_));
}
GetResponseRequestSingle::~GetResponseRequestSingle() {
  // @@protoc_insertion_point(destructor:service.GetResponseRequestSingle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetResponseRequestSingle::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.response_config_;
  delete _impl_.response_data_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetResponseRequestSingle::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetResponseRequestSingle, _impl_._cached_size_),
              false,
          },
          &GetResponseRequestSingle::MergeImpl,
          &GetResponseRequestSingle::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GetResponseRequestSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseRequestSingle)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.response_config_ != nullptr);
      _impl_.response_config_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.response_data_ != nullptr);
      _impl_.response_data_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetResponseRequestSingle::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GetResponseRequestSingle::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetResponseRequestSingle, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetResponseRequestSingle_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::GetResponseRequestSingle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .service.GetResponseRequest response_data = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GetResponseRequestSingle, _impl_.response_data_)}},
    // .service.GetResponseRequest response_config = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetResponseRequestSingle, _impl_.response_config_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .service.GetResponseRequest response_config = 1;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequestSingle, _impl_.response_config_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .service.GetResponseRequest response_data = 2;
    {PROTOBUF_FIELD_OFFSET(GetResponseRequestSingle, _impl_.response_data_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::service::GetResponseRequest>()},
    {::_pbi::TcParser::GetTable<::service::GetResponseRequest>()},
  }}, {{
  }},
};

::uint8_t* GetResponseRequestSingle::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseRequestSingle)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .service.GetResponseRequest response_config = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.response_config_, _impl_.response_config_->GetCachedSize(), target, stream);
  }

  // .service.GetResponseRequest response_data = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.response_data_, _impl_.response_data_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseRequestSingle)
  return target;
}

::size_t GetResponseRequestSingle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseRequestSingle)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .service.GetResponseRequest response_config = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_config_);
    }

    // .service.GetResponseRequest response_data = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_data_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetResponseRequestSingle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetResponseRequestSingle*>(&to_msg);
  auto& from = static_cast<const GetResponseRequestSingle&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseRequestSingle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.response_config_ != nullptr);
      if (_this->_impl_.response_config_ == nullptr) {
        _this->_impl_.response_config_ =
            ::google::protobuf::Message::CopyConstruct<::service::GetResponseRequest>(arena, *from._impl_.response_config_);
      } else {
        _this->_impl_.response_config_->MergeFrom(*from._impl_.response_config_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.response_data_ != nullptr);
      if (_this->_impl_.response_data_ == nullptr) {
        _this->_impl_.response_data_ =
            ::google::protobuf::Message::CopyConstruct<::service::GetResponseRequest>(arena, *from._impl_.response_data_);
      } else {
        _this->_impl_.response_data_->MergeFrom(*from._impl_.response_data_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseRequestSingle::CopyFrom(const GetResponseRequestSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseRequestSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetResponseRequestSingle::IsInitialized() const {
  return true;
}

void GetResponseRequestSingle::InternalSwap(GetResponseRequestSingle* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetResponseRequestSingle, _impl_.response_data_)
      + sizeof(GetResponseRequestSingle::_impl_.response_data_)
      - PROTOBUF_FIELD_OFFSET(GetResponseRequestSingle, _impl_.response_config_)>(
          reinterpret_cast<char*>(&_impl_.response_config_),
          reinterpret_cast<char*>(&other->_impl_.response_config_));
}

::google::protobuf::Metadata GetResponseRequestSingle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[15]);
}
// ===================================================================

class GetResponseResponse_AudioResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetResponseResponse_AudioResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_._oneof_case_);
};

void GetResponseResponse_AudioResponse::set_allocated_visemes_data(::service::VisemesData* visemes_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_face_data_type();
  if (visemes_data) {
    ::google::protobuf::Arena* submessage_arena = visemes_data->GetArena();
    if (message_arena != submessage_arena) {
      visemes_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, visemes_data, submessage_arena);
    }
    set_has_visemes_data();
    _impl_.face_data_type_.visemes_data_ = visemes_data;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseResponse.AudioResponse.visemes_data)
}
void GetResponseResponse_AudioResponse::set_allocated_blendshapes_data(::service::BlendShapesData* blendshapes_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_face_data_type();
  if (blendshapes_data) {
    ::google::protobuf::Arena* submessage_arena = blendshapes_data->GetArena();
    if (message_arena != submessage_arena) {
      blendshapes_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, blendshapes_data, submessage_arena);
    }
    set_has_blendshapes_data();
    _impl_.face_data_type_.blendshapes_data_ = blendshapes_data;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseResponse.AudioResponse.blendshapes_data)
}
void GetResponseResponse_AudioResponse::clear_face_emotion() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.face_emotion_ != nullptr) _impl_.face_emotion_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetResponseResponse_AudioResponse::GetResponseResponse_AudioResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseResponse.AudioResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseResponse_AudioResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        audio_data_(arena, from.audio_data_),
        text_data_(arena, from.text_data_),
        face_data_(arena, from.face_data_),
        face_data_type_{},
        _oneof_case_{from._oneof_case_[0]} {}

GetResponseResponse_AudioResponse::GetResponseResponse_AudioResponse(
    ::google::protobuf::Arena* arena,
    const GetResponseResponse_AudioResponse& from)
    : ::google::protobuf::Message(arena) {
  GetResponseResponse_AudioResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.audio_config_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::service::AudioConfig>(
                              arena, *from._impl_.audio_config_)
                        : nullptr;
  _impl_.face_emotion_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::service::ARKitBlendShapesData>(
                              arena, *from._impl_.face_emotion_)
                        : nullptr;
  _impl_.emotion_response_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::service::EmotionResponse>(
                              arena, *from._impl_.emotion_response_)
                        : nullptr;
  _impl_.end_of_response_ = from._impl_.end_of_response_;
  switch (face_data_type_case()) {
    case FACE_DATA_TYPE_NOT_SET:
      break;
      case kVisemesData:
        _impl_.face_data_type_.visemes_data_ = ::google::protobuf::Message::CopyConstruct<::service::VisemesData>(arena, *from._impl_.face_data_type_.visemes_data_);
        break;
      case kBlendshapesData:
        _impl_.face_data_type_.blendshapes_data_ = ::google::protobuf::Message::CopyConstruct<::service::BlendShapesData>(arena, *from._impl_.face_data_type_.blendshapes_data_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:service.GetResponseResponse.AudioResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseResponse_AudioResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        audio_data_(arena),
        text_data_(arena),
        face_data_(arena),
        face_data_type_{},
        _oneof_case_{} {}

inline void GetResponseResponse_AudioResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, audio_config_),
           0,
           offsetof(Impl_, end_of_response_) -
               offsetof(Impl_, audio_config_) +
               sizeof(Impl_::end_of_response_));
}
GetResponseResponse_AudioResponse::~GetResponseResponse_AudioResponse() {
  // @@protoc_insertion_point(destructor:service.GetResponseResponse.AudioResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetResponseResponse_AudioResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.audio_data_.Destroy();
  _impl_.text_data_.Destroy();
  _impl_.face_data_.Destroy();
  delete _impl_.audio_config_;
  delete _impl_.face_emotion_;
  delete _impl_.emotion_response_;
  if (has_face_data_type()) {
    clear_face_data_type();
  }
  _impl_.~Impl_();
}

void GetResponseResponse_AudioResponse::clear_face_data_type() {
// @@protoc_insertion_point(one_of_clear_start:service.GetResponseResponse.AudioResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (face_data_type_case()) {
    case kVisemesData: {
      if (GetArena() == nullptr) {
        delete _impl_.face_data_type_.visemes_data_;
      }
      break;
    }
    case kBlendshapesData: {
      if (GetArena() == nullptr) {
        delete _impl_.face_data_type_.blendshapes_data_;
      }
      break;
    }
    case FACE_DATA_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FACE_DATA_TYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
GetResponseResponse_AudioResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_._cached_size_),
              false,
          },
          &GetResponseResponse_AudioResponse::MergeImpl,
          &GetResponseResponse_AudioResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GetResponseResponse_AudioResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseResponse.AudioResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.audio_data_.ClearToEmpty();
  _impl_.text_data_.ClearToEmpty();
  _impl_.face_data_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.audio_config_ != nullptr);
      _impl_.audio_config_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.face_emotion_ != nullptr);
      _impl_.face_emotion_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.emotion_response_ != nullptr);
      _impl_.emotion_response_->Clear();
    }
  }
  _impl_.end_of_response_ = false;
  clear_face_data_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetResponseResponse_AudioResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 5, 76, 2> GetResponseResponse_AudioResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetResponseResponse_AudioResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::GetResponseResponse_AudioResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes audio_data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.audio_data_)}},
    // .service.AudioConfig audio_config = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.audio_config_)}},
    // string text_data = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.text_data_)}},
    // bool end_of_response = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetResponseResponse_AudioResponse, _impl_.end_of_response_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.end_of_response_)}},
    // string face_data = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.face_data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .service.ARKitBlendShapesData face_emotion = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 1, 3, PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.face_emotion_)}},
    // .service.EmotionResponse emotion_response = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 2, 4, PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.emotion_response_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes audio_data = 1;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.audio_data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .service.AudioConfig audio_config = 2;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.audio_config_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string text_data = 3;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.text_data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool end_of_response = 4;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.end_of_response_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string face_data = 5;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.face_data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .service.VisemesData visemes_data = 6;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.face_data_type_.visemes_data_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .service.BlendShapesData blendshapes_data = 7;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.face_data_type_.blendshapes_data_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .service.ARKitBlendShapesData face_emotion = 8;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.face_emotion_), _Internal::kHasBitsOffset + 1, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .service.EmotionResponse emotion_response = 9;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.emotion_response_), _Internal::kHasBitsOffset + 2, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::service::AudioConfig>()},
    {::_pbi::TcParser::GetTable<::service::VisemesData>()},
    {::_pbi::TcParser::GetTable<::service::BlendShapesData>()},
    {::_pbi::TcParser::GetTable<::service::ARKitBlendShapesData>()},
    {::_pbi::TcParser::GetTable<::service::EmotionResponse>()},
  }}, {{
    "\51\0\0\11\0\11\0\0\0\0\0\0\0\0\0\0"
    "service.GetResponseResponse.AudioResponse"
    "text_data"
    "face_data"
  }},
};

::uint8_t* GetResponseResponse_AudioResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseResponse.AudioResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes audio_data = 1;
  if (!this->_internal_audio_data().empty()) {
    const std::string& _s = this->_internal_audio_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .service.AudioConfig audio_config = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.audio_config_, _impl_.audio_config_->GetCachedSize(), target, stream);
  }

  // string text_data = 3;
  if (!this->_internal_text_data().empty()) {
    const std::string& _s = this->_internal_text_data();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseResponse.AudioResponse.text_data");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // bool end_of_response = 4;
  if (this->_internal_end_of_response() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_end_of_response(), target);
  }

  // string face_data = 5;
  if (!this->_internal_face_data().empty()) {
    const std::string& _s = this->_internal_face_data();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseResponse.AudioResponse.face_data");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  switch (face_data_type_case()) {
    case kVisemesData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *_impl_.face_data_type_.visemes_data_, _impl_.face_data_type_.visemes_data_->GetCachedSize(), target, stream);
      break;
    }
    case kBlendshapesData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *_impl_.face_data_type_.blendshapes_data_, _impl_.face_data_type_.blendshapes_data_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  // .service.ARKitBlendShapesData face_emotion = 8;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *_impl_.face_emotion_, _impl_.face_emotion_->GetCachedSize(), target, stream);
  }

  // .service.EmotionResponse emotion_response = 9;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *_impl_.emotion_response_, _impl_.emotion_response_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseResponse.AudioResponse)
  return target;
}

::size_t GetResponseResponse_AudioResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseResponse.AudioResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes audio_data = 1;
  if (!this->_internal_audio_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_audio_data());
  }

  // string text_data = 3;
  if (!this->_internal_text_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text_data());
  }

  // string face_data = 5;
  if (!this->_internal_face_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_face_data());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .service.AudioConfig audio_config = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.audio_config_);
    }

    // .service.ARKitBlendShapesData face_emotion = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.face_emotion_);
    }

    // .service.EmotionResponse emotion_response = 9;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.emotion_response_);
    }

  }
  // bool end_of_response = 4;
  if (this->_internal_end_of_response() != 0) {
    total_size += 2;
  }

  switch (face_data_type_case()) {
    // .service.VisemesData visemes_data = 6;
    case kVisemesData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.face_data_type_.visemes_data_);
      break;
    }
    // .service.BlendShapesData blendshapes_data = 7;
    case kBlendshapesData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.face_data_type_.blendshapes_data_);
      break;
    }
    case FACE_DATA_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetResponseResponse_AudioResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetResponseResponse_AudioResponse*>(&to_msg);
  auto& from = static_cast<const GetResponseResponse_AudioResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseResponse.AudioResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_audio_data().empty()) {
    _this->_internal_set_audio_data(from._internal_audio_data());
  }
  if (!from._internal_text_data().empty()) {
    _this->_internal_set_text_data(from._internal_text_data());
  }
  if (!from._internal_face_data().empty()) {
    _this->_internal_set_face_data(from._internal_face_data());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.audio_config_ != nullptr);
      if (_this->_impl_.audio_config_ == nullptr) {
        _this->_impl_.audio_config_ =
            ::google::protobuf::Message::CopyConstruct<::service::AudioConfig>(arena, *from._impl_.audio_config_);
      } else {
        _this->_impl_.audio_config_->MergeFrom(*from._impl_.audio_config_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.face_emotion_ != nullptr);
      if (_this->_impl_.face_emotion_ == nullptr) {
        _this->_impl_.face_emotion_ =
            ::google::protobuf::Message::CopyConstruct<::service::ARKitBlendShapesData>(arena, *from._impl_.face_emotion_);
      } else {
        _this->_impl_.face_emotion_->MergeFrom(*from._impl_.face_emotion_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.emotion_response_ != nullptr);
      if (_this->_impl_.emotion_response_ == nullptr) {
        _this->_impl_.emotion_response_ =
            ::google::protobuf::Message::CopyConstruct<::service::EmotionResponse>(arena, *from._impl_.emotion_response_);
      } else {
        _this->_impl_.emotion_response_->MergeFrom(*from._impl_.emotion_response_);
      }
    }
  }
  if (from._internal_end_of_response() != 0) {
    _this->_impl_.end_of_response_ = from._impl_.end_of_response_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_face_data_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kVisemesData: {
        if (oneof_needs_init) {
          _this->_impl_.face_data_type_.visemes_data_ =
              ::google::protobuf::Message::CopyConstruct<::service::VisemesData>(arena, *from._impl_.face_data_type_.visemes_data_);
        } else {
          _this->_impl_.face_data_type_.visemes_data_->MergeFrom(from._internal_visemes_data());
        }
        break;
      }
      case kBlendshapesData: {
        if (oneof_needs_init) {
          _this->_impl_.face_data_type_.blendshapes_data_ =
              ::google::protobuf::Message::CopyConstruct<::service::BlendShapesData>(arena, *from._impl_.face_data_type_.blendshapes_data_);
        } else {
          _this->_impl_.face_data_type_.blendshapes_data_->MergeFrom(from._internal_blendshapes_data());
        }
        break;
      }
      case FACE_DATA_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseResponse_AudioResponse::CopyFrom(const GetResponseResponse_AudioResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseResponse.AudioResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetResponseResponse_AudioResponse::IsInitialized() const {
  return true;
}

void GetResponseResponse_AudioResponse::InternalSwap(GetResponseResponse_AudioResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.audio_data_, &other->_impl_.audio_data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_data_, &other->_impl_.text_data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.face_data_, &other->_impl_.face_data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.end_of_response_)
      + sizeof(GetResponseResponse_AudioResponse::_impl_.end_of_response_)
      - PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.audio_config_)>(
          reinterpret_cast<char*>(&_impl_.audio_config_),
          reinterpret_cast<char*>(&other->_impl_.audio_config_));
  swap(_impl_.face_data_type_, other->_impl_.face_data_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GetResponseResponse_AudioResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[16]);
}
// ===================================================================

class GetResponseResponse_ActionResponse::_Internal {
 public:
};

GetResponseResponse_ActionResponse::GetResponseResponse_ActionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseResponse.ActionResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseResponse_ActionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : action_(arena, from.action_),
        _cached_size_{0} {}

GetResponseResponse_ActionResponse::GetResponseResponse_ActionResponse(
    ::google::protobuf::Arena* arena,
    const GetResponseResponse_ActionResponse& from)
    : ::google::protobuf::Message(arena) {
  GetResponseResponse_ActionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:service.GetResponseResponse.ActionResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseResponse_ActionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : action_(arena),
        _cached_size_{0} {}

inline void GetResponseResponse_ActionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetResponseResponse_ActionResponse::~GetResponseResponse_ActionResponse() {
  // @@protoc_insertion_point(destructor:service.GetResponseResponse.ActionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetResponseResponse_ActionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.action_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetResponseResponse_ActionResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetResponseResponse_ActionResponse, _impl_._cached_size_),
              false,
          },
          &GetResponseResponse_ActionResponse::MergeImpl,
          &GetResponseResponse_ActionResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GetResponseResponse_ActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseResponse.ActionResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.action_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetResponseResponse_ActionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 57, 2> GetResponseResponse_ActionResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetResponseResponse_ActionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::GetResponseResponse_ActionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string action = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseResponse_ActionResponse, _impl_.action_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string action = 1;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_ActionResponse, _impl_.action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\6\0\0\0\0\0\0"
    "service.GetResponseResponse.ActionResponse"
    "action"
  }},
};

::uint8_t* GetResponseResponse_ActionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseResponse.ActionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string action = 1;
  if (!this->_internal_action().empty()) {
    const std::string& _s = this->_internal_action();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseResponse.ActionResponse.action");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseResponse.ActionResponse)
  return target;
}

::size_t GetResponseResponse_ActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseResponse.ActionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string action = 1;
  if (!this->_internal_action().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetResponseResponse_ActionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetResponseResponse_ActionResponse*>(&to_msg);
  auto& from = static_cast<const GetResponseResponse_ActionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseResponse.ActionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_action().empty()) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseResponse_ActionResponse::CopyFrom(const GetResponseResponse_ActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseResponse.ActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetResponseResponse_ActionResponse::IsInitialized() const {
  return true;
}

void GetResponseResponse_ActionResponse::InternalSwap(GetResponseResponse_ActionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_, &other->_impl_.action_, arena);
}

::google::protobuf::Metadata GetResponseResponse_ActionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[17]);
}
// ===================================================================

class GetResponseResponse_BehaviorTreeResponse::_Internal {
 public:
};

GetResponseResponse_BehaviorTreeResponse::GetResponseResponse_BehaviorTreeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseResponse.BehaviorTreeResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseResponse_BehaviorTreeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : bt_code_(arena, from.bt_code_),
        bt_constants_(arena, from.bt_constants_),
        narrative_section_id_(arena, from.narrative_section_id_),
        _cached_size_{0} {}

GetResponseResponse_BehaviorTreeResponse::GetResponseResponse_BehaviorTreeResponse(
    ::google::protobuf::Arena* arena,
    const GetResponseResponse_BehaviorTreeResponse& from)
    : ::google::protobuf::Message(arena) {
  GetResponseResponse_BehaviorTreeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:service.GetResponseResponse.BehaviorTreeResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseResponse_BehaviorTreeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : bt_code_(arena),
        bt_constants_(arena),
        narrative_section_id_(arena),
        _cached_size_{0} {}

inline void GetResponseResponse_BehaviorTreeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetResponseResponse_BehaviorTreeResponse::~GetResponseResponse_BehaviorTreeResponse() {
  // @@protoc_insertion_point(destructor:service.GetResponseResponse.BehaviorTreeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetResponseResponse_BehaviorTreeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.bt_code_.Destroy();
  _impl_.bt_constants_.Destroy();
  _impl_.narrative_section_id_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetResponseResponse_BehaviorTreeResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetResponseResponse_BehaviorTreeResponse, _impl_._cached_size_),
              false,
          },
          &GetResponseResponse_BehaviorTreeResponse::MergeImpl,
          &GetResponseResponse_BehaviorTreeResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GetResponseResponse_BehaviorTreeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseResponse.BehaviorTreeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bt_code_.ClearToEmpty();
  _impl_.bt_constants_.ClearToEmpty();
  _impl_.narrative_section_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetResponseResponse_BehaviorTreeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 96, 2> GetResponseResponse_BehaviorTreeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetResponseResponse_BehaviorTreeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::GetResponseResponse_BehaviorTreeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string bt_code = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseResponse_BehaviorTreeResponse, _impl_.bt_code_)}},
    // string bt_constants = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseResponse_BehaviorTreeResponse, _impl_.bt_constants_)}},
    // string narrative_section_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseResponse_BehaviorTreeResponse, _impl_.narrative_section_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string bt_code = 1;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_BehaviorTreeResponse, _impl_.bt_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string bt_constants = 2;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_BehaviorTreeResponse, _impl_.bt_constants_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string narrative_section_id = 3;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_BehaviorTreeResponse, _impl_.narrative_section_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\60\7\14\24\0\0\0\0"
    "service.GetResponseResponse.BehaviorTreeResponse"
    "bt_code"
    "bt_constants"
    "narrative_section_id"
  }},
};

::uint8_t* GetResponseResponse_BehaviorTreeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseResponse.BehaviorTreeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string bt_code = 1;
  if (!this->_internal_bt_code().empty()) {
    const std::string& _s = this->_internal_bt_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseResponse.BehaviorTreeResponse.bt_code");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string bt_constants = 2;
  if (!this->_internal_bt_constants().empty()) {
    const std::string& _s = this->_internal_bt_constants();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseResponse.BehaviorTreeResponse.bt_constants");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string narrative_section_id = 3;
  if (!this->_internal_narrative_section_id().empty()) {
    const std::string& _s = this->_internal_narrative_section_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseResponse.BehaviorTreeResponse.narrative_section_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseResponse.BehaviorTreeResponse)
  return target;
}

::size_t GetResponseResponse_BehaviorTreeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseResponse.BehaviorTreeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string bt_code = 1;
  if (!this->_internal_bt_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_bt_code());
  }

  // string bt_constants = 2;
  if (!this->_internal_bt_constants().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_bt_constants());
  }

  // string narrative_section_id = 3;
  if (!this->_internal_narrative_section_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_narrative_section_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetResponseResponse_BehaviorTreeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetResponseResponse_BehaviorTreeResponse*>(&to_msg);
  auto& from = static_cast<const GetResponseResponse_BehaviorTreeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseResponse.BehaviorTreeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bt_code().empty()) {
    _this->_internal_set_bt_code(from._internal_bt_code());
  }
  if (!from._internal_bt_constants().empty()) {
    _this->_internal_set_bt_constants(from._internal_bt_constants());
  }
  if (!from._internal_narrative_section_id().empty()) {
    _this->_internal_set_narrative_section_id(from._internal_narrative_section_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseResponse_BehaviorTreeResponse::CopyFrom(const GetResponseResponse_BehaviorTreeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseResponse.BehaviorTreeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetResponseResponse_BehaviorTreeResponse::IsInitialized() const {
  return true;
}

void GetResponseResponse_BehaviorTreeResponse::InternalSwap(GetResponseResponse_BehaviorTreeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bt_code_, &other->_impl_.bt_code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bt_constants_, &other->_impl_.bt_constants_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.narrative_section_id_, &other->_impl_.narrative_section_id_, arena);
}

::google::protobuf::Metadata GetResponseResponse_BehaviorTreeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[18]);
}
// ===================================================================

class GetResponseResponse_UserTranscript::_Internal {
 public:
};

GetResponseResponse_UserTranscript::GetResponseResponse_UserTranscript(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseResponse.UserTranscript)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseResponse_UserTranscript::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : text_data_(arena, from.text_data_),
        _cached_size_{0} {}

GetResponseResponse_UserTranscript::GetResponseResponse_UserTranscript(
    ::google::protobuf::Arena* arena,
    const GetResponseResponse_UserTranscript& from)
    : ::google::protobuf::Message(arena) {
  GetResponseResponse_UserTranscript* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_final_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_final_),
           offsetof(Impl_, end_of_response_) -
               offsetof(Impl_, is_final_) +
               sizeof(Impl_::end_of_response_));

  // @@protoc_insertion_point(copy_constructor:service.GetResponseResponse.UserTranscript)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseResponse_UserTranscript::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : text_data_(arena),
        _cached_size_{0} {}

inline void GetResponseResponse_UserTranscript::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_final_),
           0,
           offsetof(Impl_, end_of_response_) -
               offsetof(Impl_, is_final_) +
               sizeof(Impl_::end_of_response_));
}
GetResponseResponse_UserTranscript::~GetResponseResponse_UserTranscript() {
  // @@protoc_insertion_point(destructor:service.GetResponseResponse.UserTranscript)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetResponseResponse_UserTranscript::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.text_data_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetResponseResponse_UserTranscript::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetResponseResponse_UserTranscript, _impl_._cached_size_),
              false,
          },
          &GetResponseResponse_UserTranscript::MergeImpl,
          &GetResponseResponse_UserTranscript::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GetResponseResponse_UserTranscript::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseResponse.UserTranscript)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_data_.ClearToEmpty();
  ::memset(&_impl_.is_final_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.end_of_response_) -
      reinterpret_cast<char*>(&_impl_.is_final_)) + sizeof(_impl_.end_of_response_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetResponseResponse_UserTranscript::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 60, 2> GetResponseResponse_UserTranscript::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetResponseResponse_UserTranscript_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::GetResponseResponse_UserTranscript>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string text_data = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseResponse_UserTranscript, _impl_.text_data_)}},
    // bool is_final = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetResponseResponse_UserTranscript, _impl_.is_final_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseResponse_UserTranscript, _impl_.is_final_)}},
    // bool end_of_response = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetResponseResponse_UserTranscript, _impl_.end_of_response_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseResponse_UserTranscript, _impl_.end_of_response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string text_data = 1;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_UserTranscript, _impl_.text_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_final = 2;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_UserTranscript, _impl_.is_final_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool end_of_response = 3;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse_UserTranscript, _impl_.end_of_response_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\52\11\0\0\0\0\0\0"
    "service.GetResponseResponse.UserTranscript"
    "text_data"
  }},
};

::uint8_t* GetResponseResponse_UserTranscript::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseResponse.UserTranscript)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string text_data = 1;
  if (!this->_internal_text_data().empty()) {
    const std::string& _s = this->_internal_text_data();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseResponse.UserTranscript.text_data");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bool is_final = 2;
  if (this->_internal_is_final() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_is_final(), target);
  }

  // bool end_of_response = 3;
  if (this->_internal_end_of_response() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_end_of_response(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseResponse.UserTranscript)
  return target;
}

::size_t GetResponseResponse_UserTranscript::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseResponse.UserTranscript)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text_data = 1;
  if (!this->_internal_text_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text_data());
  }

  // bool is_final = 2;
  if (this->_internal_is_final() != 0) {
    total_size += 2;
  }

  // bool end_of_response = 3;
  if (this->_internal_end_of_response() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetResponseResponse_UserTranscript::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetResponseResponse_UserTranscript*>(&to_msg);
  auto& from = static_cast<const GetResponseResponse_UserTranscript&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseResponse.UserTranscript)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text_data().empty()) {
    _this->_internal_set_text_data(from._internal_text_data());
  }
  if (from._internal_is_final() != 0) {
    _this->_impl_.is_final_ = from._impl_.is_final_;
  }
  if (from._internal_end_of_response() != 0) {
    _this->_impl_.end_of_response_ = from._impl_.end_of_response_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseResponse_UserTranscript::CopyFrom(const GetResponseResponse_UserTranscript& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseResponse.UserTranscript)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetResponseResponse_UserTranscript::IsInitialized() const {
  return true;
}

void GetResponseResponse_UserTranscript::InternalSwap(GetResponseResponse_UserTranscript* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_data_, &other->_impl_.text_data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetResponseResponse_UserTranscript, _impl_.end_of_response_)
      + sizeof(GetResponseResponse_UserTranscript::_impl_.end_of_response_)
      - PROTOBUF_FIELD_OFFSET(GetResponseResponse_UserTranscript, _impl_.is_final_)>(
          reinterpret_cast<char*>(&_impl_.is_final_),
          reinterpret_cast<char*>(&other->_impl_.is_final_));
}

::google::protobuf::Metadata GetResponseResponse_UserTranscript::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[19]);
}
// ===================================================================

class GetResponseResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse, _impl_._oneof_case_);
};

void GetResponseResponse::set_allocated_action_response(::service::GetResponseResponse_ActionResponse* action_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (action_response) {
    ::google::protobuf::Arena* submessage_arena = action_response->GetArena();
    if (message_arena != submessage_arena) {
      action_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, action_response, submessage_arena);
    }
    set_has_action_response();
    _impl_.response_type_.action_response_ = action_response;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseResponse.action_response)
}
void GetResponseResponse::set_allocated_audio_response(::service::GetResponseResponse_AudioResponse* audio_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (audio_response) {
    ::google::protobuf::Arena* submessage_arena = audio_response->GetArena();
    if (message_arena != submessage_arena) {
      audio_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, audio_response, submessage_arena);
    }
    set_has_audio_response();
    _impl_.response_type_.audio_response_ = audio_response;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseResponse.audio_response)
}
void GetResponseResponse::set_allocated_user_query(::service::GetResponseResponse_UserTranscript* user_query) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (user_query) {
    ::google::protobuf::Arena* submessage_arena = user_query->GetArena();
    if (message_arena != submessage_arena) {
      user_query = ::google::protobuf::internal::GetOwnedMessage(message_arena, user_query, submessage_arena);
    }
    set_has_user_query();
    _impl_.response_type_.user_query_ = user_query;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseResponse.user_query)
}
void GetResponseResponse::set_allocated_bt_response(::service::GetResponseResponse_BehaviorTreeResponse* bt_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (bt_response) {
    ::google::protobuf::Arena* submessage_arena = bt_response->GetArena();
    if (message_arena != submessage_arena) {
      bt_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, bt_response, submessage_arena);
    }
    set_has_bt_response();
    _impl_.response_type_.bt_response_ = bt_response;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseResponse.bt_response)
}
GetResponseResponse::GetResponseResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : session_id_(arena, from.session_id_),
        response_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GetResponseResponse::GetResponseResponse(
    ::google::protobuf::Arena* arena,
    const GetResponseResponse& from)
    : ::google::protobuf::Message(arena) {
  GetResponseResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (response_type_case()) {
    case RESPONSE_TYPE_NOT_SET:
      break;
      case kActionResponse:
        _impl_.response_type_.action_response_ = ::google::protobuf::Message::CopyConstruct<::service::GetResponseResponse_ActionResponse>(arena, *from._impl_.response_type_.action_response_);
        break;
      case kAudioResponse:
        _impl_.response_type_.audio_response_ = ::google::protobuf::Message::CopyConstruct<::service::GetResponseResponse_AudioResponse>(arena, *from._impl_.response_type_.audio_response_);
        break;
      case kDebugLog:
        new (&_impl_.response_type_.debug_log_) decltype(_impl_.response_type_.debug_log_){arena, from._impl_.response_type_.debug_log_};
        break;
      case kUserQuery:
        _impl_.response_type_.user_query_ = ::google::protobuf::Message::CopyConstruct<::service::GetResponseResponse_UserTranscript>(arena, *from._impl_.response_type_.user_query_);
        break;
      case kBtResponse:
        _impl_.response_type_.bt_response_ = ::google::protobuf::Message::CopyConstruct<::service::GetResponseResponse_BehaviorTreeResponse>(arena, *from._impl_.response_type_.bt_response_);
        break;
      case kEmotionResponse:
        new (&_impl_.response_type_.emotion_response_) decltype(_impl_.response_type_.emotion_response_){arena, from._impl_.response_type_.emotion_response_};
        break;
      case kInteractionId:
        new (&_impl_.response_type_.interaction_id_) decltype(_impl_.response_type_.interaction_id_){arena, from._impl_.response_type_.interaction_id_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:service.GetResponseResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetResponseResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : session_id_(arena),
        response_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GetResponseResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetResponseResponse::~GetResponseResponse() {
  // @@protoc_insertion_point(destructor:service.GetResponseResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetResponseResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.session_id_.Destroy();
  if (has_response_type()) {
    clear_response_type();
  }
  _impl_.~Impl_();
}

void GetResponseResponse::clear_response_type() {
// @@protoc_insertion_point(one_of_clear_start:service.GetResponseResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (response_type_case()) {
    case kActionResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.action_response_;
      }
      break;
    }
    case kAudioResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.audio_response_;
      }
      break;
    }
    case kDebugLog: {
      _impl_.response_type_.debug_log_.Destroy();
      break;
    }
    case kUserQuery: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.user_query_;
      }
      break;
    }
    case kBtResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.bt_response_;
      }
      break;
    }
    case kEmotionResponse: {
      _impl_.response_type_.emotion_response_.Destroy();
      break;
    }
    case kInteractionId: {
      _impl_.response_type_.interaction_id_.Destroy();
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESPONSE_TYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
GetResponseResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetResponseResponse, _impl_._cached_size_),
              false,
          },
          &GetResponseResponse::MergeImpl,
          &GetResponseResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GetResponseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_id_.ClearToEmpty();
  clear_response_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetResponseResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 8, 4, 93, 2> GetResponseResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetResponseResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::GetResponseResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string session_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetResponseResponse, _impl_.session_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string session_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .service.GetResponseResponse.ActionResponse action_response = 2;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse, _impl_.response_type_.action_response_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .service.GetResponseResponse.AudioResponse audio_response = 3;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse, _impl_.response_type_.audio_response_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string debug_log = 4;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse, _impl_.response_type_.debug_log_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .service.GetResponseResponse.UserTranscript user_query = 5;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse, _impl_.response_type_.user_query_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .service.GetResponseResponse.BehaviorTreeResponse bt_response = 6;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse, _impl_.response_type_.bt_response_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string emotion_response = 7;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse, _impl_.response_type_.emotion_response_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string interaction_id = 8;
    {PROTOBUF_FIELD_OFFSET(GetResponseResponse, _impl_.response_type_.interaction_id_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::service::GetResponseResponse_ActionResponse>()},
    {::_pbi::TcParser::GetTable<::service::GetResponseResponse_AudioResponse>()},
    {::_pbi::TcParser::GetTable<::service::GetResponseResponse_UserTranscript>()},
    {::_pbi::TcParser::GetTable<::service::GetResponseResponse_BehaviorTreeResponse>()},
  }}, {{
    "\33\12\0\0\11\0\0\20\16\0\0\0\0\0\0\0"
    "service.GetResponseResponse"
    "session_id"
    "debug_log"
    "emotion_response"
    "interaction_id"
  }},
};

::uint8_t* GetResponseResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string session_id = 1;
  if (!this->_internal_session_id().empty()) {
    const std::string& _s = this->_internal_session_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseResponse.session_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  switch (response_type_case()) {
    case kActionResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.response_type_.action_response_, _impl_.response_type_.action_response_->GetCachedSize(), target, stream);
      break;
    }
    case kAudioResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.response_type_.audio_response_, _impl_.response_type_.audio_response_->GetCachedSize(), target, stream);
      break;
    }
    case kDebugLog: {
      const std::string& _s = this->_internal_debug_log();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseResponse.debug_log");
      target = stream->WriteStringMaybeAliased(4, _s, target);
      break;
    }
    case kUserQuery: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *_impl_.response_type_.user_query_, _impl_.response_type_.user_query_->GetCachedSize(), target, stream);
      break;
    }
    case kBtResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *_impl_.response_type_.bt_response_, _impl_.response_type_.bt_response_->GetCachedSize(), target, stream);
      break;
    }
    case kEmotionResponse: {
      const std::string& _s = this->_internal_emotion_response();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseResponse.emotion_response");
      target = stream->WriteStringMaybeAliased(7, _s, target);
      break;
    }
    case kInteractionId: {
      const std::string& _s = this->_internal_interaction_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.GetResponseResponse.interaction_id");
      target = stream->WriteStringMaybeAliased(8, _s, target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseResponse)
  return target;
}

::size_t GetResponseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string session_id = 1;
  if (!this->_internal_session_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_session_id());
  }

  switch (response_type_case()) {
    // .service.GetResponseResponse.ActionResponse action_response = 2;
    case kActionResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_type_.action_response_);
      break;
    }
    // .service.GetResponseResponse.AudioResponse audio_response = 3;
    case kAudioResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_type_.audio_response_);
      break;
    }
    // string debug_log = 4;
    case kDebugLog: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_debug_log());
      break;
    }
    // .service.GetResponseResponse.UserTranscript user_query = 5;
    case kUserQuery: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_type_.user_query_);
      break;
    }
    // .service.GetResponseResponse.BehaviorTreeResponse bt_response = 6;
    case kBtResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_type_.bt_response_);
      break;
    }
    // string emotion_response = 7;
    case kEmotionResponse: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_emotion_response());
      break;
    }
    // string interaction_id = 8;
    case kInteractionId: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_interaction_id());
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetResponseResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetResponseResponse*>(&to_msg);
  auto& from = static_cast<const GetResponseResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_response_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kActionResponse: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.action_response_ =
              ::google::protobuf::Message::CopyConstruct<::service::GetResponseResponse_ActionResponse>(arena, *from._impl_.response_type_.action_response_);
        } else {
          _this->_impl_.response_type_.action_response_->MergeFrom(from._internal_action_response());
        }
        break;
      }
      case kAudioResponse: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.audio_response_ =
              ::google::protobuf::Message::CopyConstruct<::service::GetResponseResponse_AudioResponse>(arena, *from._impl_.response_type_.audio_response_);
        } else {
          _this->_impl_.response_type_.audio_response_->MergeFrom(from._internal_audio_response());
        }
        break;
      }
      case kDebugLog: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.debug_log_.InitDefault();
        }
        _this->_impl_.response_type_.debug_log_.Set(from._internal_debug_log(), arena);
        break;
      }
      case kUserQuery: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.user_query_ =
              ::google::protobuf::Message::CopyConstruct<::service::GetResponseResponse_UserTranscript>(arena, *from._impl_.response_type_.user_query_);
        } else {
          _this->_impl_.response_type_.user_query_->MergeFrom(from._internal_user_query());
        }
        break;
      }
      case kBtResponse: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.bt_response_ =
              ::google::protobuf::Message::CopyConstruct<::service::GetResponseResponse_BehaviorTreeResponse>(arena, *from._impl_.response_type_.bt_response_);
        } else {
          _this->_impl_.response_type_.bt_response_->MergeFrom(from._internal_bt_response());
        }
        break;
      }
      case kEmotionResponse: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.emotion_response_.InitDefault();
        }
        _this->_impl_.response_type_.emotion_response_.Set(from._internal_emotion_response(), arena);
        break;
      }
      case kInteractionId: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.interaction_id_.InitDefault();
        }
        _this->_impl_.response_type_.interaction_id_.Set(from._internal_interaction_id(), arena);
        break;
      }
      case RESPONSE_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseResponse::CopyFrom(const GetResponseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetResponseResponse::IsInitialized() const {
  return true;
}

void GetResponseResponse::InternalSwap(GetResponseResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  swap(_impl_.response_type_, other->_impl_.response_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GetResponseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[20]);
}
// ===================================================================

class VisemesData::_Internal {
 public:
  using HasBits = decltype(std::declval<VisemesData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VisemesData, _impl_._has_bits_);
};

VisemesData::VisemesData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.VisemesData)
}
inline PROTOBUF_NDEBUG_INLINE VisemesData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VisemesData::VisemesData(
    ::google::protobuf::Arena* arena,
    const VisemesData& from)
    : ::google::protobuf::Message(arena) {
  VisemesData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.visemes_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::service::Viseme>(
                              arena, *from._impl_.visemes_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:service.VisemesData)
}
inline PROTOBUF_NDEBUG_INLINE VisemesData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VisemesData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.visemes_ = {};
}
VisemesData::~VisemesData() {
  // @@protoc_insertion_point(destructor:service.VisemesData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VisemesData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.visemes_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
VisemesData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(VisemesData, _impl_._cached_size_),
              false,
          },
          &VisemesData::MergeImpl,
          &VisemesData::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void VisemesData::Clear() {
// @@protoc_insertion_point(message_clear_start:service.VisemesData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.visemes_ != nullptr);
    _impl_.visemes_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VisemesData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> VisemesData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VisemesData, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VisemesData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::VisemesData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .service.Viseme visemes = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VisemesData, _impl_.visemes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .service.Viseme visemes = 1;
    {PROTOBUF_FIELD_OFFSET(VisemesData, _impl_.visemes_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::service::Viseme>()},
  }}, {{
  }},
};

::uint8_t* VisemesData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.VisemesData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .service.Viseme visemes = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.visemes_, _impl_.visemes_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.VisemesData)
  return target;
}

::size_t VisemesData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.VisemesData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service.Viseme visemes = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.visemes_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void VisemesData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VisemesData*>(&to_msg);
  auto& from = static_cast<const VisemesData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:service.VisemesData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.visemes_ != nullptr);
    if (_this->_impl_.visemes_ == nullptr) {
      _this->_impl_.visemes_ =
          ::google::protobuf::Message::CopyConstruct<::service::Viseme>(arena, *from._impl_.visemes_);
    } else {
      _this->_impl_.visemes_->MergeFrom(*from._impl_.visemes_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VisemesData::CopyFrom(const VisemesData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.VisemesData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VisemesData::IsInitialized() const {
  return true;
}

void VisemesData::InternalSwap(VisemesData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.visemes_, other->_impl_.visemes_);
}

::google::protobuf::Metadata VisemesData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[21]);
}
// ===================================================================

class EmotionResponse::_Internal {
 public:
};

EmotionResponse::EmotionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.EmotionResponse)
}
inline PROTOBUF_NDEBUG_INLINE EmotionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : emotion_(arena, from.emotion_),
        scale_(arena, from.scale_),
        _cached_size_{0} {}

EmotionResponse::EmotionResponse(
    ::google::protobuf::Arena* arena,
    const EmotionResponse& from)
    : ::google::protobuf::Message(arena) {
  EmotionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:service.EmotionResponse)
}
inline PROTOBUF_NDEBUG_INLINE EmotionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : emotion_(arena),
        scale_(arena),
        _cached_size_{0} {}

inline void EmotionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EmotionResponse::~EmotionResponse() {
  // @@protoc_insertion_point(destructor:service.EmotionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EmotionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.emotion_.Destroy();
  _impl_.scale_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
EmotionResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(EmotionResponse, _impl_._cached_size_),
              false,
          },
          &EmotionResponse::MergeImpl,
          &EmotionResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void EmotionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.EmotionResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.emotion_.ClearToEmpty();
  _impl_.scale_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EmotionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 44, 2> EmotionResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EmotionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::EmotionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string scale = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EmotionResponse, _impl_.scale_)}},
    // string emotion = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EmotionResponse, _impl_.emotion_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string emotion = 1;
    {PROTOBUF_FIELD_OFFSET(EmotionResponse, _impl_.emotion_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string scale = 2;
    {PROTOBUF_FIELD_OFFSET(EmotionResponse, _impl_.scale_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\7\5\0\0\0\0\0"
    "service.EmotionResponse"
    "emotion"
    "scale"
  }},
};

::uint8_t* EmotionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.EmotionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string emotion = 1;
  if (!this->_internal_emotion().empty()) {
    const std::string& _s = this->_internal_emotion();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.EmotionResponse.emotion");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string scale = 2;
  if (!this->_internal_scale().empty()) {
    const std::string& _s = this->_internal_scale();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.EmotionResponse.scale");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.EmotionResponse)
  return target;
}

::size_t EmotionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.EmotionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string emotion = 1;
  if (!this->_internal_emotion().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_emotion());
  }

  // string scale = 2;
  if (!this->_internal_scale().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_scale());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void EmotionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EmotionResponse*>(&to_msg);
  auto& from = static_cast<const EmotionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.EmotionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_emotion().empty()) {
    _this->_internal_set_emotion(from._internal_emotion());
  }
  if (!from._internal_scale().empty()) {
    _this->_internal_set_scale(from._internal_scale());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EmotionResponse::CopyFrom(const EmotionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.EmotionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EmotionResponse::IsInitialized() const {
  return true;
}

void EmotionResponse::InternalSwap(EmotionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.emotion_, &other->_impl_.emotion_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.scale_, &other->_impl_.scale_, arena);
}

::google::protobuf::Metadata EmotionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[22]);
}
// ===================================================================

class Viseme::_Internal {
 public:
};

Viseme::Viseme(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.Viseme)
}
Viseme::Viseme(
    ::google::protobuf::Arena* arena, const Viseme& from)
    : Viseme(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Viseme::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Viseme::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sil_),
           0,
           offsetof(Impl_, ou_) -
               offsetof(Impl_, sil_) +
               sizeof(Impl_::ou_));
}
Viseme::~Viseme() {
  // @@protoc_insertion_point(destructor:service.Viseme)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Viseme::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Viseme::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Viseme, _impl_._cached_size_),
              false,
          },
          &Viseme::MergeImpl,
          &Viseme::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Viseme::Clear() {
// @@protoc_insertion_point(message_clear_start:service.Viseme)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.sil_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ou_) -
      reinterpret_cast<char*>(&_impl_.sil_)) + sizeof(_impl_.ou_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Viseme::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 15, 0, 0, 2> Viseme::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    15, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934528,  // skipmap
    offsetof(decltype(_table_), field_entries),
    15,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Viseme_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::Viseme>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float sil = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Viseme, _impl_.sil_)}},
    // float pp = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Viseme, _impl_.pp_)}},
    // float ff = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Viseme, _impl_.ff_)}},
    // float th = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Viseme, _impl_.th_)}},
    // float dd = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(Viseme, _impl_.dd_)}},
    // float kk = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(Viseme, _impl_.kk_)}},
    // float ch = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(Viseme, _impl_.ch_)}},
    // float ss = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(Viseme, _impl_.ss_)}},
    // float nn = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 63, 0, PROTOBUF_FIELD_OFFSET(Viseme, _impl_.nn_)}},
    // float rr = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 63, 0, PROTOBUF_FIELD_OFFSET(Viseme, _impl_.rr_)}},
    // float aa = 11;
    {::_pbi::TcParser::FastF32S1,
     {93, 63, 0, PROTOBUF_FIELD_OFFSET(Viseme, _impl_.aa_)}},
    // float e = 12;
    {::_pbi::TcParser::FastF32S1,
     {101, 63, 0, PROTOBUF_FIELD_OFFSET(Viseme, _impl_.e_)}},
    // float ih = 13;
    {::_pbi::TcParser::FastF32S1,
     {109, 63, 0, PROTOBUF_FIELD_OFFSET(Viseme, _impl_.ih_)}},
    // float oh = 14;
    {::_pbi::TcParser::FastF32S1,
     {117, 63, 0, PROTOBUF_FIELD_OFFSET(Viseme, _impl_.oh_)}},
    // float ou = 15;
    {::_pbi::TcParser::FastF32S1,
     {125, 63, 0, PROTOBUF_FIELD_OFFSET(Viseme, _impl_.ou_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float sil = 1;
    {PROTOBUF_FIELD_OFFSET(Viseme, _impl_.sil_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float pp = 2;
    {PROTOBUF_FIELD_OFFSET(Viseme, _impl_.pp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float ff = 3;
    {PROTOBUF_FIELD_OFFSET(Viseme, _impl_.ff_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float th = 4;
    {PROTOBUF_FIELD_OFFSET(Viseme, _impl_.th_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float dd = 5;
    {PROTOBUF_FIELD_OFFSET(Viseme, _impl_.dd_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float kk = 6;
    {PROTOBUF_FIELD_OFFSET(Viseme, _impl_.kk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float ch = 7;
    {PROTOBUF_FIELD_OFFSET(Viseme, _impl_.ch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float ss = 8;
    {PROTOBUF_FIELD_OFFSET(Viseme, _impl_.ss_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float nn = 9;
    {PROTOBUF_FIELD_OFFSET(Viseme, _impl_.nn_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float rr = 10;
    {PROTOBUF_FIELD_OFFSET(Viseme, _impl_.rr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float aa = 11;
    {PROTOBUF_FIELD_OFFSET(Viseme, _impl_.aa_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float e = 12;
    {PROTOBUF_FIELD_OFFSET(Viseme, _impl_.e_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float ih = 13;
    {PROTOBUF_FIELD_OFFSET(Viseme, _impl_.ih_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float oh = 14;
    {PROTOBUF_FIELD_OFFSET(Viseme, _impl_.oh_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float ou = 15;
    {PROTOBUF_FIELD_OFFSET(Viseme, _impl_.ou_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Viseme::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.Viseme)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float sil = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_sil = this->_internal_sil();
  ::uint32_t raw_sil;
  memcpy(&raw_sil, &tmp_sil, sizeof(tmp_sil));
  if (raw_sil != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_sil(), target);
  }

  // float pp = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_pp = this->_internal_pp();
  ::uint32_t raw_pp;
  memcpy(&raw_pp, &tmp_pp, sizeof(tmp_pp));
  if (raw_pp != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_pp(), target);
  }

  // float ff = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ff = this->_internal_ff();
  ::uint32_t raw_ff;
  memcpy(&raw_ff, &tmp_ff, sizeof(tmp_ff));
  if (raw_ff != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_ff(), target);
  }

  // float th = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_th = this->_internal_th();
  ::uint32_t raw_th;
  memcpy(&raw_th, &tmp_th, sizeof(tmp_th));
  if (raw_th != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_th(), target);
  }

  // float dd = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_dd = this->_internal_dd();
  ::uint32_t raw_dd;
  memcpy(&raw_dd, &tmp_dd, sizeof(tmp_dd));
  if (raw_dd != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_dd(), target);
  }

  // float kk = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_kk = this->_internal_kk();
  ::uint32_t raw_kk;
  memcpy(&raw_kk, &tmp_kk, sizeof(tmp_kk));
  if (raw_kk != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_kk(), target);
  }

  // float ch = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ch = this->_internal_ch();
  ::uint32_t raw_ch;
  memcpy(&raw_ch, &tmp_ch, sizeof(tmp_ch));
  if (raw_ch != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_ch(), target);
  }

  // float ss = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ss = this->_internal_ss();
  ::uint32_t raw_ss;
  memcpy(&raw_ss, &tmp_ss, sizeof(tmp_ss));
  if (raw_ss != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this->_internal_ss(), target);
  }

  // float nn = 9;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_nn = this->_internal_nn();
  ::uint32_t raw_nn;
  memcpy(&raw_nn, &tmp_nn, sizeof(tmp_nn));
  if (raw_nn != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        9, this->_internal_nn(), target);
  }

  // float rr = 10;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rr = this->_internal_rr();
  ::uint32_t raw_rr;
  memcpy(&raw_rr, &tmp_rr, sizeof(tmp_rr));
  if (raw_rr != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        10, this->_internal_rr(), target);
  }

  // float aa = 11;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_aa = this->_internal_aa();
  ::uint32_t raw_aa;
  memcpy(&raw_aa, &tmp_aa, sizeof(tmp_aa));
  if (raw_aa != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        11, this->_internal_aa(), target);
  }

  // float e = 12;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_e = this->_internal_e();
  ::uint32_t raw_e;
  memcpy(&raw_e, &tmp_e, sizeof(tmp_e));
  if (raw_e != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        12, this->_internal_e(), target);
  }

  // float ih = 13;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ih = this->_internal_ih();
  ::uint32_t raw_ih;
  memcpy(&raw_ih, &tmp_ih, sizeof(tmp_ih));
  if (raw_ih != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        13, this->_internal_ih(), target);
  }

  // float oh = 14;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_oh = this->_internal_oh();
  ::uint32_t raw_oh;
  memcpy(&raw_oh, &tmp_oh, sizeof(tmp_oh));
  if (raw_oh != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        14, this->_internal_oh(), target);
  }

  // float ou = 15;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ou = this->_internal_ou();
  ::uint32_t raw_ou;
  memcpy(&raw_ou, &tmp_ou, sizeof(tmp_ou));
  if (raw_ou != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        15, this->_internal_ou(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.Viseme)
  return target;
}

::size_t Viseme::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.Viseme)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float sil = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_sil = this->_internal_sil();
  ::uint32_t raw_sil;
  memcpy(&raw_sil, &tmp_sil, sizeof(tmp_sil));
  if (raw_sil != 0) {
    total_size += 5;
  }

  // float pp = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_pp = this->_internal_pp();
  ::uint32_t raw_pp;
  memcpy(&raw_pp, &tmp_pp, sizeof(tmp_pp));
  if (raw_pp != 0) {
    total_size += 5;
  }

  // float ff = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ff = this->_internal_ff();
  ::uint32_t raw_ff;
  memcpy(&raw_ff, &tmp_ff, sizeof(tmp_ff));
  if (raw_ff != 0) {
    total_size += 5;
  }

  // float th = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_th = this->_internal_th();
  ::uint32_t raw_th;
  memcpy(&raw_th, &tmp_th, sizeof(tmp_th));
  if (raw_th != 0) {
    total_size += 5;
  }

  // float dd = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_dd = this->_internal_dd();
  ::uint32_t raw_dd;
  memcpy(&raw_dd, &tmp_dd, sizeof(tmp_dd));
  if (raw_dd != 0) {
    total_size += 5;
  }

  // float kk = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_kk = this->_internal_kk();
  ::uint32_t raw_kk;
  memcpy(&raw_kk, &tmp_kk, sizeof(tmp_kk));
  if (raw_kk != 0) {
    total_size += 5;
  }

  // float ch = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ch = this->_internal_ch();
  ::uint32_t raw_ch;
  memcpy(&raw_ch, &tmp_ch, sizeof(tmp_ch));
  if (raw_ch != 0) {
    total_size += 5;
  }

  // float ss = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ss = this->_internal_ss();
  ::uint32_t raw_ss;
  memcpy(&raw_ss, &tmp_ss, sizeof(tmp_ss));
  if (raw_ss != 0) {
    total_size += 5;
  }

  // float nn = 9;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_nn = this->_internal_nn();
  ::uint32_t raw_nn;
  memcpy(&raw_nn, &tmp_nn, sizeof(tmp_nn));
  if (raw_nn != 0) {
    total_size += 5;
  }

  // float rr = 10;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rr = this->_internal_rr();
  ::uint32_t raw_rr;
  memcpy(&raw_rr, &tmp_rr, sizeof(tmp_rr));
  if (raw_rr != 0) {
    total_size += 5;
  }

  // float aa = 11;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_aa = this->_internal_aa();
  ::uint32_t raw_aa;
  memcpy(&raw_aa, &tmp_aa, sizeof(tmp_aa));
  if (raw_aa != 0) {
    total_size += 5;
  }

  // float e = 12;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_e = this->_internal_e();
  ::uint32_t raw_e;
  memcpy(&raw_e, &tmp_e, sizeof(tmp_e));
  if (raw_e != 0) {
    total_size += 5;
  }

  // float ih = 13;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ih = this->_internal_ih();
  ::uint32_t raw_ih;
  memcpy(&raw_ih, &tmp_ih, sizeof(tmp_ih));
  if (raw_ih != 0) {
    total_size += 5;
  }

  // float oh = 14;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_oh = this->_internal_oh();
  ::uint32_t raw_oh;
  memcpy(&raw_oh, &tmp_oh, sizeof(tmp_oh));
  if (raw_oh != 0) {
    total_size += 5;
  }

  // float ou = 15;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ou = this->_internal_ou();
  ::uint32_t raw_ou;
  memcpy(&raw_ou, &tmp_ou, sizeof(tmp_ou));
  if (raw_ou != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Viseme::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Viseme*>(&to_msg);
  auto& from = static_cast<const Viseme&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.Viseme)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_sil = from._internal_sil();
  ::uint32_t raw_sil;
  memcpy(&raw_sil, &tmp_sil, sizeof(tmp_sil));
  if (raw_sil != 0) {
    _this->_impl_.sil_ = from._impl_.sil_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_pp = from._internal_pp();
  ::uint32_t raw_pp;
  memcpy(&raw_pp, &tmp_pp, sizeof(tmp_pp));
  if (raw_pp != 0) {
    _this->_impl_.pp_ = from._impl_.pp_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ff = from._internal_ff();
  ::uint32_t raw_ff;
  memcpy(&raw_ff, &tmp_ff, sizeof(tmp_ff));
  if (raw_ff != 0) {
    _this->_impl_.ff_ = from._impl_.ff_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_th = from._internal_th();
  ::uint32_t raw_th;
  memcpy(&raw_th, &tmp_th, sizeof(tmp_th));
  if (raw_th != 0) {
    _this->_impl_.th_ = from._impl_.th_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_dd = from._internal_dd();
  ::uint32_t raw_dd;
  memcpy(&raw_dd, &tmp_dd, sizeof(tmp_dd));
  if (raw_dd != 0) {
    _this->_impl_.dd_ = from._impl_.dd_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_kk = from._internal_kk();
  ::uint32_t raw_kk;
  memcpy(&raw_kk, &tmp_kk, sizeof(tmp_kk));
  if (raw_kk != 0) {
    _this->_impl_.kk_ = from._impl_.kk_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ch = from._internal_ch();
  ::uint32_t raw_ch;
  memcpy(&raw_ch, &tmp_ch, sizeof(tmp_ch));
  if (raw_ch != 0) {
    _this->_impl_.ch_ = from._impl_.ch_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ss = from._internal_ss();
  ::uint32_t raw_ss;
  memcpy(&raw_ss, &tmp_ss, sizeof(tmp_ss));
  if (raw_ss != 0) {
    _this->_impl_.ss_ = from._impl_.ss_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_nn = from._internal_nn();
  ::uint32_t raw_nn;
  memcpy(&raw_nn, &tmp_nn, sizeof(tmp_nn));
  if (raw_nn != 0) {
    _this->_impl_.nn_ = from._impl_.nn_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rr = from._internal_rr();
  ::uint32_t raw_rr;
  memcpy(&raw_rr, &tmp_rr, sizeof(tmp_rr));
  if (raw_rr != 0) {
    _this->_impl_.rr_ = from._impl_.rr_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_aa = from._internal_aa();
  ::uint32_t raw_aa;
  memcpy(&raw_aa, &tmp_aa, sizeof(tmp_aa));
  if (raw_aa != 0) {
    _this->_impl_.aa_ = from._impl_.aa_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_e = from._internal_e();
  ::uint32_t raw_e;
  memcpy(&raw_e, &tmp_e, sizeof(tmp_e));
  if (raw_e != 0) {
    _this->_impl_.e_ = from._impl_.e_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ih = from._internal_ih();
  ::uint32_t raw_ih;
  memcpy(&raw_ih, &tmp_ih, sizeof(tmp_ih));
  if (raw_ih != 0) {
    _this->_impl_.ih_ = from._impl_.ih_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_oh = from._internal_oh();
  ::uint32_t raw_oh;
  memcpy(&raw_oh, &tmp_oh, sizeof(tmp_oh));
  if (raw_oh != 0) {
    _this->_impl_.oh_ = from._impl_.oh_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ou = from._internal_ou();
  ::uint32_t raw_ou;
  memcpy(&raw_ou, &tmp_ou, sizeof(tmp_ou));
  if (raw_ou != 0) {
    _this->_impl_.ou_ = from._impl_.ou_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Viseme::CopyFrom(const Viseme& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.Viseme)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Viseme::IsInitialized() const {
  return true;
}

void Viseme::InternalSwap(Viseme* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Viseme, _impl_.ou_)
      + sizeof(Viseme::_impl_.ou_)
      - PROTOBUF_FIELD_OFFSET(Viseme, _impl_.sil_)>(
          reinterpret_cast<char*>(&_impl_.sil_),
          reinterpret_cast<char*>(&other->_impl_.sil_));
}

::google::protobuf::Metadata Viseme::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[23]);
}
// ===================================================================

class BlendShapesData::_Internal {
 public:
};

BlendShapesData::BlendShapesData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.BlendShapesData)
}
inline PROTOBUF_NDEBUG_INLINE BlendShapesData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : blendshape_data_(arena, from.blendshape_data_),
        _cached_size_{0} {}

BlendShapesData::BlendShapesData(
    ::google::protobuf::Arena* arena,
    const BlendShapesData& from)
    : ::google::protobuf::Message(arena) {
  BlendShapesData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:service.BlendShapesData)
}
inline PROTOBUF_NDEBUG_INLINE BlendShapesData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : blendshape_data_(arena),
        _cached_size_{0} {}

inline void BlendShapesData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BlendShapesData::~BlendShapesData() {
  // @@protoc_insertion_point(destructor:service.BlendShapesData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BlendShapesData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.blendshape_data_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BlendShapesData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(BlendShapesData, _impl_._cached_size_),
              false,
          },
          &BlendShapesData::MergeImpl,
          &BlendShapesData::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void BlendShapesData::Clear() {
// @@protoc_insertion_point(message_clear_start:service.BlendShapesData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.blendshape_data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BlendShapesData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 47, 2> BlendShapesData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BlendShapesData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::BlendShapesData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string blendshape_data = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlendShapesData, _impl_.blendshape_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string blendshape_data = 1;
    {PROTOBUF_FIELD_OFFSET(BlendShapesData, _impl_.blendshape_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\17\0\0\0\0\0\0"
    "service.BlendShapesData"
    "blendshape_data"
  }},
};

::uint8_t* BlendShapesData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.BlendShapesData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string blendshape_data = 1;
  if (!this->_internal_blendshape_data().empty()) {
    const std::string& _s = this->_internal_blendshape_data();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.BlendShapesData.blendshape_data");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.BlendShapesData)
  return target;
}

::size_t BlendShapesData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.BlendShapesData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string blendshape_data = 1;
  if (!this->_internal_blendshape_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_blendshape_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BlendShapesData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlendShapesData*>(&to_msg);
  auto& from = static_cast<const BlendShapesData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.BlendShapesData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_blendshape_data().empty()) {
    _this->_internal_set_blendshape_data(from._internal_blendshape_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlendShapesData::CopyFrom(const BlendShapesData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.BlendShapesData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BlendShapesData::IsInitialized() const {
  return true;
}

void BlendShapesData::InternalSwap(BlendShapesData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.blendshape_data_, &other->_impl_.blendshape_data_, arena);
}

::google::protobuf::Metadata BlendShapesData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[24]);
}
// ===================================================================

class HelloRequest::_Internal {
 public:
};

HelloRequest::HelloRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.HelloRequest)
}
inline PROTOBUF_NDEBUG_INLINE HelloRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

HelloRequest::HelloRequest(
    ::google::protobuf::Arena* arena,
    const HelloRequest& from)
    : ::google::protobuf::Message(arena) {
  HelloRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:service.HelloRequest)
}
inline PROTOBUF_NDEBUG_INLINE HelloRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void HelloRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HelloRequest::~HelloRequest() {
  // @@protoc_insertion_point(destructor:service.HelloRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HelloRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HelloRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(HelloRequest, _impl_._cached_size_),
              false,
          },
          &HelloRequest::MergeImpl,
          &HelloRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void HelloRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:service.HelloRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HelloRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 33, 2> HelloRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HelloRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::HelloRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HelloRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(HelloRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\4\0\0\0\0\0\0"
    "service.HelloRequest"
    "name"
  }},
};

::uint8_t* HelloRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.HelloRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.HelloRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.HelloRequest)
  return target;
}

::size_t HelloRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.HelloRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HelloRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HelloRequest*>(&to_msg);
  auto& from = static_cast<const HelloRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.HelloRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HelloRequest::CopyFrom(const HelloRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.HelloRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HelloRequest::IsInitialized() const {
  return true;
}

void HelloRequest::InternalSwap(HelloRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata HelloRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[25]);
}
// ===================================================================

class HelloResponse::_Internal {
 public:
};

HelloResponse::HelloResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.HelloResponse)
}
inline PROTOBUF_NDEBUG_INLINE HelloResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        _cached_size_{0} {}

HelloResponse::HelloResponse(
    ::google::protobuf::Arena* arena,
    const HelloResponse& from)
    : ::google::protobuf::Message(arena) {
  HelloResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:service.HelloResponse)
}
inline PROTOBUF_NDEBUG_INLINE HelloResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void HelloResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HelloResponse::~HelloResponse() {
  // @@protoc_insertion_point(destructor:service.HelloResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HelloResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HelloResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(HelloResponse, _impl_._cached_size_),
              false,
          },
          &HelloResponse::MergeImpl,
          &HelloResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void HelloResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.HelloResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HelloResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 37, 2> HelloResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HelloResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::HelloResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HelloResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1;
    {PROTOBUF_FIELD_OFFSET(HelloResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\7\0\0\0\0\0\0"
    "service.HelloResponse"
    "message"
  }},
};

::uint8_t* HelloResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.HelloResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.HelloResponse.message");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.HelloResponse)
  return target;
}

::size_t HelloResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.HelloResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HelloResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HelloResponse*>(&to_msg);
  auto& from = static_cast<const HelloResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.HelloResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HelloResponse::CopyFrom(const HelloResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.HelloResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HelloResponse::IsInitialized() const {
  return true;
}

void HelloResponse::InternalSwap(HelloResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata HelloResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[26]);
}
// ===================================================================

class FeedbackRequest_Feedback::_Internal {
 public:
};

FeedbackRequest_Feedback::FeedbackRequest_Feedback(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.FeedbackRequest.Feedback)
}
inline PROTOBUF_NDEBUG_INLINE FeedbackRequest_Feedback::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : tags_{visibility, arena, from.tags_},
        feedback_text_(arena, from.feedback_text_),
        _cached_size_{0} {}

FeedbackRequest_Feedback::FeedbackRequest_Feedback(
    ::google::protobuf::Arena* arena,
    const FeedbackRequest_Feedback& from)
    : ::google::protobuf::Message(arena) {
  FeedbackRequest_Feedback* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, thumbs_up_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, thumbs_up_),
           offsetof(Impl_, is_test_case_) -
               offsetof(Impl_, thumbs_up_) +
               sizeof(Impl_::is_test_case_));

  // @@protoc_insertion_point(copy_constructor:service.FeedbackRequest.Feedback)
}
inline PROTOBUF_NDEBUG_INLINE FeedbackRequest_Feedback::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tags_{visibility, arena},
        feedback_text_(arena),
        _cached_size_{0} {}

inline void FeedbackRequest_Feedback::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, thumbs_up_),
           0,
           offsetof(Impl_, is_test_case_) -
               offsetof(Impl_, thumbs_up_) +
               sizeof(Impl_::is_test_case_));
}
FeedbackRequest_Feedback::~FeedbackRequest_Feedback() {
  // @@protoc_insertion_point(destructor:service.FeedbackRequest.Feedback)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FeedbackRequest_Feedback::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.feedback_text_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
FeedbackRequest_Feedback::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(FeedbackRequest_Feedback, _impl_._cached_size_),
              false,
          },
          &FeedbackRequest_Feedback::MergeImpl,
          &FeedbackRequest_Feedback::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void FeedbackRequest_Feedback::Clear() {
// @@protoc_insertion_point(message_clear_start:service.FeedbackRequest.Feedback)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.feedback_text_.ClearToEmpty();
  ::memset(&_impl_.thumbs_up_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_test_case_) -
      reinterpret_cast<char*>(&_impl_.thumbs_up_)) + sizeof(_impl_.is_test_case_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FeedbackRequest_Feedback::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 58, 2> FeedbackRequest_Feedback::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FeedbackRequest_Feedback_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::FeedbackRequest_Feedback>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool is_test_case = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FeedbackRequest_Feedback, _impl_.is_test_case_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(FeedbackRequest_Feedback, _impl_.is_test_case_)}},
    // bool thumbs_up = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FeedbackRequest_Feedback, _impl_.thumbs_up_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FeedbackRequest_Feedback, _impl_.thumbs_up_)}},
    // string feedback_text = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FeedbackRequest_Feedback, _impl_.feedback_text_)}},
    // repeated string tags = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(FeedbackRequest_Feedback, _impl_.tags_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool thumbs_up = 1;
    {PROTOBUF_FIELD_OFFSET(FeedbackRequest_Feedback, _impl_.thumbs_up_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string feedback_text = 2;
    {PROTOBUF_FIELD_OFFSET(FeedbackRequest_Feedback, _impl_.feedback_text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string tags = 3;
    {PROTOBUF_FIELD_OFFSET(FeedbackRequest_Feedback, _impl_.tags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool is_test_case = 4;
    {PROTOBUF_FIELD_OFFSET(FeedbackRequest_Feedback, _impl_.is_test_case_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\40\0\15\4\0\0\0\0"
    "service.FeedbackRequest.Feedback"
    "feedback_text"
    "tags"
  }},
};

::uint8_t* FeedbackRequest_Feedback::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.FeedbackRequest.Feedback)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool thumbs_up = 1;
  if (this->_internal_thumbs_up() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_thumbs_up(), target);
  }

  // string feedback_text = 2;
  if (!this->_internal_feedback_text().empty()) {
    const std::string& _s = this->_internal_feedback_text();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.FeedbackRequest.Feedback.feedback_text");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated string tags = 3;
  for (int i = 0, n = this->_internal_tags_size(); i < n; ++i) {
    const auto& s = this->_internal_tags().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.FeedbackRequest.Feedback.tags");
    target = stream->WriteString(3, s, target);
  }

  // bool is_test_case = 4;
  if (this->_internal_is_test_case() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_is_test_case(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.FeedbackRequest.Feedback)
  return target;
}

::size_t FeedbackRequest_Feedback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.FeedbackRequest.Feedback)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_tags().size());
  for (int i = 0, n = _internal_tags().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_tags().Get(i));
  }
  // string feedback_text = 2;
  if (!this->_internal_feedback_text().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_feedback_text());
  }

  // bool thumbs_up = 1;
  if (this->_internal_thumbs_up() != 0) {
    total_size += 2;
  }

  // bool is_test_case = 4;
  if (this->_internal_is_test_case() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void FeedbackRequest_Feedback::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FeedbackRequest_Feedback*>(&to_msg);
  auto& from = static_cast<const FeedbackRequest_Feedback&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.FeedbackRequest.Feedback)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  if (!from._internal_feedback_text().empty()) {
    _this->_internal_set_feedback_text(from._internal_feedback_text());
  }
  if (from._internal_thumbs_up() != 0) {
    _this->_impl_.thumbs_up_ = from._impl_.thumbs_up_;
  }
  if (from._internal_is_test_case() != 0) {
    _this->_impl_.is_test_case_ = from._impl_.is_test_case_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FeedbackRequest_Feedback::CopyFrom(const FeedbackRequest_Feedback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.FeedbackRequest.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FeedbackRequest_Feedback::IsInitialized() const {
  return true;
}

void FeedbackRequest_Feedback::InternalSwap(FeedbackRequest_Feedback* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feedback_text_, &other->_impl_.feedback_text_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FeedbackRequest_Feedback, _impl_.is_test_case_)
      + sizeof(FeedbackRequest_Feedback::_impl_.is_test_case_)
      - PROTOBUF_FIELD_OFFSET(FeedbackRequest_Feedback, _impl_.thumbs_up_)>(
          reinterpret_cast<char*>(&_impl_.thumbs_up_),
          reinterpret_cast<char*>(&other->_impl_.thumbs_up_));
}

::google::protobuf::Metadata FeedbackRequest_Feedback::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[27]);
}
// ===================================================================

class FeedbackRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<FeedbackRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FeedbackRequest, _impl_._has_bits_);
};

FeedbackRequest::FeedbackRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.FeedbackRequest)
}
inline PROTOBUF_NDEBUG_INLINE FeedbackRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        interaction_id_(arena, from.interaction_id_),
        character_id_(arena, from.character_id_),
        session_id_(arena, from.session_id_),
        user_query_(arena, from.user_query_),
        response_(arena, from.response_) {}

FeedbackRequest::FeedbackRequest(
    ::google::protobuf::Arena* arena,
    const FeedbackRequest& from)
    : ::google::protobuf::Message(arena) {
  FeedbackRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.text_feedback_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::service::FeedbackRequest_Feedback>(
                              arena, *from._impl_.text_feedback_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:service.FeedbackRequest)
}
inline PROTOBUF_NDEBUG_INLINE FeedbackRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        interaction_id_(arena),
        character_id_(arena),
        session_id_(arena),
        user_query_(arena),
        response_(arena) {}

inline void FeedbackRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.text_feedback_ = {};
}
FeedbackRequest::~FeedbackRequest() {
  // @@protoc_insertion_point(destructor:service.FeedbackRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FeedbackRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.interaction_id_.Destroy();
  _impl_.character_id_.Destroy();
  _impl_.session_id_.Destroy();
  _impl_.user_query_.Destroy();
  _impl_.response_.Destroy();
  delete _impl_.text_feedback_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
FeedbackRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(FeedbackRequest, _impl_._cached_size_),
              false,
          },
          &FeedbackRequest::MergeImpl,
          &FeedbackRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void FeedbackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:service.FeedbackRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.interaction_id_.ClearToEmpty();
  _impl_.character_id_.ClearToEmpty();
  _impl_.session_id_.ClearToEmpty();
  _impl_.user_query_.ClearToEmpty();
  _impl_.response_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.text_feedback_ != nullptr);
    _impl_.text_feedback_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FeedbackRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 86, 2> FeedbackRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FeedbackRequest, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967176,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FeedbackRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::FeedbackRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string interaction_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FeedbackRequest, _impl_.interaction_id_)}},
    // string character_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FeedbackRequest, _impl_.character_id_)}},
    // string session_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(FeedbackRequest, _impl_.session_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .service.FeedbackRequest.Feedback text_feedback = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(FeedbackRequest, _impl_.text_feedback_)}},
    // string user_query = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(FeedbackRequest, _impl_.user_query_)}},
    // string response = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(FeedbackRequest, _impl_.response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string interaction_id = 1;
    {PROTOBUF_FIELD_OFFSET(FeedbackRequest, _impl_.interaction_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string character_id = 2;
    {PROTOBUF_FIELD_OFFSET(FeedbackRequest, _impl_.character_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_id = 3;
    {PROTOBUF_FIELD_OFFSET(FeedbackRequest, _impl_.session_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .service.FeedbackRequest.Feedback text_feedback = 5;
    {PROTOBUF_FIELD_OFFSET(FeedbackRequest, _impl_.text_feedback_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string user_query = 6;
    {PROTOBUF_FIELD_OFFSET(FeedbackRequest, _impl_.user_query_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string response = 7;
    {PROTOBUF_FIELD_OFFSET(FeedbackRequest, _impl_.response_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::service::FeedbackRequest_Feedback>()},
  }}, {{
    "\27\16\14\12\0\12\10\0"
    "service.FeedbackRequest"
    "interaction_id"
    "character_id"
    "session_id"
    "user_query"
    "response"
  }},
};

::uint8_t* FeedbackRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.FeedbackRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string interaction_id = 1;
  if (!this->_internal_interaction_id().empty()) {
    const std::string& _s = this->_internal_interaction_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.FeedbackRequest.interaction_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string character_id = 2;
  if (!this->_internal_character_id().empty()) {
    const std::string& _s = this->_internal_character_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.FeedbackRequest.character_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string session_id = 3;
  if (!this->_internal_session_id().empty()) {
    const std::string& _s = this->_internal_session_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.FeedbackRequest.session_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .service.FeedbackRequest.Feedback text_feedback = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.text_feedback_, _impl_.text_feedback_->GetCachedSize(), target, stream);
  }

  // string user_query = 6;
  if (!this->_internal_user_query().empty()) {
    const std::string& _s = this->_internal_user_query();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.FeedbackRequest.user_query");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string response = 7;
  if (!this->_internal_response().empty()) {
    const std::string& _s = this->_internal_response();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.FeedbackRequest.response");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.FeedbackRequest)
  return target;
}

::size_t FeedbackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.FeedbackRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string interaction_id = 1;
  if (!this->_internal_interaction_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_interaction_id());
  }

  // string character_id = 2;
  if (!this->_internal_character_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_character_id());
  }

  // string session_id = 3;
  if (!this->_internal_session_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_session_id());
  }

  // string user_query = 6;
  if (!this->_internal_user_query().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user_query());
  }

  // string response = 7;
  if (!this->_internal_response().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_response());
  }

  // .service.FeedbackRequest.Feedback text_feedback = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.text_feedback_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void FeedbackRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FeedbackRequest*>(&to_msg);
  auto& from = static_cast<const FeedbackRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:service.FeedbackRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_interaction_id().empty()) {
    _this->_internal_set_interaction_id(from._internal_interaction_id());
  }
  if (!from._internal_character_id().empty()) {
    _this->_internal_set_character_id(from._internal_character_id());
  }
  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (!from._internal_user_query().empty()) {
    _this->_internal_set_user_query(from._internal_user_query());
  }
  if (!from._internal_response().empty()) {
    _this->_internal_set_response(from._internal_response());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.text_feedback_ != nullptr);
    if (_this->_impl_.text_feedback_ == nullptr) {
      _this->_impl_.text_feedback_ =
          ::google::protobuf::Message::CopyConstruct<::service::FeedbackRequest_Feedback>(arena, *from._impl_.text_feedback_);
    } else {
      _this->_impl_.text_feedback_->MergeFrom(*from._impl_.text_feedback_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FeedbackRequest::CopyFrom(const FeedbackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.FeedbackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FeedbackRequest::IsInitialized() const {
  return true;
}

void FeedbackRequest::InternalSwap(FeedbackRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.interaction_id_, &other->_impl_.interaction_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.character_id_, &other->_impl_.character_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_query_, &other->_impl_.user_query_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.response_, &other->_impl_.response_, arena);
  swap(_impl_.text_feedback_, other->_impl_.text_feedback_);
}

::google::protobuf::Metadata FeedbackRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[28]);
}
// ===================================================================

class FeedbackResponse::_Internal {
 public:
};

FeedbackResponse::FeedbackResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.FeedbackResponse)
}
inline PROTOBUF_NDEBUG_INLINE FeedbackResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : feedback_response_(arena, from.feedback_response_),
        _cached_size_{0} {}

FeedbackResponse::FeedbackResponse(
    ::google::protobuf::Arena* arena,
    const FeedbackResponse& from)
    : ::google::protobuf::Message(arena) {
  FeedbackResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:service.FeedbackResponse)
}
inline PROTOBUF_NDEBUG_INLINE FeedbackResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : feedback_response_(arena),
        _cached_size_{0} {}

inline void FeedbackResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FeedbackResponse::~FeedbackResponse() {
  // @@protoc_insertion_point(destructor:service.FeedbackResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FeedbackResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.feedback_response_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
FeedbackResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(FeedbackResponse, _impl_._cached_size_),
              false,
          },
          &FeedbackResponse::MergeImpl,
          &FeedbackResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void FeedbackResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.FeedbackResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.feedback_response_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FeedbackResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 50, 2> FeedbackResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FeedbackResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::service::FeedbackResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string feedback_response = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FeedbackResponse, _impl_.feedback_response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string feedback_response = 1;
    {PROTOBUF_FIELD_OFFSET(FeedbackResponse, _impl_.feedback_response_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\21\0\0\0\0\0\0"
    "service.FeedbackResponse"
    "feedback_response"
  }},
};

::uint8_t* FeedbackResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.FeedbackResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string feedback_response = 1;
  if (!this->_internal_feedback_response().empty()) {
    const std::string& _s = this->_internal_feedback_response();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "service.FeedbackResponse.feedback_response");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.FeedbackResponse)
  return target;
}

::size_t FeedbackResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.FeedbackResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string feedback_response = 1;
  if (!this->_internal_feedback_response().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_feedback_response());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void FeedbackResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FeedbackResponse*>(&to_msg);
  auto& from = static_cast<const FeedbackResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.FeedbackResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_feedback_response().empty()) {
    _this->_internal_set_feedback_response(from._internal_feedback_response());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FeedbackResponse::CopyFrom(const FeedbackResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.FeedbackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FeedbackResponse::IsInitialized() const {
  return true;
}

void FeedbackResponse::InternalSwap(FeedbackResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feedback_response_, &other->_impl_.feedback_response_, arena);
}

::google::protobuf::Metadata FeedbackResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_service_2eproto_getter,
                                   &descriptor_table_service_2eproto_once,
                                   file_level_metadata_service_2eproto[29]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace service
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_service_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
#else
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

#include "service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace service {
PROTOBUF_CONSTEXPR AudioConfig::AudioConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sample_rate_hertz_)*/0
  , /*decltype(_impl_.disable_audio_)*/false
  , /*decltype(_impl_.enable_facial_data_)*/false
  , /*decltype(_impl_.enable_facial_emotion_data_)*/false
  , /*decltype(_impl_.face_model_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AudioConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioConfigDefaultTypeInternal() {}
  union {
    AudioConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioConfigDefaultTypeInternal _AudioConfig_default_instance_;
PROTOBUF_CONSTEXPR TriggerConfig::TriggerConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.trigger_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.trigger_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TriggerConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TriggerConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TriggerConfigDefaultTypeInternal() {}
  union {
    TriggerConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TriggerConfigDefaultTypeInternal _TriggerConfig_default_instance_;
PROTOBUF_CONSTEXPR ActionConfig_Character::ActionConfig_Character(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.bio_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ActionConfig_CharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActionConfig_CharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActionConfig_CharacterDefaultTypeInternal() {}
  union {
    ActionConfig_Character _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActionConfig_CharacterDefaultTypeInternal _ActionConfig_Character_default_instance_;
PROTOBUF_CONSTEXPR ActionConfig_Object::ActionConfig_Object(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ActionConfig_ObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActionConfig_ObjectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActionConfig_ObjectDefaultTypeInternal() {}
  union {
    ActionConfig_Object _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActionConfig_ObjectDefaultTypeInternal _ActionConfig_Object_default_instance_;
PROTOBUF_CONSTEXPR ActionConfig::ActionConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.actions_)*/{}
  , /*decltype(_impl_.characters_)*/{}
  , /*decltype(_impl_.objects_)*/{}
  , /*decltype(_impl_.classification_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.current_attention_object_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.context_level_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ActionConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActionConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActionConfigDefaultTypeInternal() {}
  union {
    ActionConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActionConfigDefaultTypeInternal _ActionConfig_default_instance_;
PROTOBUF_CONSTEXPR STTRequest::STTRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.request_type_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct STTRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STTRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~STTRequestDefaultTypeInternal() {}
  union {
    STTRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STTRequestDefaultTypeInternal _STTRequest_default_instance_;
PROTOBUF_CONSTEXPR STTResponse::STTResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct STTResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STTResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~STTResponseDefaultTypeInternal() {}
  union {
    STTResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STTResponseDefaultTypeInternal _STTResponse_default_instance_;
PROTOBUF_CONSTEXPR DynamicInfoConfig::DynamicInfoConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DynamicInfoConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DynamicInfoConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DynamicInfoConfigDefaultTypeInternal() {}
  union {
    DynamicInfoConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DynamicInfoConfigDefaultTypeInternal _DynamicInfoConfig_default_instance_;
PROTOBUF_CONSTEXPR VisionInput_ImageData::VisionInput_ImageData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.width_)*/0
  , /*decltype(_impl_.height_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VisionInput_ImageDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisionInput_ImageDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisionInput_ImageDataDefaultTypeInternal() {}
  union {
    VisionInput_ImageData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisionInput_ImageDataDefaultTypeInternal _VisionInput_ImageData_default_instance_;
PROTOBUF_CONSTEXPR VisionInput_VideoData::VisionInput_VideoData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.fps_)*/0
  , /*decltype(_impl_.width_)*/0
  , /*decltype(_impl_.height_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VisionInput_VideoDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisionInput_VideoDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisionInput_VideoDataDefaultTypeInternal() {}
  union {
    VisionInput_VideoData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisionInput_VideoDataDefaultTypeInternal _VisionInput_VideoData_default_instance_;
PROTOBUF_CONSTEXPR VisionInput::VisionInput(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.vision_data_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct VisionInputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisionInputDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisionInputDefaultTypeInternal() {}
  union {
    VisionInput _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisionInputDefaultTypeInternal _VisionInput_default_instance_;
PROTOBUF_CONSTEXPR GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUseDefaultTypeInternal _GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR GetResponseRequest_GetResponseConfig::GetResponseRequest_GetResponseConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.narrative_template_keys_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.character_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.api_key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.session_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.speaker_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.language_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.speaker_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.api_auth_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.audio_config_)*/nullptr
  , /*decltype(_impl_.action_config_)*/nullptr
  , /*decltype(_impl_.dynamic_info_config_)*/nullptr
  , /*decltype(_impl_.vision_input_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetResponseRequest_GetResponseConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseRequest_GetResponseConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseRequest_GetResponseConfigDefaultTypeInternal() {}
  union {
    GetResponseRequest_GetResponseConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseRequest_GetResponseConfigDefaultTypeInternal _GetResponseRequest_GetResponseConfig_default_instance_;
PROTOBUF_CONSTEXPR GetResponseRequest_GetResponseData::GetResponseRequest_GetResponseData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.input_type_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct GetResponseRequest_GetResponseDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseRequest_GetResponseDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseRequest_GetResponseDataDefaultTypeInternal() {}
  union {
    GetResponseRequest_GetResponseData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseRequest_GetResponseDataDefaultTypeInternal _GetResponseRequest_GetResponseData_default_instance_;
PROTOBUF_CONSTEXPR GetResponseRequest::GetResponseRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.request_type_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct GetResponseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseRequestDefaultTypeInternal() {}
  union {
    GetResponseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseRequestDefaultTypeInternal _GetResponseRequest_default_instance_;
PROTOBUF_CONSTEXPR GetResponseRequestSingle::GetResponseRequestSingle(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.response_config_)*/nullptr
  , /*decltype(_impl_.response_data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetResponseRequestSingleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseRequestSingleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseRequestSingleDefaultTypeInternal() {}
  union {
    GetResponseRequestSingle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseRequestSingleDefaultTypeInternal _GetResponseRequestSingle_default_instance_;
PROTOBUF_CONSTEXPR GetResponseResponse_AudioResponse::GetResponseResponse_AudioResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.audio_data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.text_data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.face_data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.audio_config_)*/nullptr
  , /*decltype(_impl_.face_emotion_)*/nullptr
  , /*decltype(_impl_.emotion_response_)*/nullptr
  , /*decltype(_impl_.end_of_response_)*/false
  , /*decltype(_impl_.face_data_type_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct GetResponseResponse_AudioResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseResponse_AudioResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseResponse_AudioResponseDefaultTypeInternal() {}
  union {
    GetResponseResponse_AudioResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseResponse_AudioResponseDefaultTypeInternal _GetResponseResponse_AudioResponse_default_instance_;
PROTOBUF_CONSTEXPR GetResponseResponse_ActionResponse::GetResponseResponse_ActionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.action_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetResponseResponse_ActionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseResponse_ActionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseResponse_ActionResponseDefaultTypeInternal() {}
  union {
    GetResponseResponse_ActionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseResponse_ActionResponseDefaultTypeInternal _GetResponseResponse_ActionResponse_default_instance_;
PROTOBUF_CONSTEXPR GetResponseResponse_BehaviorTreeResponse::GetResponseResponse_BehaviorTreeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bt_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.bt_constants_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.narrative_section_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetResponseResponse_BehaviorTreeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseResponse_BehaviorTreeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseResponse_BehaviorTreeResponseDefaultTypeInternal() {}
  union {
    GetResponseResponse_BehaviorTreeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseResponse_BehaviorTreeResponseDefaultTypeInternal _GetResponseResponse_BehaviorTreeResponse_default_instance_;
PROTOBUF_CONSTEXPR GetResponseResponse_UserTranscript::GetResponseResponse_UserTranscript(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.text_data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.is_final_)*/false
  , /*decltype(_impl_.end_of_response_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetResponseResponse_UserTranscriptDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseResponse_UserTranscriptDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseResponse_UserTranscriptDefaultTypeInternal() {}
  union {
    GetResponseResponse_UserTranscript _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseResponse_UserTranscriptDefaultTypeInternal _GetResponseResponse_UserTranscript_default_instance_;
PROTOBUF_CONSTEXPR GetResponseResponse::GetResponseResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.session_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.response_type_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct GetResponseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResponseResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResponseResponseDefaultTypeInternal() {}
  union {
    GetResponseResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResponseResponseDefaultTypeInternal _GetResponseResponse_default_instance_;
PROTOBUF_CONSTEXPR VisemesData::VisemesData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.visemes_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VisemesDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisemesDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisemesDataDefaultTypeInternal() {}
  union {
    VisemesData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisemesDataDefaultTypeInternal _VisemesData_default_instance_;
PROTOBUF_CONSTEXPR EmotionResponse::EmotionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.emotion_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.scale_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EmotionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmotionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmotionResponseDefaultTypeInternal() {}
  union {
    EmotionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmotionResponseDefaultTypeInternal _EmotionResponse_default_instance_;
PROTOBUF_CONSTEXPR Viseme::Viseme(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sil_)*/0
  , /*decltype(_impl_.pp_)*/0
  , /*decltype(_impl_.ff_)*/0
  , /*decltype(_impl_.th_)*/0
  , /*decltype(_impl_.dd_)*/0
  , /*decltype(_impl_.kk_)*/0
  , /*decltype(_impl_.ch_)*/0
  , /*decltype(_impl_.ss_)*/0
  , /*decltype(_impl_.nn_)*/0
  , /*decltype(_impl_.rr_)*/0
  , /*decltype(_impl_.aa_)*/0
  , /*decltype(_impl_.e_)*/0
  , /*decltype(_impl_.ih_)*/0
  , /*decltype(_impl_.oh_)*/0
  , /*decltype(_impl_.ou_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VisemeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisemeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisemeDefaultTypeInternal() {}
  union {
    Viseme _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisemeDefaultTypeInternal _Viseme_default_instance_;
PROTOBUF_CONSTEXPR BlendShapesData::BlendShapesData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.blendshape_data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BlendShapesDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlendShapesDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlendShapesDataDefaultTypeInternal() {}
  union {
    BlendShapesData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlendShapesDataDefaultTypeInternal _BlendShapesData_default_instance_;
PROTOBUF_CONSTEXPR HelloRequest::HelloRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HelloRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HelloRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HelloRequestDefaultTypeInternal() {}
  union {
    HelloRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HelloRequestDefaultTypeInternal _HelloRequest_default_instance_;
PROTOBUF_CONSTEXPR HelloResponse::HelloResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HelloResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HelloResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HelloResponseDefaultTypeInternal() {}
  union {
    HelloResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HelloResponseDefaultTypeInternal _HelloResponse_default_instance_;
PROTOBUF_CONSTEXPR FeedbackRequest_Feedback::FeedbackRequest_Feedback(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tags_)*/{}
  , /*decltype(_impl_.feedback_text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.thumbs_up_)*/false
  , /*decltype(_impl_.is_test_case_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FeedbackRequest_FeedbackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeedbackRequest_FeedbackDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeedbackRequest_FeedbackDefaultTypeInternal() {}
  union {
    FeedbackRequest_Feedback _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeedbackRequest_FeedbackDefaultTypeInternal _FeedbackRequest_Feedback_default_instance_;
PROTOBUF_CONSTEXPR FeedbackRequest::FeedbackRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.interaction_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.character_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.session_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_query_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.response_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.text_feedback_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FeedbackRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeedbackRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeedbackRequestDefaultTypeInternal() {}
  union {
    FeedbackRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeedbackRequestDefaultTypeInternal _FeedbackRequest_default_instance_;
PROTOBUF_CONSTEXPR FeedbackResponse::FeedbackResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.feedback_response_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FeedbackResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeedbackResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeedbackResponseDefaultTypeInternal() {}
  union {
    FeedbackResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeedbackResponseDefaultTypeInternal _FeedbackResponse_default_instance_;
}  // namespace service
static ::_pb::Metadata file_level_metadata_service_2eproto[30];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_service_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_service_2eproto = nullptr;

const uint32_t TableStruct_service_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::AudioConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::AudioConfig, _impl_.sample_rate_hertz_),
  PROTOBUF_FIELD_OFFSET(::service::AudioConfig, _impl_.disable_audio_),
  PROTOBUF_FIELD_OFFSET(::service::AudioConfig, _impl_.enable_facial_data_),
  PROTOBUF_FIELD_OFFSET(::service::AudioConfig, _impl_.face_model_),
  PROTOBUF_FIELD_OFFSET(::service::AudioConfig, _impl_.enable_facial_emotion_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::TriggerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::TriggerConfig, _impl_.trigger_name_),
  PROTOBUF_FIELD_OFFSET(::service::TriggerConfig, _impl_.trigger_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Character, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Character, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Character, _impl_.bio_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Object, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Object, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Object, _impl_.description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig, _impl_.actions_),
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig, _impl_.characters_),
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig, _impl_.objects_),
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig, _impl_.classification_),
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig, _impl_.context_level_),
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig, _impl_.current_attention_object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::STTRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::service::STTRequest, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::service::STTRequest, _impl_.request_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::STTResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::STTResponse, _impl_.text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::DynamicInfoConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::DynamicInfoConfig, _impl_.text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::VisionInput_ImageData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::VisionInput_ImageData, _impl_.width_),
  PROTOBUF_FIELD_OFFSET(::service::VisionInput_ImageData, _impl_.height_),
  PROTOBUF_FIELD_OFFSET(::service::VisionInput_ImageData, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::VisionInput_VideoData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::VisionInput_VideoData, _impl_.fps_),
  PROTOBUF_FIELD_OFFSET(::service::VisionInput_VideoData, _impl_.width_),
  PROTOBUF_FIELD_OFFSET(::service::VisionInput_VideoData, _impl_.height_),
  PROTOBUF_FIELD_OFFSET(::service::VisionInput_VideoData, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::VisionInput, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::service::VisionInput, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::service::VisionInput, _impl_.vision_data_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.character_id_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.api_key_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.session_id_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.audio_config_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.action_config_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.speaker_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.language_code_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.speaker_id_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.api_auth_token_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.narrative_template_keys_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.dynamic_info_config_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _impl_.vision_input_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseData, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseData, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseData, _impl_.input_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest, _impl_.request_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequestSingle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequestSingle, _impl_.response_config_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequestSingle, _impl_.response_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.audio_data_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.audio_config_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.text_data_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.end_of_response_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.face_data_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.face_emotion_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.emotion_response_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _impl_.face_data_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_ActionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_ActionResponse, _impl_.action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_BehaviorTreeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_BehaviorTreeResponse, _impl_.bt_code_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_BehaviorTreeResponse, _impl_.bt_constants_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_BehaviorTreeResponse, _impl_.narrative_section_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_UserTranscript, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_UserTranscript, _impl_.text_data_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_UserTranscript, _impl_.is_final_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_UserTranscript, _impl_.end_of_response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse, _impl_.session_id_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse, _impl_.response_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::VisemesData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::VisemesData, _impl_.visemes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::EmotionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::EmotionResponse, _impl_.emotion_),
  PROTOBUF_FIELD_OFFSET(::service::EmotionResponse, _impl_.scale_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.sil_),
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.pp_),
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.ff_),
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.th_),
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.dd_),
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.kk_),
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.ch_),
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.ss_),
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.nn_),
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.rr_),
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.aa_),
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.e_),
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.ih_),
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.oh_),
  PROTOBUF_FIELD_OFFSET(::service::Viseme, _impl_.ou_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::BlendShapesData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::BlendShapesData, _impl_.blendshape_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::HelloRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::HelloRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::HelloResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::HelloResponse, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest_Feedback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest_Feedback, _impl_.thumbs_up_),
  PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest_Feedback, _impl_.feedback_text_),
  PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest_Feedback, _impl_.tags_),
  PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest_Feedback, _impl_.is_test_case_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest, _impl_.interaction_id_),
  PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest, _impl_.character_id_),
  PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest, _impl_.session_id_),
  PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest, _impl_.text_feedback_),
  PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest, _impl_.user_query_),
  PROTOBUF_FIELD_OFFSET(::service::FeedbackRequest, _impl_.response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::FeedbackResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service::FeedbackResponse, _impl_.feedback_response_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::service::AudioConfig)},
  { 11, -1, -1, sizeof(::service::TriggerConfig)},
  { 19, -1, -1, sizeof(::service::ActionConfig_Character)},
  { 27, -1, -1, sizeof(::service::ActionConfig_Object)},
  { 35, -1, -1, sizeof(::service::ActionConfig)},
  { 47, -1, -1, sizeof(::service::STTRequest)},
  { 56, -1, -1, sizeof(::service::STTResponse)},
  { 63, -1, -1, sizeof(::service::DynamicInfoConfig)},
  { 70, -1, -1, sizeof(::service::VisionInput_ImageData)},
  { 79, -1, -1, sizeof(::service::VisionInput_VideoData)},
  { 89, -1, -1, sizeof(::service::VisionInput)},
  { 98, 106, -1, sizeof(::service::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse)},
  { 108, -1, -1, sizeof(::service::GetResponseRequest_GetResponseConfig)},
  { 126, -1, -1, sizeof(::service::GetResponseRequest_GetResponseData)},
  { 136, -1, -1, sizeof(::service::GetResponseRequest)},
  { 145, -1, -1, sizeof(::service::GetResponseRequestSingle)},
  { 153, -1, -1, sizeof(::service::GetResponseResponse_AudioResponse)},
  { 169, -1, -1, sizeof(::service::GetResponseResponse_ActionResponse)},
  { 176, -1, -1, sizeof(::service::GetResponseResponse_BehaviorTreeResponse)},
  { 185, -1, -1, sizeof(::service::GetResponseResponse_UserTranscript)},
  { 194, -1, -1, sizeof(::service::GetResponseResponse)},
  { 209, -1, -1, sizeof(::service::VisemesData)},
  { 216, -1, -1, sizeof(::service::EmotionResponse)},
  { 224, -1, -1, sizeof(::service::Viseme)},
  { 245, -1, -1, sizeof(::service::BlendShapesData)},
  { 252, -1, -1, sizeof(::service::HelloRequest)},
  { 259, -1, -1, sizeof(::service::HelloResponse)},
  { 266, -1, -1, sizeof(::service::FeedbackRequest_Feedback)},
  { 276, -1, -1, sizeof(::service::FeedbackRequest)},
  { 288, -1, -1, sizeof(::service::FeedbackResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::service::_AudioConfig_default_instance_._instance,
  &::service::_TriggerConfig_default_instance_._instance,
  &::service::_ActionConfig_Character_default_instance_._instance,
  &::service::_ActionConfig_Object_default_instance_._instance,
  &::service::_ActionConfig_default_instance_._instance,
  &::service::_STTRequest_default_instance_._instance,
  &::service::_STTResponse_default_instance_._instance,
  &::service::_DynamicInfoConfig_default_instance_._instance,
  &::service::_VisionInput_ImageData_default_instance_._instance,
  &::service::_VisionInput_VideoData_default_instance_._instance,
  &::service::_VisionInput_default_instance_._instance,
  &::service::_GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse_default_instance_._instance,
  &::service::_GetResponseRequest_GetResponseConfig_default_instance_._instance,
  &::service::_GetResponseRequest_GetResponseData_default_instance_._instance,
  &::service::_GetResponseRequest_default_instance_._instance,
  &::service::_GetResponseRequestSingle_default_instance_._instance,
  &::service::_GetResponseResponse_AudioResponse_default_instance_._instance,
  &::service::_GetResponseResponse_ActionResponse_default_instance_._instance,
  &::service::_GetResponseResponse_BehaviorTreeResponse_default_instance_._instance,
  &::service::_GetResponseResponse_UserTranscript_default_instance_._instance,
  &::service::_GetResponseResponse_default_instance_._instance,
  &::service::_VisemesData_default_instance_._instance,
  &::service::_EmotionResponse_default_instance_._instance,
  &::service::_Viseme_default_instance_._instance,
  &::service::_BlendShapesData_default_instance_._instance,
  &::service::_HelloRequest_default_instance_._instance,
  &::service::_HelloResponse_default_instance_._instance,
  &::service::_FeedbackRequest_Feedback_default_instance_._instance,
  &::service::_FeedbackRequest_default_instance_._instance,
  &::service::_FeedbackResponse_default_instance_._instance,
};

const char descriptor_table_protodef_service_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rservice.proto\022\007service\032\030arkit_blend_sh"
  "apes.proto\"\247\001\n\013AudioConfig\022\031\n\021sample_rat"
  "e_hertz\030\001 \001(\005\022\025\n\rdisable_audio\030\002 \001(\010\022\032\n\022"
  "enable_facial_data\030\003 \001(\010\022&\n\nface_model\030\004"
  " \001(\0162\022.service.FaceModel\022\"\n\032enable_facia"
  "l_emotion_data\030\005 \001(\010\">\n\rTriggerConfig\022\024\n"
  "\014trigger_name\030\001 \001(\t\022\027\n\017trigger_message\030\002"
  " \001(\t\"\251\002\n\014ActionConfig\022\017\n\007actions\030\001 \003(\t\0223"
  "\n\ncharacters\030\002 \003(\0132\037.service.ActionConfi"
  "g.Character\022-\n\007objects\030\003 \003(\0132\034.service.A"
  "ctionConfig.Object\022\026\n\016classification\030\004 \001"
  "(\t\022\025\n\rcontext_level\030\005 \001(\005\022 \n\030current_att"
  "ention_object\030\006 \001(\t\032&\n\tCharacter\022\014\n\004name"
  "\030\001 \001(\t\022\013\n\003bio\030\002 \001(\t\032+\n\006Object\022\014\n\004name\030\001 "
  "\001(\t\022\023\n\013description\030\002 \001(\t\"a\n\nSTTRequest\022,"
  "\n\014audio_config\030\001 \001(\0132\024.service.AudioConf"
  "igH\000\022\025\n\013audio_chunk\030\002 \001(\014H\000B\016\n\014request_t"
  "ype\"\033\n\013STTResponse\022\014\n\004text\030\001 \001(\t\"!\n\021Dyna"
  "micInfoConfig\022\014\n\004text\030\001 \001(\t\"\211\002\n\013VisionIn"
  "put\0224\n\nimage_data\030\001 \001(\0132\036.service.Vision"
  "Input.ImageDataH\000\0224\n\nvideo_data\030\002 \001(\0132\036."
  "service.VisionInput.VideoDataH\000\0328\n\tImage"
  "Data\022\r\n\005width\030\001 \001(\005\022\016\n\006height\030\002 \001(\005\022\014\n\004d"
  "ata\030\003 \001(\014\032E\n\tVideoData\022\013\n\003fps\030\001 \001(\005\022\r\n\005w"
  "idth\030\002 \001(\005\022\016\n\006height\030\003 \001(\005\022\014\n\004data\030\004 \001(\014"
  "B\r\n\013vision_data\"\305\006\n\022GetResponseRequest\022L"
  "\n\023get_response_config\030\001 \001(\0132-.service.Ge"
  "tResponseRequest.GetResponseConfigH\000\022H\n\021"
  "get_response_data\030\002 \001(\0132+.service.GetRes"
  "ponseRequest.GetResponseDataH\000\032\212\004\n\021GetRe"
  "sponseConfig\022\024\n\014character_id\030\002 \001(\t\022\017\n\007ap"
  "i_key\030\003 \001(\t\022\022\n\nsession_id\030\004 \001(\t\022*\n\014audio"
  "_config\030\005 \001(\0132\024.service.AudioConfig\022,\n\ra"
  "ction_config\030\006 \001(\0132\025.service.ActionConfi"
  "g\022\017\n\007speaker\030\007 \001(\t\022\025\n\rlanguage_code\030\010 \001("
  "\t\022\022\n\nspeaker_id\030\t \001(\t\022\026\n\016api_auth_token\030"
  "\n \001(\t\022i\n\027narrative_template_keys\030\013 \003(\0132H"
  ".service.GetResponseRequest.GetResponseC"
  "onfig.NarrativeTemplateKeysEntry\0227\n\023dyna"
  "mic_info_config\030\014 \001(\0132\032.service.DynamicI"
  "nfoConfig\022*\n\014vision_input\030\r \001(\0132\024.servic"
  "e.VisionInput\032<\n\032NarrativeTemplateKeysEn"
  "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032z\n\017G"
  "etResponseData\022\024\n\naudio_data\030\001 \001(\014H\000\022\023\n\t"
  "text_data\030\002 \001(\tH\000\022.\n\014trigger_data\030\003 \001(\0132"
  "\026.service.TriggerConfigH\000B\014\n\ninput_typeB"
  "\016\n\014request_type\"\204\001\n\030GetResponseRequestSi"
  "ngle\0224\n\017response_config\030\001 \001(\0132\033.service."
  "GetResponseRequest\0222\n\rresponse_data\030\002 \001("
  "\0132\033.service.GetResponseRequest\"\337\007\n\023GetRe"
  "sponseResponse\022\022\n\nsession_id\030\001 \001(\t\022F\n\017ac"
  "tion_response\030\002 \001(\0132+.service.GetRespons"
  "eResponse.ActionResponseH\000\022D\n\016audio_resp"
  "onse\030\003 \001(\0132*.service.GetResponseResponse"
  ".AudioResponseH\000\022\023\n\tdebug_log\030\004 \001(\tH\000\022A\n"
  "\nuser_query\030\005 \001(\0132+.service.GetResponseR"
  "esponse.UserTranscriptH\000\022H\n\013bt_response\030"
  "\006 \001(\01321.service.GetResponseResponse.Beha"
  "viorTreeResponseH\000\022\032\n\020emotion_response\030\007"
  " \001(\tH\000\022\030\n\016interaction_id\030\010 \001(\tH\000\032\355\002\n\rAud"
  "ioResponse\022\022\n\naudio_data\030\001 \001(\014\022*\n\014audio_"
  "config\030\002 \001(\0132\024.service.AudioConfig\022\021\n\tte"
  "xt_data\030\003 \001(\t\022\027\n\017end_of_response\030\004 \001(\010\022\021"
  "\n\tface_data\030\005 \001(\t\022,\n\014visemes_data\030\006 \001(\0132"
  "\024.service.VisemesDataH\000\0224\n\020blendshapes_d"
  "ata\030\007 \001(\0132\030.service.BlendShapesDataH\000\0223\n"
  "\014face_emotion\030\010 \001(\0132\035.service.ARKitBlend"
  "ShapesData\0222\n\020emotion_response\030\t \001(\0132\030.s"
  "ervice.EmotionResponseB\020\n\016face_data_type"
  "\032 \n\016ActionResponse\022\016\n\006action\030\001 \001(\t\032[\n\024Be"
  "haviorTreeResponse\022\017\n\007bt_code\030\001 \001(\t\022\024\n\014b"
  "t_constants\030\002 \001(\t\022\034\n\024narrative_section_i"
  "d\030\003 \001(\t\032N\n\016UserTranscript\022\021\n\ttext_data\030\001"
  " \001(\t\022\020\n\010is_final\030\002 \001(\010\022\027\n\017end_of_respons"
  "e\030\003 \001(\010B\017\n\rresponse_type\"/\n\013VisemesData\022"
  " \n\007visemes\030\001 \001(\0132\017.service.Viseme\"1\n\017Emo"
  "tionResponse\022\017\n\007emotion\030\001 \001(\t\022\r\n\005scale\030\002"
  " \001(\t\"\274\001\n\006Viseme\022\013\n\003sil\030\001 \001(\002\022\n\n\002pp\030\002 \001(\002"
  "\022\n\n\002ff\030\003 \001(\002\022\n\n\002th\030\004 \001(\002\022\n\n\002dd\030\005 \001(\002\022\n\n\002"
  "kk\030\006 \001(\002\022\n\n\002ch\030\007 \001(\002\022\n\n\002ss\030\010 \001(\002\022\n\n\002nn\030\t"
  " \001(\002\022\n\n\002rr\030\n \001(\002\022\n\n\002aa\030\013 \001(\002\022\t\n\001e\030\014 \001(\002\022"
  "\n\n\002ih\030\r \001(\002\022\n\n\002oh\030\016 \001(\002\022\n\n\002ou\030\017 \001(\002\"*\n\017B"
  "lendShapesData\022\027\n\017blendshape_data\030\001 \001(\t\""
  "\034\n\014HelloRequest\022\014\n\004name\030\001 \001(\t\" \n\rHelloRe"
  "sponse\022\017\n\007message\030\001 \001(\t\"\215\002\n\017FeedbackRequ"
  "est\022\026\n\016interaction_id\030\001 \001(\t\022\024\n\014character"
  "_id\030\002 \001(\t\022\022\n\nsession_id\030\003 \001(\t\0228\n\rtext_fe"
  "edback\030\005 \001(\0132!.service.FeedbackRequest.F"
  "eedback\022\022\n\nuser_query\030\006 \001(\t\022\020\n\010response\030"
  "\007 \001(\t\032X\n\010Feedback\022\021\n\tthumbs_up\030\001 \001(\010\022\025\n\r"
  "feedback_text\030\002 \001(\t\022\014\n\004tags\030\003 \003(\t\022\024\n\014is_"
  "test_case\030\004 \001(\010\"-\n\020FeedbackResponse\022\031\n\021f"
  "eedback_response\030\001 \001(\t*\212\001\n\tFaceModel\022\032\n\026"
  "FACE_MODEL_UNSPECIFIED\020\000\022\036\n\032FACE_MODEL_A"
  "_2F_MODEL_NAME\020\001\022\"\n\036FACE_MODEL_PHONEMES_"
  "MODEL_NAME\020\002\022\035\n\031FACE_MODEL_OVR_MODEL_NAM"
  "E\020\0032\301\003\n\rConvaiService\0228\n\005Hello\022\025.service"
  ".HelloRequest\032\026.service.HelloResponse\"\000\022"
  "B\n\013HelloStream\022\025.service.HelloRequest\032\026."
  "service.HelloResponse\"\000(\0010\001\022\?\n\014SpeechToT"
  "ext\022\023.service.STTRequest\032\024.service.STTRe"
  "sponse\"\000(\0010\001\022N\n\013GetResponse\022\033.service.Ge"
  "tResponseRequest\032\034.service.GetResponseRe"
  "sponse\"\000(\0010\001\022X\n\021GetResponseSingle\022!.serv"
  "ice.GetResponseRequestSingle\032\034.service.G"
  "etResponseResponse\"\0000\001\022G\n\016SubmitFeedback"
  "\022\030.service.FeedbackRequest\032\031.service.Fee"
  "dbackResponse\"\000B\017Z\rproto/serviceb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_service_2eproto_deps[1] = {
  &::descriptor_table_arkit_5fblend_5fshapes_2eproto,
};
static ::_pbi::once_flag descriptor_table_service_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_service_2eproto = {
    false, false, 4320, descriptor_table_protodef_service_2eproto,
    "service.proto",
    &descriptor_table_service_2eproto_once, descriptor_table_service_2eproto_deps, 1, 30,
    schemas, file_default_instances, TableStruct_service_2eproto::offsets,
    file_level_metadata_service_2eproto, file_level_enum_descriptors_service_2eproto,
    file_level_service_descriptors_service_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_service_2eproto_getter() {
  return &descriptor_table_service_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_service_2eproto(&descriptor_table_service_2eproto);
namespace service {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FaceModel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_service_2eproto);
  return file_level_enum_descriptors_service_2eproto[0];
}
bool FaceModel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class AudioConfig::_Internal {
 public:
};

AudioConfig::AudioConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.AudioConfig)
}
AudioConfig::AudioConfig(const AudioConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AudioConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sample_rate_hertz_){}
    , decltype(_impl_.disable_audio_){}
    , decltype(_impl_.enable_facial_data_){}
    , decltype(_impl_.enable_facial_emotion_data_){}
    , decltype(_impl_.face_model_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.sample_rate_hertz_, &from._impl_.sample_rate_hertz_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.face_model_) -
    reinterpret_cast<char*>(&_impl_.sample_rate_hertz_)) + sizeof(_impl_.face_model_));
  // @@protoc_insertion_point(copy_constructor:service.AudioConfig)
}

inline void AudioConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sample_rate_hertz_){0}
    , decltype(_impl_.disable_audio_){false}
    , decltype(_impl_.enable_facial_data_){false}
    , decltype(_impl_.enable_facial_emotion_data_){false}
    , decltype(_impl_.face_model_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AudioConfig::~AudioConfig() {
  // @@protoc_insertion_point(destructor:service.AudioConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AudioConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AudioConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AudioConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:service.AudioConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.sample_rate_hertz_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.face_model_) -
      reinterpret_cast<char*>(&_impl_.sample_rate_hertz_)) + sizeof(_impl_.face_model_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AudioConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 sample_rate_hertz = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.sample_rate_hertz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool disable_audio = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.disable_audio_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool enable_facial_data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.enable_facial_data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service.FaceModel face_model = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_face_model(static_cast<::service::FaceModel>(val));
        } else
          goto handle_unusual;
        continue;
      // bool enable_facial_emotion_data = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.enable_facial_emotion_data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AudioConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.AudioConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sample_rate_hertz = 1;
  if (this->_internal_sample_rate_hertz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_sample_rate_hertz(), target);
  }

  // bool disable_audio = 2;
  if (this->_internal_disable_audio() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_disable_audio(), target);
  }

  // bool enable_facial_data = 3;
  if (this->_internal_enable_facial_data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_enable_facial_data(), target);
  }

  // .service.FaceModel face_model = 4;
  if (this->_internal_face_model() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_face_model(), target);
  }

  // bool enable_facial_emotion_data = 5;
  if (this->_internal_enable_facial_emotion_data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_enable_facial_emotion_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.AudioConfig)
  return target;
}

size_t AudioConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.AudioConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 sample_rate_hertz = 1;
  if (this->_internal_sample_rate_hertz() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_sample_rate_hertz());
  }

  // bool disable_audio = 2;
  if (this->_internal_disable_audio() != 0) {
    total_size += 1 + 1;
  }

  // bool enable_facial_data = 3;
  if (this->_internal_enable_facial_data() != 0) {
    total_size += 1 + 1;
  }

  // bool enable_facial_emotion_data = 5;
  if (this->_internal_enable_facial_emotion_data() != 0) {
    total_size += 1 + 1;
  }

  // .service.FaceModel face_model = 4;
  if (this->_internal_face_model() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_face_model());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AudioConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AudioConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AudioConfig::GetClassData() const { return &_class_data_; }


void AudioConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AudioConfig*>(&to_msg);
  auto& from = static_cast<const AudioConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.AudioConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sample_rate_hertz() != 0) {
    _this->_internal_set_sample_rate_hertz(from._internal_sample_rate_hertz());
  }
  if (from._internal_disable_audio() != 0) {
    _this->_internal_set_disable_audio(from._internal_disable_audio());
  }
  if (from._internal_enable_facial_data() != 0) {
    _this->_internal_set_enable_facial_data(from._internal_enable_facial_data());
  }
  if (from._internal_enable_facial_emotion_data() != 0) {
    _this->_internal_set_enable_facial_emotion_data(from._internal_enable_facial_emotion_data());
  }
  if (from._internal_face_model() != 0) {
    _this->_internal_set_face_model(from._internal_face_model());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AudioConfig::CopyFrom(const AudioConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.AudioConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioConfig::IsInitialized() const {
  return true;
}

void AudioConfig::InternalSwap(AudioConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AudioConfig, _impl_.face_model_)
      + sizeof(AudioConfig::_impl_.face_model_)
      - PROTOBUF_FIELD_OFFSET(AudioConfig, _impl_.sample_rate_hertz_)>(
          reinterpret_cast<char*>(&_impl_.sample_rate_hertz_),
          reinterpret_cast<char*>(&other->_impl_.sample_rate_hertz_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AudioConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[0]);
}

// ===================================================================

class TriggerConfig::_Internal {
 public:
};

TriggerConfig::TriggerConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.TriggerConfig)
}
TriggerConfig::TriggerConfig(const TriggerConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TriggerConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trigger_name_){}
    , decltype(_impl_.trigger_message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.trigger_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trigger_name().empty()) {
    _this->_impl_.trigger_name_.Set(from._internal_trigger_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.trigger_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trigger_message().empty()) {
    _this->_impl_.trigger_message_.Set(from._internal_trigger_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:service.TriggerConfig)
}

inline void TriggerConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.trigger_name_){}
    , decltype(_impl_.trigger_message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.trigger_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.trigger_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TriggerConfig::~TriggerConfig() {
  // @@protoc_insertion_point(destructor:service.TriggerConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TriggerConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trigger_name_.Destroy();
  _impl_.trigger_message_.Destroy();
}

void TriggerConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TriggerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:service.TriggerConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trigger_name_.ClearToEmpty();
  _impl_.trigger_message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TriggerConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string trigger_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_trigger_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.TriggerConfig.trigger_name"));
        } else
          goto handle_unusual;
        continue;
      // string trigger_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_trigger_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.TriggerConfig.trigger_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TriggerConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.TriggerConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string trigger_name = 1;
  if (!this->_internal_trigger_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trigger_name().data(), static_cast<int>(this->_internal_trigger_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.TriggerConfig.trigger_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_trigger_name(), target);
  }

  // string trigger_message = 2;
  if (!this->_internal_trigger_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trigger_message().data(), static_cast<int>(this->_internal_trigger_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.TriggerConfig.trigger_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_trigger_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.TriggerConfig)
  return target;
}

size_t TriggerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.TriggerConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trigger_name = 1;
  if (!this->_internal_trigger_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trigger_name());
  }

  // string trigger_message = 2;
  if (!this->_internal_trigger_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trigger_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TriggerConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TriggerConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TriggerConfig::GetClassData() const { return &_class_data_; }


void TriggerConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TriggerConfig*>(&to_msg);
  auto& from = static_cast<const TriggerConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.TriggerConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trigger_name().empty()) {
    _this->_internal_set_trigger_name(from._internal_trigger_name());
  }
  if (!from._internal_trigger_message().empty()) {
    _this->_internal_set_trigger_message(from._internal_trigger_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TriggerConfig::CopyFrom(const TriggerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.TriggerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TriggerConfig::IsInitialized() const {
  return true;
}

void TriggerConfig::InternalSwap(TriggerConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trigger_name_, lhs_arena,
      &other->_impl_.trigger_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trigger_message_, lhs_arena,
      &other->_impl_.trigger_message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TriggerConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[1]);
}

// ===================================================================

class ActionConfig_Character::_Internal {
 public:
};

ActionConfig_Character::ActionConfig_Character(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.ActionConfig.Character)
}
ActionConfig_Character::ActionConfig_Character(const ActionConfig_Character& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ActionConfig_Character* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.bio_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.bio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bio_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bio().empty()) {
    _this->_impl_.bio_.Set(from._internal_bio(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:service.ActionConfig.Character)
}

inline void ActionConfig_Character::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.bio_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.bio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bio_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ActionConfig_Character::~ActionConfig_Character() {
  // @@protoc_insertion_point(destructor:service.ActionConfig.Character)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ActionConfig_Character::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.bio_.Destroy();
}

void ActionConfig_Character::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ActionConfig_Character::Clear() {
// @@protoc_insertion_point(message_clear_start:service.ActionConfig.Character)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.bio_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActionConfig_Character::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.ActionConfig.Character.name"));
        } else
          goto handle_unusual;
        continue;
      // string bio = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_bio();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.ActionConfig.Character.bio"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ActionConfig_Character::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.ActionConfig.Character)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.ActionConfig.Character.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string bio = 2;
  if (!this->_internal_bio().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bio().data(), static_cast<int>(this->_internal_bio().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.ActionConfig.Character.bio");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_bio(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.ActionConfig.Character)
  return target;
}

size_t ActionConfig_Character::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.ActionConfig.Character)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string bio = 2;
  if (!this->_internal_bio().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bio());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ActionConfig_Character::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ActionConfig_Character::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ActionConfig_Character::GetClassData() const { return &_class_data_; }


void ActionConfig_Character::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ActionConfig_Character*>(&to_msg);
  auto& from = static_cast<const ActionConfig_Character&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.ActionConfig.Character)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_bio().empty()) {
    _this->_internal_set_bio(from._internal_bio());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ActionConfig_Character::CopyFrom(const ActionConfig_Character& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.ActionConfig.Character)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionConfig_Character::IsInitialized() const {
  return true;
}

void ActionConfig_Character::InternalSwap(ActionConfig_Character* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.bio_, lhs_arena,
      &other->_impl_.bio_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionConfig_Character::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[2]);
}

// ===================================================================

class ActionConfig_Object::_Internal {
 public:
};

ActionConfig_Object::ActionConfig_Object(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.ActionConfig.Object)
}
ActionConfig_Object::ActionConfig_Object(const ActionConfig_Object& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ActionConfig_Object* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:service.ActionConfig.Object)
}

inline void ActionConfig_Object::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ActionConfig_Object::~ActionConfig_Object() {
  // @@protoc_insertion_point(destructor:service.ActionConfig.Object)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ActionConfig_Object::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
}

void ActionConfig_Object::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ActionConfig_Object::Clear() {
// @@protoc_insertion_point(message_clear_start:service.ActionConfig.Object)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActionConfig_Object::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.ActionConfig.Object.name"));
        } else
          goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.ActionConfig.Object.description"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ActionConfig_Object::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.ActionConfig.Object)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.ActionConfig.Object.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.ActionConfig.Object.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.ActionConfig.Object)
  return target;
}

size_t ActionConfig_Object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.ActionConfig.Object)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ActionConfig_Object::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ActionConfig_Object::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ActionConfig_Object::GetClassData() const { return &_class_data_; }


void ActionConfig_Object::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ActionConfig_Object*>(&to_msg);
  auto& from = static_cast<const ActionConfig_Object&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.ActionConfig.Object)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ActionConfig_Object::CopyFrom(const ActionConfig_Object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.ActionConfig.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionConfig_Object::IsInitialized() const {
  return true;
}

void ActionConfig_Object::InternalSwap(ActionConfig_Object* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionConfig_Object::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[3]);
}

// ===================================================================

class ActionConfig::_Internal {
 public:
};

ActionConfig::ActionConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.ActionConfig)
}
ActionConfig::ActionConfig(const ActionConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ActionConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.actions_){from._impl_.actions_}
    , decltype(_impl_.characters_){from._impl_.characters_}
    , decltype(_impl_.objects_){from._impl_.objects_}
    , decltype(_impl_.classification_){}
    , decltype(_impl_.current_attention_object_){}
    , decltype(_impl_.context_level_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.classification_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.classification_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_classification().empty()) {
    _this->_impl_.classification_.Set(from._internal_classification(), 
      _this->GetArenaForAllocation());
  }
  _impl_.current_attention_object_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.current_attention_object_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_current_attention_object().empty()) {
    _this->_impl_.current_attention_object_.Set(from._internal_current_attention_object(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.context_level_ = from._impl_.context_level_;
  // @@protoc_insertion_point(copy_constructor:service.ActionConfig)
}

inline void ActionConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.actions_){arena}
    , decltype(_impl_.characters_){arena}
    , decltype(_impl_.objects_){arena}
    , decltype(_impl_.classification_){}
    , decltype(_impl_.current_attention_object_){}
    , decltype(_impl_.context_level_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.classification_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.classification_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.current_attention_object_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.current_attention_object_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ActionConfig::~ActionConfig() {
  // @@protoc_insertion_point(destructor:service.ActionConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ActionConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.actions_.~RepeatedPtrField();
  _impl_.characters_.~RepeatedPtrField();
  _impl_.objects_.~RepeatedPtrField();
  _impl_.classification_.Destroy();
  _impl_.current_attention_object_.Destroy();
}

void ActionConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ActionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:service.ActionConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.actions_.Clear();
  _impl_.characters_.Clear();
  _impl_.objects_.Clear();
  _impl_.classification_.ClearToEmpty();
  _impl_.current_attention_object_.ClearToEmpty();
  _impl_.context_level_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActionConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string actions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "service.ActionConfig.actions"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .service.ActionConfig.Character characters = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_characters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .service.ActionConfig.Object objects = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_objects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string classification = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_classification();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.ActionConfig.classification"));
        } else
          goto handle_unusual;
        continue;
      // int32 context_level = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.context_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string current_attention_object = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_current_attention_object();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.ActionConfig.current_attention_object"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ActionConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.ActionConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string actions = 1;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.ActionConfig.actions");
    target = stream->WriteString(1, s, target);
  }

  // repeated .service.ActionConfig.Character characters = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_characters_size()); i < n; i++) {
    const auto& repfield = this->_internal_characters(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .service.ActionConfig.Object objects = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_objects_size()); i < n; i++) {
    const auto& repfield = this->_internal_objects(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string classification = 4;
  if (!this->_internal_classification().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_classification().data(), static_cast<int>(this->_internal_classification().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.ActionConfig.classification");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_classification(), target);
  }

  // int32 context_level = 5;
  if (this->_internal_context_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_context_level(), target);
  }

  // string current_attention_object = 6;
  if (!this->_internal_current_attention_object().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_current_attention_object().data(), static_cast<int>(this->_internal_current_attention_object().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.ActionConfig.current_attention_object");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_current_attention_object(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.ActionConfig)
  return target;
}

size_t ActionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.ActionConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.actions_.size());
  for (int i = 0, n = _impl_.actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.actions_.Get(i));
  }

  // repeated .service.ActionConfig.Character characters = 2;
  total_size += 1UL * this->_internal_characters_size();
  for (const auto& msg : this->_impl_.characters_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .service.ActionConfig.Object objects = 3;
  total_size += 1UL * this->_internal_objects_size();
  for (const auto& msg : this->_impl_.objects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string classification = 4;
  if (!this->_internal_classification().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_classification());
  }

  // string current_attention_object = 6;
  if (!this->_internal_current_attention_object().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_current_attention_object());
  }

  // int32 context_level = 5;
  if (this->_internal_context_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_context_level());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ActionConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ActionConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ActionConfig::GetClassData() const { return &_class_data_; }


void ActionConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ActionConfig*>(&to_msg);
  auto& from = static_cast<const ActionConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.ActionConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.actions_.MergeFrom(from._impl_.actions_);
  _this->_impl_.characters_.MergeFrom(from._impl_.characters_);
  _this->_impl_.objects_.MergeFrom(from._impl_.objects_);
  if (!from._internal_classification().empty()) {
    _this->_internal_set_classification(from._internal_classification());
  }
  if (!from._internal_current_attention_object().empty()) {
    _this->_internal_set_current_attention_object(from._internal_current_attention_object());
  }
  if (from._internal_context_level() != 0) {
    _this->_internal_set_context_level(from._internal_context_level());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ActionConfig::CopyFrom(const ActionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.ActionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionConfig::IsInitialized() const {
  return true;
}

void ActionConfig::InternalSwap(ActionConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.actions_.InternalSwap(&other->_impl_.actions_);
  _impl_.characters_.InternalSwap(&other->_impl_.characters_);
  _impl_.objects_.InternalSwap(&other->_impl_.objects_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.classification_, lhs_arena,
      &other->_impl_.classification_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.current_attention_object_, lhs_arena,
      &other->_impl_.current_attention_object_, rhs_arena
  );
  swap(_impl_.context_level_, other->_impl_.context_level_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[4]);
}

// ===================================================================

class STTRequest::_Internal {
 public:
  static const ::service::AudioConfig& audio_config(const STTRequest* msg);
};

const ::service::AudioConfig&
STTRequest::_Internal::audio_config(const STTRequest* msg) {
  return *msg->_impl_.request_type_.audio_config_;
}
void STTRequest::set_allocated_audio_config(::service::AudioConfig* audio_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_request_type();
  if (audio_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(audio_config);
    if (message_arena != submessage_arena) {
      audio_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, audio_config, submessage_arena);
    }
    set_has_audio_config();
    _impl_.request_type_.audio_config_ = audio_config;
  }
  // @@protoc_insertion_point(field_set_allocated:service.STTRequest.audio_config)
}
STTRequest::STTRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.STTRequest)
}
STTRequest::STTRequest(const STTRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  STTRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.request_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_request_type();
  switch (from.request_type_case()) {
    case kAudioConfig: {
      _this->_internal_mutable_audio_config()->::service::AudioConfig::MergeFrom(
          from._internal_audio_config());
      break;
    }
    case kAudioChunk: {
      _this->_internal_set_audio_chunk(from._internal_audio_chunk());
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service.STTRequest)
}

inline void STTRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.request_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_request_type();
}

STTRequest::~STTRequest() {
  // @@protoc_insertion_point(destructor:service.STTRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void STTRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_request_type()) {
    clear_request_type();
  }
}

void STTRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void STTRequest::clear_request_type() {
// @@protoc_insertion_point(one_of_clear_start:service.STTRequest)
  switch (request_type_case()) {
    case kAudioConfig: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.request_type_.audio_config_;
      }
      break;
    }
    case kAudioChunk: {
      _impl_.request_type_.audio_chunk_.Destroy();
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = REQUEST_TYPE_NOT_SET;
}


void STTRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:service.STTRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* STTRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .service.AudioConfig audio_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_audio_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes audio_chunk = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_audio_chunk();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* STTRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.STTRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .service.AudioConfig audio_config = 1;
  if (_internal_has_audio_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::audio_config(this),
        _Internal::audio_config(this).GetCachedSize(), target, stream);
  }

  // bytes audio_chunk = 2;
  if (_internal_has_audio_chunk()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_audio_chunk(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.STTRequest)
  return target;
}

size_t STTRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.STTRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (request_type_case()) {
    // .service.AudioConfig audio_config = 1;
    case kAudioConfig: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.request_type_.audio_config_);
      break;
    }
    // bytes audio_chunk = 2;
    case kAudioChunk: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_audio_chunk());
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData STTRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    STTRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*STTRequest::GetClassData() const { return &_class_data_; }


void STTRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<STTRequest*>(&to_msg);
  auto& from = static_cast<const STTRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.STTRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.request_type_case()) {
    case kAudioConfig: {
      _this->_internal_mutable_audio_config()->::service::AudioConfig::MergeFrom(
          from._internal_audio_config());
      break;
    }
    case kAudioChunk: {
      _this->_internal_set_audio_chunk(from._internal_audio_chunk());
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void STTRequest::CopyFrom(const STTRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.STTRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STTRequest::IsInitialized() const {
  return true;
}

void STTRequest::InternalSwap(STTRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.request_type_, other->_impl_.request_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata STTRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[5]);
}

// ===================================================================

class STTResponse::_Internal {
 public:
};

STTResponse::STTResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.STTResponse)
}
STTResponse::STTResponse(const STTResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  STTResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:service.STTResponse)
}

inline void STTResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

STTResponse::~STTResponse() {
  // @@protoc_insertion_point(destructor:service.STTResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void STTResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
}

void STTResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void STTResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.STTResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* STTResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.STTResponse.text"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* STTResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.STTResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.STTResponse.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.STTResponse)
  return target;
}

size_t STTResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.STTResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData STTResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    STTResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*STTResponse::GetClassData() const { return &_class_data_; }


void STTResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<STTResponse*>(&to_msg);
  auto& from = static_cast<const STTResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.STTResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void STTResponse::CopyFrom(const STTResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.STTResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STTResponse::IsInitialized() const {
  return true;
}

void STTResponse::InternalSwap(STTResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata STTResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[6]);
}

// ===================================================================

class DynamicInfoConfig::_Internal {
 public:
};

DynamicInfoConfig::DynamicInfoConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.DynamicInfoConfig)
}
DynamicInfoConfig::DynamicInfoConfig(const DynamicInfoConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DynamicInfoConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:service.DynamicInfoConfig)
}

inline void DynamicInfoConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DynamicInfoConfig::~DynamicInfoConfig() {
  // @@protoc_insertion_point(destructor:service.DynamicInfoConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DynamicInfoConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
}

void DynamicInfoConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DynamicInfoConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:service.DynamicInfoConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DynamicInfoConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.DynamicInfoConfig.text"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DynamicInfoConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.DynamicInfoConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.DynamicInfoConfig.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.DynamicInfoConfig)
  return target;
}

size_t DynamicInfoConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.DynamicInfoConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DynamicInfoConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DynamicInfoConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DynamicInfoConfig::GetClassData() const { return &_class_data_; }


void DynamicInfoConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DynamicInfoConfig*>(&to_msg);
  auto& from = static_cast<const DynamicInfoConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.DynamicInfoConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DynamicInfoConfig::CopyFrom(const DynamicInfoConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.DynamicInfoConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynamicInfoConfig::IsInitialized() const {
  return true;
}

void DynamicInfoConfig::InternalSwap(DynamicInfoConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DynamicInfoConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[7]);
}

// ===================================================================

class VisionInput_ImageData::_Internal {
 public:
};

VisionInput_ImageData::VisionInput_ImageData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.VisionInput.ImageData)
}
VisionInput_ImageData::VisionInput_ImageData(const VisionInput_ImageData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VisionInput_ImageData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){}
    , decltype(_impl_.width_){}
    , decltype(_impl_.height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.width_, &from._impl_.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.height_) -
    reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));
  // @@protoc_insertion_point(copy_constructor:service.VisionInput.ImageData)
}

inline void VisionInput_ImageData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){}
    , decltype(_impl_.width_){0}
    , decltype(_impl_.height_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VisionInput_ImageData::~VisionInput_ImageData() {
  // @@protoc_insertion_point(destructor:service.VisionInput.ImageData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VisionInput_ImageData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}

void VisionInput_ImageData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VisionInput_ImageData::Clear() {
// @@protoc_insertion_point(message_clear_start:service.VisionInput.ImageData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.height_) -
      reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VisionInput_ImageData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 width = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 height = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VisionInput_ImageData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.VisionInput.ImageData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 width = 1;
  if (this->_internal_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_width(), target);
  }

  // int32 height = 2;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_height(), target);
  }

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.VisionInput.ImageData)
  return target;
}

size_t VisionInput_ImageData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.VisionInput.ImageData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // int32 width = 1;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_width());
  }

  // int32 height = 2;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VisionInput_ImageData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VisionInput_ImageData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VisionInput_ImageData::GetClassData() const { return &_class_data_; }


void VisionInput_ImageData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VisionInput_ImageData*>(&to_msg);
  auto& from = static_cast<const VisionInput_ImageData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.VisionInput.ImageData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_width() != 0) {
    _this->_internal_set_width(from._internal_width());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VisionInput_ImageData::CopyFrom(const VisionInput_ImageData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.VisionInput.ImageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisionInput_ImageData::IsInitialized() const {
  return true;
}

void VisionInput_ImageData::InternalSwap(VisionInput_ImageData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_, lhs_arena,
      &other->_impl_.data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VisionInput_ImageData, _impl_.height_)
      + sizeof(VisionInput_ImageData::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(VisionInput_ImageData, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VisionInput_ImageData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[8]);
}

// ===================================================================

class VisionInput_VideoData::_Internal {
 public:
};

VisionInput_VideoData::VisionInput_VideoData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.VisionInput.VideoData)
}
VisionInput_VideoData::VisionInput_VideoData(const VisionInput_VideoData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VisionInput_VideoData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){}
    , decltype(_impl_.fps_){}
    , decltype(_impl_.width_){}
    , decltype(_impl_.height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.fps_, &from._impl_.fps_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.height_) -
    reinterpret_cast<char*>(&_impl_.fps_)) + sizeof(_impl_.height_));
  // @@protoc_insertion_point(copy_constructor:service.VisionInput.VideoData)
}

inline void VisionInput_VideoData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){}
    , decltype(_impl_.fps_){0}
    , decltype(_impl_.width_){0}
    , decltype(_impl_.height_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VisionInput_VideoData::~VisionInput_VideoData() {
  // @@protoc_insertion_point(destructor:service.VisionInput.VideoData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VisionInput_VideoData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}

void VisionInput_VideoData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VisionInput_VideoData::Clear() {
// @@protoc_insertion_point(message_clear_start:service.VisionInput.VideoData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.fps_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.height_) -
      reinterpret_cast<char*>(&_impl_.fps_)) + sizeof(_impl_.height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VisionInput_VideoData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 fps = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.fps_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 width = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VisionInput_VideoData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.VisionInput.VideoData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fps = 1;
  if (this->_internal_fps() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_fps(), target);
  }

  // int32 width = 2;
  if (this->_internal_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_width(), target);
  }

  // int32 height = 3;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_height(), target);
  }

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.VisionInput.VideoData)
  return target;
}

size_t VisionInput_VideoData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.VisionInput.VideoData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // int32 fps = 1;
  if (this->_internal_fps() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_fps());
  }

  // int32 width = 2;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_width());
  }

  // int32 height = 3;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VisionInput_VideoData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VisionInput_VideoData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VisionInput_VideoData::GetClassData() const { return &_class_data_; }


void VisionInput_VideoData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VisionInput_VideoData*>(&to_msg);
  auto& from = static_cast<const VisionInput_VideoData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.VisionInput.VideoData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_fps() != 0) {
    _this->_internal_set_fps(from._internal_fps());
  }
  if (from._internal_width() != 0) {
    _this->_internal_set_width(from._internal_width());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VisionInput_VideoData::CopyFrom(const VisionInput_VideoData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.VisionInput.VideoData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisionInput_VideoData::IsInitialized() const {
  return true;
}

void VisionInput_VideoData::InternalSwap(VisionInput_VideoData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_, lhs_arena,
      &other->_impl_.data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VisionInput_VideoData, _impl_.height_)
      + sizeof(VisionInput_VideoData::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(VisionInput_VideoData, _impl_.fps_)>(
          reinterpret_cast<char*>(&_impl_.fps_),
          reinterpret_cast<char*>(&other->_impl_.fps_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VisionInput_VideoData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[9]);
}

// ===================================================================

class VisionInput::_Internal {
 public:
  static const ::service::VisionInput_ImageData& image_data(const VisionInput* msg);
  static const ::service::VisionInput_VideoData& video_data(const VisionInput* msg);
};

const ::service::VisionInput_ImageData&
VisionInput::_Internal::image_data(const VisionInput* msg) {
  return *msg->_impl_.vision_data_.image_data_;
}
const ::service::VisionInput_VideoData&
VisionInput::_Internal::video_data(const VisionInput* msg) {
  return *msg->_impl_.vision_data_.video_data_;
}
void VisionInput::set_allocated_image_data(::service::VisionInput_ImageData* image_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_vision_data();
  if (image_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(image_data);
    if (message_arena != submessage_arena) {
      image_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, image_data, submessage_arena);
    }
    set_has_image_data();
    _impl_.vision_data_.image_data_ = image_data;
  }
  // @@protoc_insertion_point(field_set_allocated:service.VisionInput.image_data)
}
void VisionInput::set_allocated_video_data(::service::VisionInput_VideoData* video_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_vision_data();
  if (video_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(video_data);
    if (message_arena != submessage_arena) {
      video_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, video_data, submessage_arena);
    }
    set_has_video_data();
    _impl_.vision_data_.video_data_ = video_data;
  }
  // @@protoc_insertion_point(field_set_allocated:service.VisionInput.video_data)
}
VisionInput::VisionInput(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.VisionInput)
}
VisionInput::VisionInput(const VisionInput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VisionInput* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vision_data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_vision_data();
  switch (from.vision_data_case()) {
    case kImageData: {
      _this->_internal_mutable_image_data()->::service::VisionInput_ImageData::MergeFrom(
          from._internal_image_data());
      break;
    }
    case kVideoData: {
      _this->_internal_mutable_video_data()->::service::VisionInput_VideoData::MergeFrom(
          from._internal_video_data());
      break;
    }
    case VISION_DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service.VisionInput)
}

inline void VisionInput::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.vision_data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_vision_data();
}

VisionInput::~VisionInput() {
  // @@protoc_insertion_point(destructor:service.VisionInput)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VisionInput::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_vision_data()) {
    clear_vision_data();
  }
}

void VisionInput::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VisionInput::clear_vision_data() {
// @@protoc_insertion_point(one_of_clear_start:service.VisionInput)
  switch (vision_data_case()) {
    case kImageData: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.vision_data_.image_data_;
      }
      break;
    }
    case kVideoData: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.vision_data_.video_data_;
      }
      break;
    }
    case VISION_DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VISION_DATA_NOT_SET;
}


void VisionInput::Clear() {
// @@protoc_insertion_point(message_clear_start:service.VisionInput)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_vision_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VisionInput::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .service.VisionInput.ImageData image_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_image_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service.VisionInput.VideoData video_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_video_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VisionInput::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.VisionInput)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .service.VisionInput.ImageData image_data = 1;
  if (_internal_has_image_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::image_data(this),
        _Internal::image_data(this).GetCachedSize(), target, stream);
  }

  // .service.VisionInput.VideoData video_data = 2;
  if (_internal_has_video_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::video_data(this),
        _Internal::video_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.VisionInput)
  return target;
}

size_t VisionInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.VisionInput)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (vision_data_case()) {
    // .service.VisionInput.ImageData image_data = 1;
    case kImageData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.vision_data_.image_data_);
      break;
    }
    // .service.VisionInput.VideoData video_data = 2;
    case kVideoData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.vision_data_.video_data_);
      break;
    }
    case VISION_DATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VisionInput::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VisionInput::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VisionInput::GetClassData() const { return &_class_data_; }


void VisionInput::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VisionInput*>(&to_msg);
  auto& from = static_cast<const VisionInput&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.VisionInput)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.vision_data_case()) {
    case kImageData: {
      _this->_internal_mutable_image_data()->::service::VisionInput_ImageData::MergeFrom(
          from._internal_image_data());
      break;
    }
    case kVideoData: {
      _this->_internal_mutable_video_data()->::service::VisionInput_VideoData::MergeFrom(
          from._internal_video_data());
      break;
    }
    case VISION_DATA_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VisionInput::CopyFrom(const VisionInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.VisionInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisionInput::IsInitialized() const {
  return true;
}

void VisionInput::InternalSwap(VisionInput* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.vision_data_, other->_impl_.vision_data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata VisionInput::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[10]);
}

// ===================================================================

GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse() {}
GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse::MergeFrom(const GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[11]);
}

// ===================================================================

class GetResponseRequest_GetResponseConfig::_Internal {
 public:
  static const ::service::AudioConfig& audio_config(const GetResponseRequest_GetResponseConfig* msg);
  static const ::service::ActionConfig& action_config(const GetResponseRequest_GetResponseConfig* msg);
  static const ::service::DynamicInfoConfig& dynamic_info_config(const GetResponseRequest_GetResponseConfig* msg);
  static const ::service::VisionInput& vision_input(const GetResponseRequest_GetResponseConfig* msg);
};

const ::service::AudioConfig&
GetResponseRequest_GetResponseConfig::_Internal::audio_config(const GetResponseRequest_GetResponseConfig* msg) {
  return *msg->_impl_.audio_config_;
}
const ::service::ActionConfig&
GetResponseRequest_GetResponseConfig::_Internal::action_config(const GetResponseRequest_GetResponseConfig* msg) {
  return *msg->_impl_.action_config_;
}
const ::service::DynamicInfoConfig&
GetResponseRequest_GetResponseConfig::_Internal::dynamic_info_config(const GetResponseRequest_GetResponseConfig* msg) {
  return *msg->_impl_.dynamic_info_config_;
}
const ::service::VisionInput&
GetResponseRequest_GetResponseConfig::_Internal::vision_input(const GetResponseRequest_GetResponseConfig* msg) {
  return *msg->_impl_.vision_input_;
}
GetResponseRequest_GetResponseConfig::GetResponseRequest_GetResponseConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &GetResponseRequest_GetResponseConfig::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:service.GetResponseRequest.GetResponseConfig)
}
GetResponseRequest_GetResponseConfig::GetResponseRequest_GetResponseConfig(const GetResponseRequest_GetResponseConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetResponseRequest_GetResponseConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.narrative_template_keys_)*/{}
    , decltype(_impl_.character_id_){}
    , decltype(_impl_.api_key_){}
    , decltype(_impl_.session_id_){}
    , decltype(_impl_.speaker_){}
    , decltype(_impl_.language_code_){}
    , decltype(_impl_.speaker_id_){}
    , decltype(_impl_.api_auth_token_){}
    , decltype(_impl_.audio_config_){nullptr}
    , decltype(_impl_.action_config_){nullptr}
    , decltype(_impl_.dynamic_info_config_){nullptr}
    , decltype(_impl_.vision_input_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.narrative_template_keys_.MergeFrom(from._impl_.narrative_template_keys_);
  _impl_.character_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_character_id().empty()) {
    _this->_impl_.character_id_.Set(from._internal_character_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.api_key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.api_key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_api_key().empty()) {
    _this->_impl_.api_key_.Set(from._internal_api_key(), 
      _this->GetArenaForAllocation());
  }
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_session_id().empty()) {
    _this->_impl_.session_id_.Set(from._internal_session_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.speaker_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.speaker_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_speaker().empty()) {
    _this->_impl_.speaker_.Set(from._internal_speaker(), 
      _this->GetArenaForAllocation());
  }
  _impl_.language_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.language_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_language_code().empty()) {
    _this->_impl_.language_code_.Set(from._internal_language_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.speaker_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.speaker_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_speaker_id().empty()) {
    _this->_impl_.speaker_id_.Set(from._internal_speaker_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.api_auth_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.api_auth_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_api_auth_token().empty()) {
    _this->_impl_.api_auth_token_.Set(from._internal_api_auth_token(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_audio_config()) {
    _this->_impl_.audio_config_ = new ::service::AudioConfig(*from._impl_.audio_config_);
  }
  if (from._internal_has_action_config()) {
    _this->_impl_.action_config_ = new ::service::ActionConfig(*from._impl_.action_config_);
  }
  if (from._internal_has_dynamic_info_config()) {
    _this->_impl_.dynamic_info_config_ = new ::service::DynamicInfoConfig(*from._impl_.dynamic_info_config_);
  }
  if (from._internal_has_vision_input()) {
    _this->_impl_.vision_input_ = new ::service::VisionInput(*from._impl_.vision_input_);
  }
  // @@protoc_insertion_point(copy_constructor:service.GetResponseRequest.GetResponseConfig)
}

inline void GetResponseRequest_GetResponseConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.narrative_template_keys_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.character_id_){}
    , decltype(_impl_.api_key_){}
    , decltype(_impl_.session_id_){}
    , decltype(_impl_.speaker_){}
    , decltype(_impl_.language_code_){}
    , decltype(_impl_.speaker_id_){}
    , decltype(_impl_.api_auth_token_){}
    , decltype(_impl_.audio_config_){nullptr}
    , decltype(_impl_.action_config_){nullptr}
    , decltype(_impl_.dynamic_info_config_){nullptr}
    , decltype(_impl_.vision_input_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.character_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.api_key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.api_key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.speaker_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.speaker_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.language_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.language_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.speaker_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.speaker_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.api_auth_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.api_auth_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetResponseRequest_GetResponseConfig::~GetResponseRequest_GetResponseConfig() {
  // @@protoc_insertion_point(destructor:service.GetResponseRequest.GetResponseConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void GetResponseRequest_GetResponseConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.narrative_template_keys_.Destruct();
  _impl_.narrative_template_keys_.~MapField();
  _impl_.character_id_.Destroy();
  _impl_.api_key_.Destroy();
  _impl_.session_id_.Destroy();
  _impl_.speaker_.Destroy();
  _impl_.language_code_.Destroy();
  _impl_.speaker_id_.Destroy();
  _impl_.api_auth_token_.Destroy();
  if (this != internal_default_instance()) delete _impl_.audio_config_;
  if (this != internal_default_instance()) delete _impl_.action_config_;
  if (this != internal_default_instance()) delete _impl_.dynamic_info_config_;
  if (this != internal_default_instance()) delete _impl_.vision_input_;
}

void GetResponseRequest_GetResponseConfig::ArenaDtor(void* object) {
  GetResponseRequest_GetResponseConfig* _this = reinterpret_cast< GetResponseRequest_GetResponseConfig* >(object);
  _this->_impl_.narrative_template_keys_.Destruct();
}
void GetResponseRequest_GetResponseConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetResponseRequest_GetResponseConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseRequest.GetResponseConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.narrative_template_keys_.Clear();
  _impl_.character_id_.ClearToEmpty();
  _impl_.api_key_.ClearToEmpty();
  _impl_.session_id_.ClearToEmpty();
  _impl_.speaker_.ClearToEmpty();
  _impl_.language_code_.ClearToEmpty();
  _impl_.speaker_id_.ClearToEmpty();
  _impl_.api_auth_token_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.audio_config_ != nullptr) {
    delete _impl_.audio_config_;
  }
  _impl_.audio_config_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.action_config_ != nullptr) {
    delete _impl_.action_config_;
  }
  _impl_.action_config_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.dynamic_info_config_ != nullptr) {
    delete _impl_.dynamic_info_config_;
  }
  _impl_.dynamic_info_config_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.vision_input_ != nullptr) {
    delete _impl_.vision_input_;
  }
  _impl_.vision_input_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseRequest_GetResponseConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string character_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_character_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseRequest.GetResponseConfig.character_id"));
        } else
          goto handle_unusual;
        continue;
      // string api_key = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_api_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseRequest.GetResponseConfig.api_key"));
        } else
          goto handle_unusual;
        continue;
      // string session_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_session_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseRequest.GetResponseConfig.session_id"));
        } else
          goto handle_unusual;
        continue;
      // .service.AudioConfig audio_config = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_audio_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service.ActionConfig action_config = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_action_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string speaker = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_speaker();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseRequest.GetResponseConfig.speaker"));
        } else
          goto handle_unusual;
        continue;
      // string language_code = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_language_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseRequest.GetResponseConfig.language_code"));
        } else
          goto handle_unusual;
        continue;
      // string speaker_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_speaker_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseRequest.GetResponseConfig.speaker_id"));
        } else
          goto handle_unusual;
        continue;
      // string api_auth_token = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_api_auth_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseRequest.GetResponseConfig.api_auth_token"));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> narrative_template_keys = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.narrative_template_keys_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .service.DynamicInfoConfig dynamic_info_config = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_dynamic_info_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service.VisionInput vision_input = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_vision_input(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetResponseRequest_GetResponseConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseRequest.GetResponseConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string character_id = 2;
  if (!this->_internal_character_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character_id().data(), static_cast<int>(this->_internal_character_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseRequest.GetResponseConfig.character_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_character_id(), target);
  }

  // string api_key = 3;
  if (!this->_internal_api_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_api_key().data(), static_cast<int>(this->_internal_api_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseRequest.GetResponseConfig.api_key");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_api_key(), target);
  }

  // string session_id = 4;
  if (!this->_internal_session_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseRequest.GetResponseConfig.session_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_session_id(), target);
  }

  // .service.AudioConfig audio_config = 5;
  if (this->_internal_has_audio_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::audio_config(this),
        _Internal::audio_config(this).GetCachedSize(), target, stream);
  }

  // .service.ActionConfig action_config = 6;
  if (this->_internal_has_action_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::action_config(this),
        _Internal::action_config(this).GetCachedSize(), target, stream);
  }

  // string speaker = 7;
  if (!this->_internal_speaker().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_speaker().data(), static_cast<int>(this->_internal_speaker().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseRequest.GetResponseConfig.speaker");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_speaker(), target);
  }

  // string language_code = 8;
  if (!this->_internal_language_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_language_code().data(), static_cast<int>(this->_internal_language_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseRequest.GetResponseConfig.language_code");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_language_code(), target);
  }

  // string speaker_id = 9;
  if (!this->_internal_speaker_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_speaker_id().data(), static_cast<int>(this->_internal_speaker_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseRequest.GetResponseConfig.speaker_id");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_speaker_id(), target);
  }

  // string api_auth_token = 10;
  if (!this->_internal_api_auth_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_api_auth_token().data(), static_cast<int>(this->_internal_api_auth_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseRequest.GetResponseConfig.api_auth_token");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_api_auth_token(), target);
  }

  // map<string, string> narrative_template_keys = 11;
  if (!this->_internal_narrative_template_keys().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_narrative_template_keys();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "service.GetResponseRequest.GetResponseConfig.NarrativeTemplateKeysEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "service.GetResponseRequest.GetResponseConfig.NarrativeTemplateKeysEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(11, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(11, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // .service.DynamicInfoConfig dynamic_info_config = 12;
  if (this->_internal_has_dynamic_info_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::dynamic_info_config(this),
        _Internal::dynamic_info_config(this).GetCachedSize(), target, stream);
  }

  // .service.VisionInput vision_input = 13;
  if (this->_internal_has_vision_input()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::vision_input(this),
        _Internal::vision_input(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseRequest.GetResponseConfig)
  return target;
}

size_t GetResponseRequest_GetResponseConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseRequest.GetResponseConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> narrative_template_keys = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_narrative_template_keys_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_narrative_template_keys().begin();
      it != this->_internal_narrative_template_keys().end(); ++it) {
    total_size += GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string character_id = 2;
  if (!this->_internal_character_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character_id());
  }

  // string api_key = 3;
  if (!this->_internal_api_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_api_key());
  }

  // string session_id = 4;
  if (!this->_internal_session_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  // string speaker = 7;
  if (!this->_internal_speaker().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_speaker());
  }

  // string language_code = 8;
  if (!this->_internal_language_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_language_code());
  }

  // string speaker_id = 9;
  if (!this->_internal_speaker_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_speaker_id());
  }

  // string api_auth_token = 10;
  if (!this->_internal_api_auth_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_api_auth_token());
  }

  // .service.AudioConfig audio_config = 5;
  if (this->_internal_has_audio_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.audio_config_);
  }

  // .service.ActionConfig action_config = 6;
  if (this->_internal_has_action_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.action_config_);
  }

  // .service.DynamicInfoConfig dynamic_info_config = 12;
  if (this->_internal_has_dynamic_info_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.dynamic_info_config_);
  }

  // .service.VisionInput vision_input = 13;
  if (this->_internal_has_vision_input()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.vision_input_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetResponseRequest_GetResponseConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetResponseRequest_GetResponseConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetResponseRequest_GetResponseConfig::GetClassData() const { return &_class_data_; }


void GetResponseRequest_GetResponseConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetResponseRequest_GetResponseConfig*>(&to_msg);
  auto& from = static_cast<const GetResponseRequest_GetResponseConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseRequest.GetResponseConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.narrative_template_keys_.MergeFrom(from._impl_.narrative_template_keys_);
  if (!from._internal_character_id().empty()) {
    _this->_internal_set_character_id(from._internal_character_id());
  }
  if (!from._internal_api_key().empty()) {
    _this->_internal_set_api_key(from._internal_api_key());
  }
  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (!from._internal_speaker().empty()) {
    _this->_internal_set_speaker(from._internal_speaker());
  }
  if (!from._internal_language_code().empty()) {
    _this->_internal_set_language_code(from._internal_language_code());
  }
  if (!from._internal_speaker_id().empty()) {
    _this->_internal_set_speaker_id(from._internal_speaker_id());
  }
  if (!from._internal_api_auth_token().empty()) {
    _this->_internal_set_api_auth_token(from._internal_api_auth_token());
  }
  if (from._internal_has_audio_config()) {
    _this->_internal_mutable_audio_config()->::service::AudioConfig::MergeFrom(
        from._internal_audio_config());
  }
  if (from._internal_has_action_config()) {
    _this->_internal_mutable_action_config()->::service::ActionConfig::MergeFrom(
        from._internal_action_config());
  }
  if (from._internal_has_dynamic_info_config()) {
    _this->_internal_mutable_dynamic_info_config()->::service::DynamicInfoConfig::MergeFrom(
        from._internal_dynamic_info_config());
  }
  if (from._internal_has_vision_input()) {
    _this->_internal_mutable_vision_input()->::service::VisionInput::MergeFrom(
        from._internal_vision_input());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseRequest_GetResponseConfig::CopyFrom(const GetResponseRequest_GetResponseConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseRequest.GetResponseConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseRequest_GetResponseConfig::IsInitialized() const {
  return true;
}

void GetResponseRequest_GetResponseConfig::InternalSwap(GetResponseRequest_GetResponseConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.narrative_template_keys_.InternalSwap(&other->_impl_.narrative_template_keys_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.character_id_, lhs_arena,
      &other->_impl_.character_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.api_key_, lhs_arena,
      &other->_impl_.api_key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.session_id_, lhs_arena,
      &other->_impl_.session_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.speaker_, lhs_arena,
      &other->_impl_.speaker_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.language_code_, lhs_arena,
      &other->_impl_.language_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.speaker_id_, lhs_arena,
      &other->_impl_.speaker_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.api_auth_token_, lhs_arena,
      &other->_impl_.api_auth_token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.vision_input_)
      + sizeof(GetResponseRequest_GetResponseConfig::_impl_.vision_input_)
      - PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, _impl_.audio_config_)>(
          reinterpret_cast<char*>(&_impl_.audio_config_),
          reinterpret_cast<char*>(&other->_impl_.audio_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseRequest_GetResponseConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[12]);
}

// ===================================================================

class GetResponseRequest_GetResponseData::_Internal {
 public:
  static const ::service::TriggerConfig& trigger_data(const GetResponseRequest_GetResponseData* msg);
};

const ::service::TriggerConfig&
GetResponseRequest_GetResponseData::_Internal::trigger_data(const GetResponseRequest_GetResponseData* msg) {
  return *msg->_impl_.input_type_.trigger_data_;
}
void GetResponseRequest_GetResponseData::set_allocated_trigger_data(::service::TriggerConfig* trigger_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_input_type();
  if (trigger_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(trigger_data);
    if (message_arena != submessage_arena) {
      trigger_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, trigger_data, submessage_arena);
    }
    set_has_trigger_data();
    _impl_.input_type_.trigger_data_ = trigger_data;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseRequest.GetResponseData.trigger_data)
}
GetResponseRequest_GetResponseData::GetResponseRequest_GetResponseData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseRequest.GetResponseData)
}
GetResponseRequest_GetResponseData::GetResponseRequest_GetResponseData(const GetResponseRequest_GetResponseData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetResponseRequest_GetResponseData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.input_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_input_type();
  switch (from.input_type_case()) {
    case kAudioData: {
      _this->_internal_set_audio_data(from._internal_audio_data());
      break;
    }
    case kTextData: {
      _this->_internal_set_text_data(from._internal_text_data());
      break;
    }
    case kTriggerData: {
      _this->_internal_mutable_trigger_data()->::service::TriggerConfig::MergeFrom(
          from._internal_trigger_data());
      break;
    }
    case INPUT_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service.GetResponseRequest.GetResponseData)
}

inline void GetResponseRequest_GetResponseData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.input_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_input_type();
}

GetResponseRequest_GetResponseData::~GetResponseRequest_GetResponseData() {
  // @@protoc_insertion_point(destructor:service.GetResponseRequest.GetResponseData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetResponseRequest_GetResponseData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_input_type()) {
    clear_input_type();
  }
}

void GetResponseRequest_GetResponseData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetResponseRequest_GetResponseData::clear_input_type() {
// @@protoc_insertion_point(one_of_clear_start:service.GetResponseRequest.GetResponseData)
  switch (input_type_case()) {
    case kAudioData: {
      _impl_.input_type_.audio_data_.Destroy();
      break;
    }
    case kTextData: {
      _impl_.input_type_.text_data_.Destroy();
      break;
    }
    case kTriggerData: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.input_type_.trigger_data_;
      }
      break;
    }
    case INPUT_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = INPUT_TYPE_NOT_SET;
}


void GetResponseRequest_GetResponseData::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseRequest.GetResponseData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_input_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseRequest_GetResponseData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes audio_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_audio_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string text_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_text_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseRequest.GetResponseData.text_data"));
        } else
          goto handle_unusual;
        continue;
      // .service.TriggerConfig trigger_data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_trigger_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetResponseRequest_GetResponseData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseRequest.GetResponseData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes audio_data = 1;
  if (_internal_has_audio_data()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_audio_data(), target);
  }

  // string text_data = 2;
  if (_internal_has_text_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text_data().data(), static_cast<int>(this->_internal_text_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseRequest.GetResponseData.text_data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_text_data(), target);
  }

  // .service.TriggerConfig trigger_data = 3;
  if (_internal_has_trigger_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::trigger_data(this),
        _Internal::trigger_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseRequest.GetResponseData)
  return target;
}

size_t GetResponseRequest_GetResponseData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseRequest.GetResponseData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (input_type_case()) {
    // bytes audio_data = 1;
    case kAudioData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_audio_data());
      break;
    }
    // string text_data = 2;
    case kTextData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_text_data());
      break;
    }
    // .service.TriggerConfig trigger_data = 3;
    case kTriggerData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.input_type_.trigger_data_);
      break;
    }
    case INPUT_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetResponseRequest_GetResponseData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetResponseRequest_GetResponseData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetResponseRequest_GetResponseData::GetClassData() const { return &_class_data_; }


void GetResponseRequest_GetResponseData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetResponseRequest_GetResponseData*>(&to_msg);
  auto& from = static_cast<const GetResponseRequest_GetResponseData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseRequest.GetResponseData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.input_type_case()) {
    case kAudioData: {
      _this->_internal_set_audio_data(from._internal_audio_data());
      break;
    }
    case kTextData: {
      _this->_internal_set_text_data(from._internal_text_data());
      break;
    }
    case kTriggerData: {
      _this->_internal_mutable_trigger_data()->::service::TriggerConfig::MergeFrom(
          from._internal_trigger_data());
      break;
    }
    case INPUT_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseRequest_GetResponseData::CopyFrom(const GetResponseRequest_GetResponseData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseRequest.GetResponseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseRequest_GetResponseData::IsInitialized() const {
  return true;
}

void GetResponseRequest_GetResponseData::InternalSwap(GetResponseRequest_GetResponseData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.input_type_, other->_impl_.input_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseRequest_GetResponseData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[13]);
}

// ===================================================================

class GetResponseRequest::_Internal {
 public:
  static const ::service::GetResponseRequest_GetResponseConfig& get_response_config(const GetResponseRequest* msg);
  static const ::service::GetResponseRequest_GetResponseData& get_response_data(const GetResponseRequest* msg);
};

const ::service::GetResponseRequest_GetResponseConfig&
GetResponseRequest::_Internal::get_response_config(const GetResponseRequest* msg) {
  return *msg->_impl_.request_type_.get_response_config_;
}
const ::service::GetResponseRequest_GetResponseData&
GetResponseRequest::_Internal::get_response_data(const GetResponseRequest* msg) {
  return *msg->_impl_.request_type_.get_response_data_;
}
void GetResponseRequest::set_allocated_get_response_config(::service::GetResponseRequest_GetResponseConfig* get_response_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_request_type();
  if (get_response_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(get_response_config);
    if (message_arena != submessage_arena) {
      get_response_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_response_config, submessage_arena);
    }
    set_has_get_response_config();
    _impl_.request_type_.get_response_config_ = get_response_config;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseRequest.get_response_config)
}
void GetResponseRequest::set_allocated_get_response_data(::service::GetResponseRequest_GetResponseData* get_response_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_request_type();
  if (get_response_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(get_response_data);
    if (message_arena != submessage_arena) {
      get_response_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_response_data, submessage_arena);
    }
    set_has_get_response_data();
    _impl_.request_type_.get_response_data_ = get_response_data;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseRequest.get_response_data)
}
GetResponseRequest::GetResponseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseRequest)
}
GetResponseRequest::GetResponseRequest(const GetResponseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetResponseRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.request_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_request_type();
  switch (from.request_type_case()) {
    case kGetResponseConfig: {
      _this->_internal_mutable_get_response_config()->::service::GetResponseRequest_GetResponseConfig::MergeFrom(
          from._internal_get_response_config());
      break;
    }
    case kGetResponseData: {
      _this->_internal_mutable_get_response_data()->::service::GetResponseRequest_GetResponseData::MergeFrom(
          from._internal_get_response_data());
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service.GetResponseRequest)
}

inline void GetResponseRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.request_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_request_type();
}

GetResponseRequest::~GetResponseRequest() {
  // @@protoc_insertion_point(destructor:service.GetResponseRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetResponseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_request_type()) {
    clear_request_type();
  }
}

void GetResponseRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetResponseRequest::clear_request_type() {
// @@protoc_insertion_point(one_of_clear_start:service.GetResponseRequest)
  switch (request_type_case()) {
    case kGetResponseConfig: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.request_type_.get_response_config_;
      }
      break;
    }
    case kGetResponseData: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.request_type_.get_response_data_;
      }
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = REQUEST_TYPE_NOT_SET;
}


void GetResponseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .service.GetResponseRequest.GetResponseConfig get_response_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_response_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service.GetResponseRequest.GetResponseData get_response_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_response_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetResponseRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .service.GetResponseRequest.GetResponseConfig get_response_config = 1;
  if (_internal_has_get_response_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::get_response_config(this),
        _Internal::get_response_config(this).GetCachedSize(), target, stream);
  }

  // .service.GetResponseRequest.GetResponseData get_response_data = 2;
  if (_internal_has_get_response_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::get_response_data(this),
        _Internal::get_response_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseRequest)
  return target;
}

size_t GetResponseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (request_type_case()) {
    // .service.GetResponseRequest.GetResponseConfig get_response_config = 1;
    case kGetResponseConfig: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.request_type_.get_response_config_);
      break;
    }
    // .service.GetResponseRequest.GetResponseData get_response_data = 2;
    case kGetResponseData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.request_type_.get_response_data_);
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetResponseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetResponseRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetResponseRequest::GetClassData() const { return &_class_data_; }


void GetResponseRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetResponseRequest*>(&to_msg);
  auto& from = static_cast<const GetResponseRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.request_type_case()) {
    case kGetResponseConfig: {
      _this->_internal_mutable_get_response_config()->::service::GetResponseRequest_GetResponseConfig::MergeFrom(
          from._internal_get_response_config());
      break;
    }
    case kGetResponseData: {
      _this->_internal_mutable_get_response_data()->::service::GetResponseRequest_GetResponseData::MergeFrom(
          from._internal_get_response_data());
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseRequest::CopyFrom(const GetResponseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseRequest::IsInitialized() const {
  return true;
}

void GetResponseRequest::InternalSwap(GetResponseRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.request_type_, other->_impl_.request_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[14]);
}

// ===================================================================

class GetResponseRequestSingle::_Internal {
 public:
  static const ::service::GetResponseRequest& response_config(const GetResponseRequestSingle* msg);
  static const ::service::GetResponseRequest& response_data(const GetResponseRequestSingle* msg);
};

const ::service::GetResponseRequest&
GetResponseRequestSingle::_Internal::response_config(const GetResponseRequestSingle* msg) {
  return *msg->_impl_.response_config_;
}
const ::service::GetResponseRequest&
GetResponseRequestSingle::_Internal::response_data(const GetResponseRequestSingle* msg) {
  return *msg->_impl_.response_data_;
}
GetResponseRequestSingle::GetResponseRequestSingle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseRequestSingle)
}
GetResponseRequestSingle::GetResponseRequestSingle(const GetResponseRequestSingle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetResponseRequestSingle* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.response_config_){nullptr}
    , decltype(_impl_.response_data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_response_config()) {
    _this->_impl_.response_config_ = new ::service::GetResponseRequest(*from._impl_.response_config_);
  }
  if (from._internal_has_response_data()) {
    _this->_impl_.response_data_ = new ::service::GetResponseRequest(*from._impl_.response_data_);
  }
  // @@protoc_insertion_point(copy_constructor:service.GetResponseRequestSingle)
}

inline void GetResponseRequestSingle::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.response_config_){nullptr}
    , decltype(_impl_.response_data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetResponseRequestSingle::~GetResponseRequestSingle() {
  // @@protoc_insertion_point(destructor:service.GetResponseRequestSingle)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetResponseRequestSingle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.response_config_;
  if (this != internal_default_instance()) delete _impl_.response_data_;
}

void GetResponseRequestSingle::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetResponseRequestSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseRequestSingle)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.response_config_ != nullptr) {
    delete _impl_.response_config_;
  }
  _impl_.response_config_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.response_data_ != nullptr) {
    delete _impl_.response_data_;
  }
  _impl_.response_data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseRequestSingle::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .service.GetResponseRequest response_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_response_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service.GetResponseRequest response_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_response_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetResponseRequestSingle::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseRequestSingle)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .service.GetResponseRequest response_config = 1;
  if (this->_internal_has_response_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::response_config(this),
        _Internal::response_config(this).GetCachedSize(), target, stream);
  }

  // .service.GetResponseRequest response_data = 2;
  if (this->_internal_has_response_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::response_data(this),
        _Internal::response_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseRequestSingle)
  return target;
}

size_t GetResponseRequestSingle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseRequestSingle)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service.GetResponseRequest response_config = 1;
  if (this->_internal_has_response_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.response_config_);
  }

  // .service.GetResponseRequest response_data = 2;
  if (this->_internal_has_response_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.response_data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetResponseRequestSingle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetResponseRequestSingle::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetResponseRequestSingle::GetClassData() const { return &_class_data_; }


void GetResponseRequestSingle::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetResponseRequestSingle*>(&to_msg);
  auto& from = static_cast<const GetResponseRequestSingle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseRequestSingle)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_response_config()) {
    _this->_internal_mutable_response_config()->::service::GetResponseRequest::MergeFrom(
        from._internal_response_config());
  }
  if (from._internal_has_response_data()) {
    _this->_internal_mutable_response_data()->::service::GetResponseRequest::MergeFrom(
        from._internal_response_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseRequestSingle::CopyFrom(const GetResponseRequestSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseRequestSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseRequestSingle::IsInitialized() const {
  return true;
}

void GetResponseRequestSingle::InternalSwap(GetResponseRequestSingle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetResponseRequestSingle, _impl_.response_data_)
      + sizeof(GetResponseRequestSingle::_impl_.response_data_)
      - PROTOBUF_FIELD_OFFSET(GetResponseRequestSingle, _impl_.response_config_)>(
          reinterpret_cast<char*>(&_impl_.response_config_),
          reinterpret_cast<char*>(&other->_impl_.response_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseRequestSingle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[15]);
}

// ===================================================================

class GetResponseResponse_AudioResponse::_Internal {
 public:
  static const ::service::AudioConfig& audio_config(const GetResponseResponse_AudioResponse* msg);
  static const ::service::VisemesData& visemes_data(const GetResponseResponse_AudioResponse* msg);
  static const ::service::BlendShapesData& blendshapes_data(const GetResponseResponse_AudioResponse* msg);
  static const ::service::ARKitBlendShapesData& face_emotion(const GetResponseResponse_AudioResponse* msg);
  static const ::service::EmotionResponse& emotion_response(const GetResponseResponse_AudioResponse* msg);
};

const ::service::AudioConfig&
GetResponseResponse_AudioResponse::_Internal::audio_config(const GetResponseResponse_AudioResponse* msg) {
  return *msg->_impl_.audio_config_;
}
const ::service::VisemesData&
GetResponseResponse_AudioResponse::_Internal::visemes_data(const GetResponseResponse_AudioResponse* msg) {
  return *msg->_impl_.face_data_type_.visemes_data_;
}
const ::service::BlendShapesData&
GetResponseResponse_AudioResponse::_Internal::blendshapes_data(const GetResponseResponse_AudioResponse* msg) {
  return *msg->_impl_.face_data_type_.blendshapes_data_;
}
const ::service::ARKitBlendShapesData&
GetResponseResponse_AudioResponse::_Internal::face_emotion(const GetResponseResponse_AudioResponse* msg) {
  return *msg->_impl_.face_emotion_;
}
const ::service::EmotionResponse&
GetResponseResponse_AudioResponse::_Internal::emotion_response(const GetResponseResponse_AudioResponse* msg) {
  return *msg->_impl_.emotion_response_;
}
void GetResponseResponse_AudioResponse::set_allocated_visemes_data(::service::VisemesData* visemes_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_face_data_type();
  if (visemes_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(visemes_data);
    if (message_arena != submessage_arena) {
      visemes_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, visemes_data, submessage_arena);
    }
    set_has_visemes_data();
    _impl_.face_data_type_.visemes_data_ = visemes_data;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseResponse.AudioResponse.visemes_data)
}
void GetResponseResponse_AudioResponse::set_allocated_blendshapes_data(::service::BlendShapesData* blendshapes_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_face_data_type();
  if (blendshapes_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(blendshapes_data);
    if (message_arena != submessage_arena) {
      blendshapes_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blendshapes_data, submessage_arena);
    }
    set_has_blendshapes_data();
    _impl_.face_data_type_.blendshapes_data_ = blendshapes_data;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseResponse.AudioResponse.blendshapes_data)
}
void GetResponseResponse_AudioResponse::clear_face_emotion() {
  if (GetArenaForAllocation() == nullptr && _impl_.face_emotion_ != nullptr) {
    delete _impl_.face_emotion_;
  }
  _impl_.face_emotion_ = nullptr;
}
GetResponseResponse_AudioResponse::GetResponseResponse_AudioResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseResponse.AudioResponse)
}
GetResponseResponse_AudioResponse::GetResponseResponse_AudioResponse(const GetResponseResponse_AudioResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetResponseResponse_AudioResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.audio_data_){}
    , decltype(_impl_.text_data_){}
    , decltype(_impl_.face_data_){}
    , decltype(_impl_.audio_config_){nullptr}
    , decltype(_impl_.face_emotion_){nullptr}
    , decltype(_impl_.emotion_response_){nullptr}
    , decltype(_impl_.end_of_response_){}
    , decltype(_impl_.face_data_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.audio_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.audio_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_audio_data().empty()) {
    _this->_impl_.audio_data_.Set(from._internal_audio_data(), 
      _this->GetArenaForAllocation());
  }
  _impl_.text_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text_data().empty()) {
    _this->_impl_.text_data_.Set(from._internal_text_data(), 
      _this->GetArenaForAllocation());
  }
  _impl_.face_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.face_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_face_data().empty()) {
    _this->_impl_.face_data_.Set(from._internal_face_data(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_audio_config()) {
    _this->_impl_.audio_config_ = new ::service::AudioConfig(*from._impl_.audio_config_);
  }
  if (from._internal_has_face_emotion()) {
    _this->_impl_.face_emotion_ = new ::service::ARKitBlendShapesData(*from._impl_.face_emotion_);
  }
  if (from._internal_has_emotion_response()) {
    _this->_impl_.emotion_response_ = new ::service::EmotionResponse(*from._impl_.emotion_response_);
  }
  _this->_impl_.end_of_response_ = from._impl_.end_of_response_;
  clear_has_face_data_type();
  switch (from.face_data_type_case()) {
    case kVisemesData: {
      _this->_internal_mutable_visemes_data()->::service::VisemesData::MergeFrom(
          from._internal_visemes_data());
      break;
    }
    case kBlendshapesData: {
      _this->_internal_mutable_blendshapes_data()->::service::BlendShapesData::MergeFrom(
          from._internal_blendshapes_data());
      break;
    }
    case FACE_DATA_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service.GetResponseResponse.AudioResponse)
}

inline void GetResponseResponse_AudioResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.audio_data_){}
    , decltype(_impl_.text_data_){}
    , decltype(_impl_.face_data_){}
    , decltype(_impl_.audio_config_){nullptr}
    , decltype(_impl_.face_emotion_){nullptr}
    , decltype(_impl_.emotion_response_){nullptr}
    , decltype(_impl_.end_of_response_){false}
    , decltype(_impl_.face_data_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.audio_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.audio_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.text_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.face_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.face_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_face_data_type();
}

GetResponseResponse_AudioResponse::~GetResponseResponse_AudioResponse() {
  // @@protoc_insertion_point(destructor:service.GetResponseResponse.AudioResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetResponseResponse_AudioResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.audio_data_.Destroy();
  _impl_.text_data_.Destroy();
  _impl_.face_data_.Destroy();
  if (this != internal_default_instance()) delete _impl_.audio_config_;
  if (this != internal_default_instance()) delete _impl_.face_emotion_;
  if (this != internal_default_instance()) delete _impl_.emotion_response_;
  if (has_face_data_type()) {
    clear_face_data_type();
  }
}

void GetResponseResponse_AudioResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetResponseResponse_AudioResponse::clear_face_data_type() {
// @@protoc_insertion_point(one_of_clear_start:service.GetResponseResponse.AudioResponse)
  switch (face_data_type_case()) {
    case kVisemesData: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.face_data_type_.visemes_data_;
      }
      break;
    }
    case kBlendshapesData: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.face_data_type_.blendshapes_data_;
      }
      break;
    }
    case FACE_DATA_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FACE_DATA_TYPE_NOT_SET;
}


void GetResponseResponse_AudioResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseResponse.AudioResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.audio_data_.ClearToEmpty();
  _impl_.text_data_.ClearToEmpty();
  _impl_.face_data_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.audio_config_ != nullptr) {
    delete _impl_.audio_config_;
  }
  _impl_.audio_config_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.face_emotion_ != nullptr) {
    delete _impl_.face_emotion_;
  }
  _impl_.face_emotion_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.emotion_response_ != nullptr) {
    delete _impl_.emotion_response_;
  }
  _impl_.emotion_response_ = nullptr;
  _impl_.end_of_response_ = false;
  clear_face_data_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseResponse_AudioResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes audio_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_audio_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service.AudioConfig audio_config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_audio_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string text_data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_text_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseResponse.AudioResponse.text_data"));
        } else
          goto handle_unusual;
        continue;
      // bool end_of_response = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.end_of_response_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string face_data = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_face_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseResponse.AudioResponse.face_data"));
        } else
          goto handle_unusual;
        continue;
      // .service.VisemesData visemes_data = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_visemes_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service.BlendShapesData blendshapes_data = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_blendshapes_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service.ARKitBlendShapesData face_emotion = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_face_emotion(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service.EmotionResponse emotion_response = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_emotion_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetResponseResponse_AudioResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseResponse.AudioResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes audio_data = 1;
  if (!this->_internal_audio_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_audio_data(), target);
  }

  // .service.AudioConfig audio_config = 2;
  if (this->_internal_has_audio_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::audio_config(this),
        _Internal::audio_config(this).GetCachedSize(), target, stream);
  }

  // string text_data = 3;
  if (!this->_internal_text_data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text_data().data(), static_cast<int>(this->_internal_text_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.AudioResponse.text_data");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_text_data(), target);
  }

  // bool end_of_response = 4;
  if (this->_internal_end_of_response() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_end_of_response(), target);
  }

  // string face_data = 5;
  if (!this->_internal_face_data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_face_data().data(), static_cast<int>(this->_internal_face_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.AudioResponse.face_data");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_face_data(), target);
  }

  // .service.VisemesData visemes_data = 6;
  if (_internal_has_visemes_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::visemes_data(this),
        _Internal::visemes_data(this).GetCachedSize(), target, stream);
  }

  // .service.BlendShapesData blendshapes_data = 7;
  if (_internal_has_blendshapes_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::blendshapes_data(this),
        _Internal::blendshapes_data(this).GetCachedSize(), target, stream);
  }

  // .service.ARKitBlendShapesData face_emotion = 8;
  if (this->_internal_has_face_emotion()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::face_emotion(this),
        _Internal::face_emotion(this).GetCachedSize(), target, stream);
  }

  // .service.EmotionResponse emotion_response = 9;
  if (this->_internal_has_emotion_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::emotion_response(this),
        _Internal::emotion_response(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseResponse.AudioResponse)
  return target;
}

size_t GetResponseResponse_AudioResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseResponse.AudioResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes audio_data = 1;
  if (!this->_internal_audio_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_audio_data());
  }

  // string text_data = 3;
  if (!this->_internal_text_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text_data());
  }

  // string face_data = 5;
  if (!this->_internal_face_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_face_data());
  }

  // .service.AudioConfig audio_config = 2;
  if (this->_internal_has_audio_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.audio_config_);
  }

  // .service.ARKitBlendShapesData face_emotion = 8;
  if (this->_internal_has_face_emotion()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.face_emotion_);
  }

  // .service.EmotionResponse emotion_response = 9;
  if (this->_internal_has_emotion_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.emotion_response_);
  }

  // bool end_of_response = 4;
  if (this->_internal_end_of_response() != 0) {
    total_size += 1 + 1;
  }

  switch (face_data_type_case()) {
    // .service.VisemesData visemes_data = 6;
    case kVisemesData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.face_data_type_.visemes_data_);
      break;
    }
    // .service.BlendShapesData blendshapes_data = 7;
    case kBlendshapesData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.face_data_type_.blendshapes_data_);
      break;
    }
    case FACE_DATA_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetResponseResponse_AudioResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetResponseResponse_AudioResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetResponseResponse_AudioResponse::GetClassData() const { return &_class_data_; }


void GetResponseResponse_AudioResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetResponseResponse_AudioResponse*>(&to_msg);
  auto& from = static_cast<const GetResponseResponse_AudioResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseResponse.AudioResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_audio_data().empty()) {
    _this->_internal_set_audio_data(from._internal_audio_data());
  }
  if (!from._internal_text_data().empty()) {
    _this->_internal_set_text_data(from._internal_text_data());
  }
  if (!from._internal_face_data().empty()) {
    _this->_internal_set_face_data(from._internal_face_data());
  }
  if (from._internal_has_audio_config()) {
    _this->_internal_mutable_audio_config()->::service::AudioConfig::MergeFrom(
        from._internal_audio_config());
  }
  if (from._internal_has_face_emotion()) {
    _this->_internal_mutable_face_emotion()->::service::ARKitBlendShapesData::MergeFrom(
        from._internal_face_emotion());
  }
  if (from._internal_has_emotion_response()) {
    _this->_internal_mutable_emotion_response()->::service::EmotionResponse::MergeFrom(
        from._internal_emotion_response());
  }
  if (from._internal_end_of_response() != 0) {
    _this->_internal_set_end_of_response(from._internal_end_of_response());
  }
  switch (from.face_data_type_case()) {
    case kVisemesData: {
      _this->_internal_mutable_visemes_data()->::service::VisemesData::MergeFrom(
          from._internal_visemes_data());
      break;
    }
    case kBlendshapesData: {
      _this->_internal_mutable_blendshapes_data()->::service::BlendShapesData::MergeFrom(
          from._internal_blendshapes_data());
      break;
    }
    case FACE_DATA_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseResponse_AudioResponse::CopyFrom(const GetResponseResponse_AudioResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseResponse.AudioResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseResponse_AudioResponse::IsInitialized() const {
  return true;
}

void GetResponseResponse_AudioResponse::InternalSwap(GetResponseResponse_AudioResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.audio_data_, lhs_arena,
      &other->_impl_.audio_data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_data_, lhs_arena,
      &other->_impl_.text_data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.face_data_, lhs_arena,
      &other->_impl_.face_data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.end_of_response_)
      + sizeof(GetResponseResponse_AudioResponse::_impl_.end_of_response_)
      - PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, _impl_.audio_config_)>(
          reinterpret_cast<char*>(&_impl_.audio_config_),
          reinterpret_cast<char*>(&other->_impl_.audio_config_));
  swap(_impl_.face_data_type_, other->_impl_.face_data_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseResponse_AudioResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[16]);
}

// ===================================================================

class GetResponseResponse_ActionResponse::_Internal {
 public:
};

GetResponseResponse_ActionResponse::GetResponseResponse_ActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseResponse.ActionResponse)
}
GetResponseResponse_ActionResponse::GetResponseResponse_ActionResponse(const GetResponseResponse_ActionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetResponseResponse_ActionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.action_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.action_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_action().empty()) {
    _this->_impl_.action_.Set(from._internal_action(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:service.GetResponseResponse.ActionResponse)
}

inline void GetResponseResponse_ActionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.action_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.action_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.action_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetResponseResponse_ActionResponse::~GetResponseResponse_ActionResponse() {
  // @@protoc_insertion_point(destructor:service.GetResponseResponse.ActionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetResponseResponse_ActionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.action_.Destroy();
}

void GetResponseResponse_ActionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetResponseResponse_ActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseResponse.ActionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.action_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseResponse_ActionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_action();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseResponse.ActionResponse.action"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetResponseResponse_ActionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseResponse.ActionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 1;
  if (!this->_internal_action().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.ActionResponse.action");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseResponse.ActionResponse)
  return target;
}

size_t GetResponseResponse_ActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseResponse.ActionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string action = 1;
  if (!this->_internal_action().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetResponseResponse_ActionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetResponseResponse_ActionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetResponseResponse_ActionResponse::GetClassData() const { return &_class_data_; }


void GetResponseResponse_ActionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetResponseResponse_ActionResponse*>(&to_msg);
  auto& from = static_cast<const GetResponseResponse_ActionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseResponse.ActionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_action().empty()) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseResponse_ActionResponse::CopyFrom(const GetResponseResponse_ActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseResponse.ActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseResponse_ActionResponse::IsInitialized() const {
  return true;
}

void GetResponseResponse_ActionResponse::InternalSwap(GetResponseResponse_ActionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.action_, lhs_arena,
      &other->_impl_.action_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseResponse_ActionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[17]);
}

// ===================================================================

class GetResponseResponse_BehaviorTreeResponse::_Internal {
 public:
};

GetResponseResponse_BehaviorTreeResponse::GetResponseResponse_BehaviorTreeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseResponse.BehaviorTreeResponse)
}
GetResponseResponse_BehaviorTreeResponse::GetResponseResponse_BehaviorTreeResponse(const GetResponseResponse_BehaviorTreeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetResponseResponse_BehaviorTreeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bt_code_){}
    , decltype(_impl_.bt_constants_){}
    , decltype(_impl_.narrative_section_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.bt_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bt_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bt_code().empty()) {
    _this->_impl_.bt_code_.Set(from._internal_bt_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.bt_constants_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bt_constants_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bt_constants().empty()) {
    _this->_impl_.bt_constants_.Set(from._internal_bt_constants(), 
      _this->GetArenaForAllocation());
  }
  _impl_.narrative_section_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.narrative_section_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_narrative_section_id().empty()) {
    _this->_impl_.narrative_section_id_.Set(from._internal_narrative_section_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:service.GetResponseResponse.BehaviorTreeResponse)
}

inline void GetResponseResponse_BehaviorTreeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bt_code_){}
    , decltype(_impl_.bt_constants_){}
    , decltype(_impl_.narrative_section_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.bt_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bt_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.bt_constants_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bt_constants_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.narrative_section_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.narrative_section_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetResponseResponse_BehaviorTreeResponse::~GetResponseResponse_BehaviorTreeResponse() {
  // @@protoc_insertion_point(destructor:service.GetResponseResponse.BehaviorTreeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetResponseResponse_BehaviorTreeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bt_code_.Destroy();
  _impl_.bt_constants_.Destroy();
  _impl_.narrative_section_id_.Destroy();
}

void GetResponseResponse_BehaviorTreeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetResponseResponse_BehaviorTreeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseResponse.BehaviorTreeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bt_code_.ClearToEmpty();
  _impl_.bt_constants_.ClearToEmpty();
  _impl_.narrative_section_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseResponse_BehaviorTreeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string bt_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_bt_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseResponse.BehaviorTreeResponse.bt_code"));
        } else
          goto handle_unusual;
        continue;
      // string bt_constants = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_bt_constants();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseResponse.BehaviorTreeResponse.bt_constants"));
        } else
          goto handle_unusual;
        continue;
      // string narrative_section_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_narrative_section_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseResponse.BehaviorTreeResponse.narrative_section_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetResponseResponse_BehaviorTreeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseResponse.BehaviorTreeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string bt_code = 1;
  if (!this->_internal_bt_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bt_code().data(), static_cast<int>(this->_internal_bt_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.BehaviorTreeResponse.bt_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_bt_code(), target);
  }

  // string bt_constants = 2;
  if (!this->_internal_bt_constants().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bt_constants().data(), static_cast<int>(this->_internal_bt_constants().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.BehaviorTreeResponse.bt_constants");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_bt_constants(), target);
  }

  // string narrative_section_id = 3;
  if (!this->_internal_narrative_section_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_narrative_section_id().data(), static_cast<int>(this->_internal_narrative_section_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.BehaviorTreeResponse.narrative_section_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_narrative_section_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseResponse.BehaviorTreeResponse)
  return target;
}

size_t GetResponseResponse_BehaviorTreeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseResponse.BehaviorTreeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string bt_code = 1;
  if (!this->_internal_bt_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bt_code());
  }

  // string bt_constants = 2;
  if (!this->_internal_bt_constants().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bt_constants());
  }

  // string narrative_section_id = 3;
  if (!this->_internal_narrative_section_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_narrative_section_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetResponseResponse_BehaviorTreeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetResponseResponse_BehaviorTreeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetResponseResponse_BehaviorTreeResponse::GetClassData() const { return &_class_data_; }


void GetResponseResponse_BehaviorTreeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetResponseResponse_BehaviorTreeResponse*>(&to_msg);
  auto& from = static_cast<const GetResponseResponse_BehaviorTreeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseResponse.BehaviorTreeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bt_code().empty()) {
    _this->_internal_set_bt_code(from._internal_bt_code());
  }
  if (!from._internal_bt_constants().empty()) {
    _this->_internal_set_bt_constants(from._internal_bt_constants());
  }
  if (!from._internal_narrative_section_id().empty()) {
    _this->_internal_set_narrative_section_id(from._internal_narrative_section_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseResponse_BehaviorTreeResponse::CopyFrom(const GetResponseResponse_BehaviorTreeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseResponse.BehaviorTreeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseResponse_BehaviorTreeResponse::IsInitialized() const {
  return true;
}

void GetResponseResponse_BehaviorTreeResponse::InternalSwap(GetResponseResponse_BehaviorTreeResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.bt_code_, lhs_arena,
      &other->_impl_.bt_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.bt_constants_, lhs_arena,
      &other->_impl_.bt_constants_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.narrative_section_id_, lhs_arena,
      &other->_impl_.narrative_section_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseResponse_BehaviorTreeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[18]);
}

// ===================================================================

class GetResponseResponse_UserTranscript::_Internal {
 public:
};

GetResponseResponse_UserTranscript::GetResponseResponse_UserTranscript(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseResponse.UserTranscript)
}
GetResponseResponse_UserTranscript::GetResponseResponse_UserTranscript(const GetResponseResponse_UserTranscript& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetResponseResponse_UserTranscript* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_data_){}
    , decltype(_impl_.is_final_){}
    , decltype(_impl_.end_of_response_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text_data().empty()) {
    _this->_impl_.text_data_.Set(from._internal_text_data(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.is_final_, &from._impl_.is_final_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.end_of_response_) -
    reinterpret_cast<char*>(&_impl_.is_final_)) + sizeof(_impl_.end_of_response_));
  // @@protoc_insertion_point(copy_constructor:service.GetResponseResponse.UserTranscript)
}

inline void GetResponseResponse_UserTranscript::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.text_data_){}
    , decltype(_impl_.is_final_){false}
    , decltype(_impl_.end_of_response_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetResponseResponse_UserTranscript::~GetResponseResponse_UserTranscript() {
  // @@protoc_insertion_point(destructor:service.GetResponseResponse.UserTranscript)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetResponseResponse_UserTranscript::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_data_.Destroy();
}

void GetResponseResponse_UserTranscript::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetResponseResponse_UserTranscript::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseResponse.UserTranscript)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_data_.ClearToEmpty();
  ::memset(&_impl_.is_final_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.end_of_response_) -
      reinterpret_cast<char*>(&_impl_.is_final_)) + sizeof(_impl_.end_of_response_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseResponse_UserTranscript::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string text_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_text_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseResponse.UserTranscript.text_data"));
        } else
          goto handle_unusual;
        continue;
      // bool is_final = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.is_final_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool end_of_response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.end_of_response_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetResponseResponse_UserTranscript::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseResponse.UserTranscript)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string text_data = 1;
  if (!this->_internal_text_data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text_data().data(), static_cast<int>(this->_internal_text_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.UserTranscript.text_data");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text_data(), target);
  }

  // bool is_final = 2;
  if (this->_internal_is_final() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_is_final(), target);
  }

  // bool end_of_response = 3;
  if (this->_internal_end_of_response() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_end_of_response(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseResponse.UserTranscript)
  return target;
}

size_t GetResponseResponse_UserTranscript::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseResponse.UserTranscript)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text_data = 1;
  if (!this->_internal_text_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text_data());
  }

  // bool is_final = 2;
  if (this->_internal_is_final() != 0) {
    total_size += 1 + 1;
  }

  // bool end_of_response = 3;
  if (this->_internal_end_of_response() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetResponseResponse_UserTranscript::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetResponseResponse_UserTranscript::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetResponseResponse_UserTranscript::GetClassData() const { return &_class_data_; }


void GetResponseResponse_UserTranscript::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetResponseResponse_UserTranscript*>(&to_msg);
  auto& from = static_cast<const GetResponseResponse_UserTranscript&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseResponse.UserTranscript)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text_data().empty()) {
    _this->_internal_set_text_data(from._internal_text_data());
  }
  if (from._internal_is_final() != 0) {
    _this->_internal_set_is_final(from._internal_is_final());
  }
  if (from._internal_end_of_response() != 0) {
    _this->_internal_set_end_of_response(from._internal_end_of_response());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseResponse_UserTranscript::CopyFrom(const GetResponseResponse_UserTranscript& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseResponse.UserTranscript)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseResponse_UserTranscript::IsInitialized() const {
  return true;
}

void GetResponseResponse_UserTranscript::InternalSwap(GetResponseResponse_UserTranscript* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_data_, lhs_arena,
      &other->_impl_.text_data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetResponseResponse_UserTranscript, _impl_.end_of_response_)
      + sizeof(GetResponseResponse_UserTranscript::_impl_.end_of_response_)
      - PROTOBUF_FIELD_OFFSET(GetResponseResponse_UserTranscript, _impl_.is_final_)>(
          reinterpret_cast<char*>(&_impl_.is_final_),
          reinterpret_cast<char*>(&other->_impl_.is_final_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseResponse_UserTranscript::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[19]);
}

// ===================================================================

class GetResponseResponse::_Internal {
 public:
  static const ::service::GetResponseResponse_ActionResponse& action_response(const GetResponseResponse* msg);
  static const ::service::GetResponseResponse_AudioResponse& audio_response(const GetResponseResponse* msg);
  static const ::service::GetResponseResponse_UserTranscript& user_query(const GetResponseResponse* msg);
  static const ::service::GetResponseResponse_BehaviorTreeResponse& bt_response(const GetResponseResponse* msg);
};

const ::service::GetResponseResponse_ActionResponse&
GetResponseResponse::_Internal::action_response(const GetResponseResponse* msg) {
  return *msg->_impl_.response_type_.action_response_;
}
const ::service::GetResponseResponse_AudioResponse&
GetResponseResponse::_Internal::audio_response(const GetResponseResponse* msg) {
  return *msg->_impl_.response_type_.audio_response_;
}
const ::service::GetResponseResponse_UserTranscript&
GetResponseResponse::_Internal::user_query(const GetResponseResponse* msg) {
  return *msg->_impl_.response_type_.user_query_;
}
const ::service::GetResponseResponse_BehaviorTreeResponse&
GetResponseResponse::_Internal::bt_response(const GetResponseResponse* msg) {
  return *msg->_impl_.response_type_.bt_response_;
}
void GetResponseResponse::set_allocated_action_response(::service::GetResponseResponse_ActionResponse* action_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_response_type();
  if (action_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(action_response);
    if (message_arena != submessage_arena) {
      action_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, action_response, submessage_arena);
    }
    set_has_action_response();
    _impl_.response_type_.action_response_ = action_response;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseResponse.action_response)
}
void GetResponseResponse::set_allocated_audio_response(::service::GetResponseResponse_AudioResponse* audio_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_response_type();
  if (audio_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(audio_response);
    if (message_arena != submessage_arena) {
      audio_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, audio_response, submessage_arena);
    }
    set_has_audio_response();
    _impl_.response_type_.audio_response_ = audio_response;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseResponse.audio_response)
}
void GetResponseResponse::set_allocated_user_query(::service::GetResponseResponse_UserTranscript* user_query) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_response_type();
  if (user_query) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(user_query);
    if (message_arena != submessage_arena) {
      user_query = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_query, submessage_arena);
    }
    set_has_user_query();
    _impl_.response_type_.user_query_ = user_query;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseResponse.user_query)
}
void GetResponseResponse::set_allocated_bt_response(::service::GetResponseResponse_BehaviorTreeResponse* bt_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_response_type();
  if (bt_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(bt_response);
    if (message_arena != submessage_arena) {
      bt_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bt_response, submessage_arena);
    }
    set_has_bt_response();
    _impl_.response_type_.bt_response_ = bt_response;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseResponse.bt_response)
}
GetResponseResponse::GetResponseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseResponse)
}
GetResponseResponse::GetResponseResponse(const GetResponseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetResponseResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.session_id_){}
    , decltype(_impl_.response_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_session_id().empty()) {
    _this->_impl_.session_id_.Set(from._internal_session_id(), 
      _this->GetArenaForAllocation());
  }
  clear_has_response_type();
  switch (from.response_type_case()) {
    case kActionResponse: {
      _this->_internal_mutable_action_response()->::service::GetResponseResponse_ActionResponse::MergeFrom(
          from._internal_action_response());
      break;
    }
    case kAudioResponse: {
      _this->_internal_mutable_audio_response()->::service::GetResponseResponse_AudioResponse::MergeFrom(
          from._internal_audio_response());
      break;
    }
    case kDebugLog: {
      _this->_internal_set_debug_log(from._internal_debug_log());
      break;
    }
    case kUserQuery: {
      _this->_internal_mutable_user_query()->::service::GetResponseResponse_UserTranscript::MergeFrom(
          from._internal_user_query());
      break;
    }
    case kBtResponse: {
      _this->_internal_mutable_bt_response()->::service::GetResponseResponse_BehaviorTreeResponse::MergeFrom(
          from._internal_bt_response());
      break;
    }
    case kEmotionResponse: {
      _this->_internal_set_emotion_response(from._internal_emotion_response());
      break;
    }
    case kInteractionId: {
      _this->_internal_set_interaction_id(from._internal_interaction_id());
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service.GetResponseResponse)
}

inline void GetResponseResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.session_id_){}
    , decltype(_impl_.response_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_response_type();
}

GetResponseResponse::~GetResponseResponse() {
  // @@protoc_insertion_point(destructor:service.GetResponseResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetResponseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.session_id_.Destroy();
  if (has_response_type()) {
    clear_response_type();
  }
}

void GetResponseResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetResponseResponse::clear_response_type() {
// @@protoc_insertion_point(one_of_clear_start:service.GetResponseResponse)
  switch (response_type_case()) {
    case kActionResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.response_type_.action_response_;
      }
      break;
    }
    case kAudioResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.response_type_.audio_response_;
      }
      break;
    }
    case kDebugLog: {
      _impl_.response_type_.debug_log_.Destroy();
      break;
    }
    case kUserQuery: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.response_type_.user_query_;
      }
      break;
    }
    case kBtResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.response_type_.bt_response_;
      }
      break;
    }
    case kEmotionResponse: {
      _impl_.response_type_.emotion_response_.Destroy();
      break;
    }
    case kInteractionId: {
      _impl_.response_type_.interaction_id_.Destroy();
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESPONSE_TYPE_NOT_SET;
}


void GetResponseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_id_.ClearToEmpty();
  clear_response_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string session_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_session_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseResponse.session_id"));
        } else
          goto handle_unusual;
        continue;
      // .service.GetResponseResponse.ActionResponse action_response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_action_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service.GetResponseResponse.AudioResponse audio_response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_audio_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string debug_log = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_debug_log();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseResponse.debug_log"));
        } else
          goto handle_unusual;
        continue;
      // .service.GetResponseResponse.UserTranscript user_query = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_query(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service.GetResponseResponse.BehaviorTreeResponse bt_response = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_bt_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string emotion_response = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_emotion_response();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseResponse.emotion_response"));
        } else
          goto handle_unusual;
        continue;
      // string interaction_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_interaction_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.GetResponseResponse.interaction_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetResponseResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (!this->_internal_session_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.session_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_session_id(), target);
  }

  // .service.GetResponseResponse.ActionResponse action_response = 2;
  if (_internal_has_action_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::action_response(this),
        _Internal::action_response(this).GetCachedSize(), target, stream);
  }

  // .service.GetResponseResponse.AudioResponse audio_response = 3;
  if (_internal_has_audio_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::audio_response(this),
        _Internal::audio_response(this).GetCachedSize(), target, stream);
  }

  // string debug_log = 4;
  if (_internal_has_debug_log()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_debug_log().data(), static_cast<int>(this->_internal_debug_log().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.debug_log");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_debug_log(), target);
  }

  // .service.GetResponseResponse.UserTranscript user_query = 5;
  if (_internal_has_user_query()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::user_query(this),
        _Internal::user_query(this).GetCachedSize(), target, stream);
  }

  // .service.GetResponseResponse.BehaviorTreeResponse bt_response = 6;
  if (_internal_has_bt_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::bt_response(this),
        _Internal::bt_response(this).GetCachedSize(), target, stream);
  }

  // string emotion_response = 7;
  if (_internal_has_emotion_response()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_emotion_response().data(), static_cast<int>(this->_internal_emotion_response().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.emotion_response");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_emotion_response(), target);
  }

  // string interaction_id = 8;
  if (_internal_has_interaction_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_interaction_id().data(), static_cast<int>(this->_internal_interaction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.interaction_id");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_interaction_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseResponse)
  return target;
}

size_t GetResponseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string session_id = 1;
  if (!this->_internal_session_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  switch (response_type_case()) {
    // .service.GetResponseResponse.ActionResponse action_response = 2;
    case kActionResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.response_type_.action_response_);
      break;
    }
    // .service.GetResponseResponse.AudioResponse audio_response = 3;
    case kAudioResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.response_type_.audio_response_);
      break;
    }
    // string debug_log = 4;
    case kDebugLog: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_debug_log());
      break;
    }
    // .service.GetResponseResponse.UserTranscript user_query = 5;
    case kUserQuery: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.response_type_.user_query_);
      break;
    }
    // .service.GetResponseResponse.BehaviorTreeResponse bt_response = 6;
    case kBtResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.response_type_.bt_response_);
      break;
    }
    // string emotion_response = 7;
    case kEmotionResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_emotion_response());
      break;
    }
    // string interaction_id = 8;
    case kInteractionId: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_interaction_id());
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetResponseResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetResponseResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetResponseResponse::GetClassData() const { return &_class_data_; }


void GetResponseResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetResponseResponse*>(&to_msg);
  auto& from = static_cast<const GetResponseResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  switch (from.response_type_case()) {
    case kActionResponse: {
      _this->_internal_mutable_action_response()->::service::GetResponseResponse_ActionResponse::MergeFrom(
          from._internal_action_response());
      break;
    }
    case kAudioResponse: {
      _this->_internal_mutable_audio_response()->::service::GetResponseResponse_AudioResponse::MergeFrom(
          from._internal_audio_response());
      break;
    }
    case kDebugLog: {
      _this->_internal_set_debug_log(from._internal_debug_log());
      break;
    }
    case kUserQuery: {
      _this->_internal_mutable_user_query()->::service::GetResponseResponse_UserTranscript::MergeFrom(
          from._internal_user_query());
      break;
    }
    case kBtResponse: {
      _this->_internal_mutable_bt_response()->::service::GetResponseResponse_BehaviorTreeResponse::MergeFrom(
          from._internal_bt_response());
      break;
    }
    case kEmotionResponse: {
      _this->_internal_set_emotion_response(from._internal_emotion_response());
      break;
    }
    case kInteractionId: {
      _this->_internal_set_interaction_id(from._internal_interaction_id());
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponseResponse::CopyFrom(const GetResponseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseResponse::IsInitialized() const {
  return true;
}

void GetResponseResponse::InternalSwap(GetResponseResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.session_id_, lhs_arena,
      &other->_impl_.session_id_, rhs_arena
  );
  swap(_impl_.response_type_, other->_impl_.response_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[20]);
}

// ===================================================================

class VisemesData::_Internal {
 public:
  static const ::service::Viseme& visemes(const VisemesData* msg);
};

const ::service::Viseme&
VisemesData::_Internal::visemes(const VisemesData* msg) {
  return *msg->_impl_.visemes_;
}
VisemesData::VisemesData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.VisemesData)
}
VisemesData::VisemesData(const VisemesData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VisemesData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.visemes_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_visemes()) {
    _this->_impl_.visemes_ = new ::service::Viseme(*from._impl_.visemes_);
  }
  // @@protoc_insertion_point(copy_constructor:service.VisemesData)
}

inline void VisemesData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.visemes_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

VisemesData::~VisemesData() {
  // @@protoc_insertion_point(destructor:service.VisemesData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VisemesData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.visemes_;
}

void VisemesData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VisemesData::Clear() {
// @@protoc_insertion_point(message_clear_start:service.VisemesData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.visemes_ != nullptr) {
    delete _impl_.visemes_;
  }
  _impl_.visemes_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VisemesData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .service.Viseme visemes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_visemes(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VisemesData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.VisemesData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .service.Viseme visemes = 1;
  if (this->_internal_has_visemes()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::visemes(this),
        _Internal::visemes(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.VisemesData)
  return target;
}

size_t VisemesData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.VisemesData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service.Viseme visemes = 1;
  if (this->_internal_has_visemes()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.visemes_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VisemesData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VisemesData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VisemesData::GetClassData() const { return &_class_data_; }


void VisemesData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VisemesData*>(&to_msg);
  auto& from = static_cast<const VisemesData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.VisemesData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_visemes()) {
    _this->_internal_mutable_visemes()->::service::Viseme::MergeFrom(
        from._internal_visemes());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VisemesData::CopyFrom(const VisemesData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.VisemesData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisemesData::IsInitialized() const {
  return true;
}

void VisemesData::InternalSwap(VisemesData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.visemes_, other->_impl_.visemes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VisemesData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[21]);
}

// ===================================================================

class EmotionResponse::_Internal {
 public:
};

EmotionResponse::EmotionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.EmotionResponse)
}
EmotionResponse::EmotionResponse(const EmotionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EmotionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.emotion_){}
    , decltype(_impl_.scale_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.emotion_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.emotion_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_emotion().empty()) {
    _this->_impl_.emotion_.Set(from._internal_emotion(), 
      _this->GetArenaForAllocation());
  }
  _impl_.scale_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.scale_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_scale().empty()) {
    _this->_impl_.scale_.Set(from._internal_scale(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:service.EmotionResponse)
}

inline void EmotionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.emotion_){}
    , decltype(_impl_.scale_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.emotion_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.emotion_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.scale_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.scale_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EmotionResponse::~EmotionResponse() {
  // @@protoc_insertion_point(destructor:service.EmotionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EmotionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.emotion_.Destroy();
  _impl_.scale_.Destroy();
}

void EmotionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EmotionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.EmotionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.emotion_.ClearToEmpty();
  _impl_.scale_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EmotionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string emotion = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_emotion();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.EmotionResponse.emotion"));
        } else
          goto handle_unusual;
        continue;
      // string scale = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_scale();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.EmotionResponse.scale"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EmotionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.EmotionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string emotion = 1;
  if (!this->_internal_emotion().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_emotion().data(), static_cast<int>(this->_internal_emotion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.EmotionResponse.emotion");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_emotion(), target);
  }

  // string scale = 2;
  if (!this->_internal_scale().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scale().data(), static_cast<int>(this->_internal_scale().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.EmotionResponse.scale");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_scale(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.EmotionResponse)
  return target;
}

size_t EmotionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.EmotionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string emotion = 1;
  if (!this->_internal_emotion().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_emotion());
  }

  // string scale = 2;
  if (!this->_internal_scale().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scale());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EmotionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EmotionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EmotionResponse::GetClassData() const { return &_class_data_; }


void EmotionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EmotionResponse*>(&to_msg);
  auto& from = static_cast<const EmotionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.EmotionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_emotion().empty()) {
    _this->_internal_set_emotion(from._internal_emotion());
  }
  if (!from._internal_scale().empty()) {
    _this->_internal_set_scale(from._internal_scale());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EmotionResponse::CopyFrom(const EmotionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.EmotionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmotionResponse::IsInitialized() const {
  return true;
}

void EmotionResponse::InternalSwap(EmotionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.emotion_, lhs_arena,
      &other->_impl_.emotion_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.scale_, lhs_arena,
      &other->_impl_.scale_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata EmotionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[22]);
}

// ===================================================================

class Viseme::_Internal {
 public:
};

Viseme::Viseme(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.Viseme)
}
Viseme::Viseme(const Viseme& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Viseme* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sil_){}
    , decltype(_impl_.pp_){}
    , decltype(_impl_.ff_){}
    , decltype(_impl_.th_){}
    , decltype(_impl_.dd_){}
    , decltype(_impl_.kk_){}
    , decltype(_impl_.ch_){}
    , decltype(_impl_.ss_){}
    , decltype(_impl_.nn_){}
    , decltype(_impl_.rr_){}
    , decltype(_impl_.aa_){}
    , decltype(_impl_.e_){}
    , decltype(_impl_.ih_){}
    , decltype(_impl_.oh_){}
    , decltype(_impl_.ou_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.sil_, &from._impl_.sil_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ou_) -
    reinterpret_cast<char*>(&_impl_.sil_)) + sizeof(_impl_.ou_));
  // @@protoc_insertion_point(copy_constructor:service.Viseme)
}

inline void Viseme::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sil_){0}
    , decltype(_impl_.pp_){0}
    , decltype(_impl_.ff_){0}
    , decltype(_impl_.th_){0}
    , decltype(_impl_.dd_){0}
    , decltype(_impl_.kk_){0}
    , decltype(_impl_.ch_){0}
    , decltype(_impl_.ss_){0}
    , decltype(_impl_.nn_){0}
    , decltype(_impl_.rr_){0}
    , decltype(_impl_.aa_){0}
    , decltype(_impl_.e_){0}
    , decltype(_impl_.ih_){0}
    , decltype(_impl_.oh_){0}
    , decltype(_impl_.ou_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Viseme::~Viseme() {
  // @@protoc_insertion_point(destructor:service.Viseme)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Viseme::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Viseme::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Viseme::Clear() {
// @@protoc_insertion_point(message_clear_start:service.Viseme)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.sil_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.ou_) -
      reinterpret_cast<char*>(&_impl_.sil_)) + sizeof(_impl_.ou_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Viseme::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float sil = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.sil_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float pp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _impl_.pp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float ff = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.ff_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float th = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _impl_.th_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float dd = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          _impl_.dd_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float kk = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 53)) {
          _impl_.kk_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float ch = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 61)) {
          _impl_.ch_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float ss = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 69)) {
          _impl_.ss_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float nn = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 77)) {
          _impl_.nn_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float rr = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 85)) {
          _impl_.rr_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float aa = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 93)) {
          _impl_.aa_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float e = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 101)) {
          _impl_.e_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float ih = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 109)) {
          _impl_.ih_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float oh = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 117)) {
          _impl_.oh_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float ou = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 125)) {
          _impl_.ou_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Viseme::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.Viseme)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float sil = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_sil = this->_internal_sil();
  uint32_t raw_sil;
  memcpy(&raw_sil, &tmp_sil, sizeof(tmp_sil));
  if (raw_sil != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_sil(), target);
  }

  // float pp = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_pp = this->_internal_pp();
  uint32_t raw_pp;
  memcpy(&raw_pp, &tmp_pp, sizeof(tmp_pp));
  if (raw_pp != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_pp(), target);
  }

  // float ff = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ff = this->_internal_ff();
  uint32_t raw_ff;
  memcpy(&raw_ff, &tmp_ff, sizeof(tmp_ff));
  if (raw_ff != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_ff(), target);
  }

  // float th = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_th = this->_internal_th();
  uint32_t raw_th;
  memcpy(&raw_th, &tmp_th, sizeof(tmp_th));
  if (raw_th != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_th(), target);
  }

  // float dd = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_dd = this->_internal_dd();
  uint32_t raw_dd;
  memcpy(&raw_dd, &tmp_dd, sizeof(tmp_dd));
  if (raw_dd != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(5, this->_internal_dd(), target);
  }

  // float kk = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_kk = this->_internal_kk();
  uint32_t raw_kk;
  memcpy(&raw_kk, &tmp_kk, sizeof(tmp_kk));
  if (raw_kk != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(6, this->_internal_kk(), target);
  }

  // float ch = 7;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ch = this->_internal_ch();
  uint32_t raw_ch;
  memcpy(&raw_ch, &tmp_ch, sizeof(tmp_ch));
  if (raw_ch != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(7, this->_internal_ch(), target);
  }

  // float ss = 8;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ss = this->_internal_ss();
  uint32_t raw_ss;
  memcpy(&raw_ss, &tmp_ss, sizeof(tmp_ss));
  if (raw_ss != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(8, this->_internal_ss(), target);
  }

  // float nn = 9;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_nn = this->_internal_nn();
  uint32_t raw_nn;
  memcpy(&raw_nn, &tmp_nn, sizeof(tmp_nn));
  if (raw_nn != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(9, this->_internal_nn(), target);
  }

  // float rr = 10;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_rr = this->_internal_rr();
  uint32_t raw_rr;
  memcpy(&raw_rr, &tmp_rr, sizeof(tmp_rr));
  if (raw_rr != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(10, this->_internal_rr(), target);
  }

  // float aa = 11;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_aa = this->_internal_aa();
  uint32_t raw_aa;
  memcpy(&raw_aa, &tmp_aa, sizeof(tmp_aa));
  if (raw_aa != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(11, this->_internal_aa(), target);
  }

  // float e = 12;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_e = this->_internal_e();
  uint32_t raw_e;
  memcpy(&raw_e, &tmp_e, sizeof(tmp_e));
  if (raw_e != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(12, this->_internal_e(), target);
  }

  // float ih = 13;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ih = this->_internal_ih();
  uint32_t raw_ih;
  memcpy(&raw_ih, &tmp_ih, sizeof(tmp_ih));
  if (raw_ih != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(13, this->_internal_ih(), target);
  }

  // float oh = 14;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_oh = this->_internal_oh();
  uint32_t raw_oh;
  memcpy(&raw_oh, &tmp_oh, sizeof(tmp_oh));
  if (raw_oh != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(14, this->_internal_oh(), target);
  }

  // float ou = 15;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ou = this->_internal_ou();
  uint32_t raw_ou;
  memcpy(&raw_ou, &tmp_ou, sizeof(tmp_ou));
  if (raw_ou != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(15, this->_internal_ou(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.Viseme)
  return target;
}

size_t Viseme::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.Viseme)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float sil = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_sil = this->_internal_sil();
  uint32_t raw_sil;
  memcpy(&raw_sil, &tmp_sil, sizeof(tmp_sil));
  if (raw_sil != 0) {
    total_size += 1 + 4;
  }

  // float pp = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_pp = this->_internal_pp();
  uint32_t raw_pp;
  memcpy(&raw_pp, &tmp_pp, sizeof(tmp_pp));
  if (raw_pp != 0) {
    total_size += 1 + 4;
  }

  // float ff = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ff = this->_internal_ff();
  uint32_t raw_ff;
  memcpy(&raw_ff, &tmp_ff, sizeof(tmp_ff));
  if (raw_ff != 0) {
    total_size += 1 + 4;
  }

  // float th = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_th = this->_internal_th();
  uint32_t raw_th;
  memcpy(&raw_th, &tmp_th, sizeof(tmp_th));
  if (raw_th != 0) {
    total_size += 1 + 4;
  }

  // float dd = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_dd = this->_internal_dd();
  uint32_t raw_dd;
  memcpy(&raw_dd, &tmp_dd, sizeof(tmp_dd));
  if (raw_dd != 0) {
    total_size += 1 + 4;
  }

  // float kk = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_kk = this->_internal_kk();
  uint32_t raw_kk;
  memcpy(&raw_kk, &tmp_kk, sizeof(tmp_kk));
  if (raw_kk != 0) {
    total_size += 1 + 4;
  }

  // float ch = 7;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ch = this->_internal_ch();
  uint32_t raw_ch;
  memcpy(&raw_ch, &tmp_ch, sizeof(tmp_ch));
  if (raw_ch != 0) {
    total_size += 1 + 4;
  }

  // float ss = 8;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ss = this->_internal_ss();
  uint32_t raw_ss;
  memcpy(&raw_ss, &tmp_ss, sizeof(tmp_ss));
  if (raw_ss != 0) {
    total_size += 1 + 4;
  }

  // float nn = 9;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_nn = this->_internal_nn();
  uint32_t raw_nn;
  memcpy(&raw_nn, &tmp_nn, sizeof(tmp_nn));
  if (raw_nn != 0) {
    total_size += 1 + 4;
  }

  // float rr = 10;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_rr = this->_internal_rr();
  uint32_t raw_rr;
  memcpy(&raw_rr, &tmp_rr, sizeof(tmp_rr));
  if (raw_rr != 0) {
    total_size += 1 + 4;
  }

  // float aa = 11;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_aa = this->_internal_aa();
  uint32_t raw_aa;
  memcpy(&raw_aa, &tmp_aa, sizeof(tmp_aa));
  if (raw_aa != 0) {
    total_size += 1 + 4;
  }

  // float e = 12;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_e = this->_internal_e();
  uint32_t raw_e;
  memcpy(&raw_e, &tmp_e, sizeof(tmp_e));
  if (raw_e != 0) {
    total_size += 1 + 4;
  }

  // float ih = 13;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ih = this->_internal_ih();
  uint32_t raw_ih;
  memcpy(&raw_ih, &tmp_ih, sizeof(tmp_ih));
  if (raw_ih != 0) {
    total_size += 1 + 4;
  }

  // float oh = 14;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_oh = this->_internal_oh();
  uint32_t raw_oh;
  memcpy(&raw_oh, &tmp_oh, sizeof(tmp_oh));
  if (raw_oh != 0) {
    total_size += 1 + 4;
  }

  // float ou = 15;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ou = this->_internal_ou();
  uint32_t raw_ou;
  memcpy(&raw_ou, &tmp_ou, sizeof(tmp_ou));
  if (raw_ou != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Viseme::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Viseme::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Viseme::GetClassData() const { return &_class_data_; }


void Viseme::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Viseme*>(&to_msg);
  auto& from = static_cast<const Viseme&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.Viseme)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_sil = from._internal_sil();
  uint32_t raw_sil;
  memcpy(&raw_sil, &tmp_sil, sizeof(tmp_sil));
  if (raw_sil != 0) {
    _this->_internal_set_sil(from._internal_sil());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_pp = from._internal_pp();
  uint32_t raw_pp;
  memcpy(&raw_pp, &tmp_pp, sizeof(tmp_pp));
  if (raw_pp != 0) {
    _this->_internal_set_pp(from._internal_pp());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ff = from._internal_ff();
  uint32_t raw_ff;
  memcpy(&raw_ff, &tmp_ff, sizeof(tmp_ff));
  if (raw_ff != 0) {
    _this->_internal_set_ff(from._internal_ff());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_th = from._internal_th();
  uint32_t raw_th;
  memcpy(&raw_th, &tmp_th, sizeof(tmp_th));
  if (raw_th != 0) {
    _this->_internal_set_th(from._internal_th());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_dd = from._internal_dd();
  uint32_t raw_dd;
  memcpy(&raw_dd, &tmp_dd, sizeof(tmp_dd));
  if (raw_dd != 0) {
    _this->_internal_set_dd(from._internal_dd());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_kk = from._internal_kk();
  uint32_t raw_kk;
  memcpy(&raw_kk, &tmp_kk, sizeof(tmp_kk));
  if (raw_kk != 0) {
    _this->_internal_set_kk(from._internal_kk());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ch = from._internal_ch();
  uint32_t raw_ch;
  memcpy(&raw_ch, &tmp_ch, sizeof(tmp_ch));
  if (raw_ch != 0) {
    _this->_internal_set_ch(from._internal_ch());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ss = from._internal_ss();
  uint32_t raw_ss;
  memcpy(&raw_ss, &tmp_ss, sizeof(tmp_ss));
  if (raw_ss != 0) {
    _this->_internal_set_ss(from._internal_ss());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_nn = from._internal_nn();
  uint32_t raw_nn;
  memcpy(&raw_nn, &tmp_nn, sizeof(tmp_nn));
  if (raw_nn != 0) {
    _this->_internal_set_nn(from._internal_nn());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_rr = from._internal_rr();
  uint32_t raw_rr;
  memcpy(&raw_rr, &tmp_rr, sizeof(tmp_rr));
  if (raw_rr != 0) {
    _this->_internal_set_rr(from._internal_rr());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_aa = from._internal_aa();
  uint32_t raw_aa;
  memcpy(&raw_aa, &tmp_aa, sizeof(tmp_aa));
  if (raw_aa != 0) {
    _this->_internal_set_aa(from._internal_aa());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_e = from._internal_e();
  uint32_t raw_e;
  memcpy(&raw_e, &tmp_e, sizeof(tmp_e));
  if (raw_e != 0) {
    _this->_internal_set_e(from._internal_e());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ih = from._internal_ih();
  uint32_t raw_ih;
  memcpy(&raw_ih, &tmp_ih, sizeof(tmp_ih));
  if (raw_ih != 0) {
    _this->_internal_set_ih(from._internal_ih());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_oh = from._internal_oh();
  uint32_t raw_oh;
  memcpy(&raw_oh, &tmp_oh, sizeof(tmp_oh));
  if (raw_oh != 0) {
    _this->_internal_set_oh(from._internal_oh());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ou = from._internal_ou();
  uint32_t raw_ou;
  memcpy(&raw_ou, &tmp_ou, sizeof(tmp_ou));
  if (raw_ou != 0) {
    _this->_internal_set_ou(from._internal_ou());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Viseme::CopyFrom(const Viseme& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.Viseme)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Viseme::IsInitialized() const {
  return true;
}

void Viseme::InternalSwap(Viseme* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Viseme, _impl_.ou_)
      + sizeof(Viseme::_impl_.ou_)
      - PROTOBUF_FIELD_OFFSET(Viseme, _impl_.sil_)>(
          reinterpret_cast<char*>(&_impl_.sil_),
          reinterpret_cast<char*>(&other->_impl_.sil_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Viseme::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[23]);
}

// ===================================================================

class BlendShapesData::_Internal {
 public:
};

BlendShapesData::BlendShapesData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.BlendShapesData)
}
BlendShapesData::BlendShapesData(const BlendShapesData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BlendShapesData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.blendshape_data_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.blendshape_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.blendshape_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_blendshape_data().empty()) {
    _this->_impl_.blendshape_data_.Set(from._internal_blendshape_data(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:service.BlendShapesData)
}

inline void BlendShapesData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.blendshape_data_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.blendshape_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.blendshape_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BlendShapesData::~BlendShapesData() {
  // @@protoc_insertion_point(destructor:service.BlendShapesData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BlendShapesData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.blendshape_data_.Destroy();
}

void BlendShapesData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BlendShapesData::Clear() {
// @@protoc_insertion_point(message_clear_start:service.BlendShapesData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.blendshape_data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlendShapesData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string blendshape_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_blendshape_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.BlendShapesData.blendshape_data"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BlendShapesData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.BlendShapesData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string blendshape_data = 1;
  if (!this->_internal_blendshape_data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_blendshape_data().data(), static_cast<int>(this->_internal_blendshape_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.BlendShapesData.blendshape_data");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_blendshape_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.BlendShapesData)
  return target;
}

size_t BlendShapesData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.BlendShapesData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string blendshape_data = 1;
  if (!this->_internal_blendshape_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_blendshape_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlendShapesData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BlendShapesData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlendShapesData::GetClassData() const { return &_class_data_; }


void BlendShapesData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BlendShapesData*>(&to_msg);
  auto& from = static_cast<const BlendShapesData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.BlendShapesData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_blendshape_data().empty()) {
    _this->_internal_set_blendshape_data(from._internal_blendshape_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BlendShapesData::CopyFrom(const BlendShapesData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.BlendShapesData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlendShapesData::IsInitialized() const {
  return true;
}

void BlendShapesData::InternalSwap(BlendShapesData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.blendshape_data_, lhs_arena,
      &other->_impl_.blendshape_data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BlendShapesData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[24]);
}

// ===================================================================

class HelloRequest::_Internal {
 public:
};

HelloRequest::HelloRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.HelloRequest)
}
HelloRequest::HelloRequest(const HelloRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HelloRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:service.HelloRequest)
}

inline void HelloRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

HelloRequest::~HelloRequest() {
  // @@protoc_insertion_point(destructor:service.HelloRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HelloRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void HelloRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HelloRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:service.HelloRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HelloRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.HelloRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HelloRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.HelloRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.HelloRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.HelloRequest)
  return target;
}

size_t HelloRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.HelloRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HelloRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HelloRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HelloRequest::GetClassData() const { return &_class_data_; }


void HelloRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HelloRequest*>(&to_msg);
  auto& from = static_cast<const HelloRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.HelloRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HelloRequest::CopyFrom(const HelloRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.HelloRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloRequest::IsInitialized() const {
  return true;
}

void HelloRequest::InternalSwap(HelloRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata HelloRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[25]);
}

// ===================================================================

class HelloResponse::_Internal {
 public:
};

HelloResponse::HelloResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.HelloResponse)
}
HelloResponse::HelloResponse(const HelloResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HelloResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:service.HelloResponse)
}

inline void HelloResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

HelloResponse::~HelloResponse() {
  // @@protoc_insertion_point(destructor:service.HelloResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HelloResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void HelloResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HelloResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.HelloResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HelloResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.HelloResponse.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HelloResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.HelloResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.HelloResponse.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.HelloResponse)
  return target;
}

size_t HelloResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.HelloResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HelloResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HelloResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HelloResponse::GetClassData() const { return &_class_data_; }


void HelloResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HelloResponse*>(&to_msg);
  auto& from = static_cast<const HelloResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.HelloResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HelloResponse::CopyFrom(const HelloResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.HelloResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloResponse::IsInitialized() const {
  return true;
}

void HelloResponse::InternalSwap(HelloResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata HelloResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[26]);
}

// ===================================================================

class FeedbackRequest_Feedback::_Internal {
 public:
};

FeedbackRequest_Feedback::FeedbackRequest_Feedback(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.FeedbackRequest.Feedback)
}
FeedbackRequest_Feedback::FeedbackRequest_Feedback(const FeedbackRequest_Feedback& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FeedbackRequest_Feedback* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tags_){from._impl_.tags_}
    , decltype(_impl_.feedback_text_){}
    , decltype(_impl_.thumbs_up_){}
    , decltype(_impl_.is_test_case_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.feedback_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.feedback_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_feedback_text().empty()) {
    _this->_impl_.feedback_text_.Set(from._internal_feedback_text(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.thumbs_up_, &from._impl_.thumbs_up_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_test_case_) -
    reinterpret_cast<char*>(&_impl_.thumbs_up_)) + sizeof(_impl_.is_test_case_));
  // @@protoc_insertion_point(copy_constructor:service.FeedbackRequest.Feedback)
}

inline void FeedbackRequest_Feedback::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tags_){arena}
    , decltype(_impl_.feedback_text_){}
    , decltype(_impl_.thumbs_up_){false}
    , decltype(_impl_.is_test_case_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.feedback_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.feedback_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FeedbackRequest_Feedback::~FeedbackRequest_Feedback() {
  // @@protoc_insertion_point(destructor:service.FeedbackRequest.Feedback)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FeedbackRequest_Feedback::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tags_.~RepeatedPtrField();
  _impl_.feedback_text_.Destroy();
}

void FeedbackRequest_Feedback::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FeedbackRequest_Feedback::Clear() {
// @@protoc_insertion_point(message_clear_start:service.FeedbackRequest.Feedback)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.feedback_text_.ClearToEmpty();
  ::memset(&_impl_.thumbs_up_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.is_test_case_) -
      reinterpret_cast<char*>(&_impl_.thumbs_up_)) + sizeof(_impl_.is_test_case_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FeedbackRequest_Feedback::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool thumbs_up = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.thumbs_up_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string feedback_text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_feedback_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.FeedbackRequest.Feedback.feedback_text"));
        } else
          goto handle_unusual;
        continue;
      // repeated string tags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tags();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "service.FeedbackRequest.Feedback.tags"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool is_test_case = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.is_test_case_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FeedbackRequest_Feedback::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.FeedbackRequest.Feedback)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool thumbs_up = 1;
  if (this->_internal_thumbs_up() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_thumbs_up(), target);
  }

  // string feedback_text = 2;
  if (!this->_internal_feedback_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_feedback_text().data(), static_cast<int>(this->_internal_feedback_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.FeedbackRequest.Feedback.feedback_text");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_feedback_text(), target);
  }

  // repeated string tags = 3;
  for (int i = 0, n = this->_internal_tags_size(); i < n; i++) {
    const auto& s = this->_internal_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.FeedbackRequest.Feedback.tags");
    target = stream->WriteString(3, s, target);
  }

  // bool is_test_case = 4;
  if (this->_internal_is_test_case() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_is_test_case(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.FeedbackRequest.Feedback)
  return target;
}

size_t FeedbackRequest_Feedback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.FeedbackRequest.Feedback)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.tags_.size());
  for (int i = 0, n = _impl_.tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.tags_.Get(i));
  }

  // string feedback_text = 2;
  if (!this->_internal_feedback_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_feedback_text());
  }

  // bool thumbs_up = 1;
  if (this->_internal_thumbs_up() != 0) {
    total_size += 1 + 1;
  }

  // bool is_test_case = 4;
  if (this->_internal_is_test_case() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FeedbackRequest_Feedback::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FeedbackRequest_Feedback::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FeedbackRequest_Feedback::GetClassData() const { return &_class_data_; }


void FeedbackRequest_Feedback::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FeedbackRequest_Feedback*>(&to_msg);
  auto& from = static_cast<const FeedbackRequest_Feedback&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.FeedbackRequest.Feedback)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tags_.MergeFrom(from._impl_.tags_);
  if (!from._internal_feedback_text().empty()) {
    _this->_internal_set_feedback_text(from._internal_feedback_text());
  }
  if (from._internal_thumbs_up() != 0) {
    _this->_internal_set_thumbs_up(from._internal_thumbs_up());
  }
  if (from._internal_is_test_case() != 0) {
    _this->_internal_set_is_test_case(from._internal_is_test_case());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FeedbackRequest_Feedback::CopyFrom(const FeedbackRequest_Feedback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.FeedbackRequest.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeedbackRequest_Feedback::IsInitialized() const {
  return true;
}

void FeedbackRequest_Feedback::InternalSwap(FeedbackRequest_Feedback* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.feedback_text_, lhs_arena,
      &other->_impl_.feedback_text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FeedbackRequest_Feedback, _impl_.is_test_case_)
      + sizeof(FeedbackRequest_Feedback::_impl_.is_test_case_)
      - PROTOBUF_FIELD_OFFSET(FeedbackRequest_Feedback, _impl_.thumbs_up_)>(
          reinterpret_cast<char*>(&_impl_.thumbs_up_),
          reinterpret_cast<char*>(&other->_impl_.thumbs_up_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FeedbackRequest_Feedback::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[27]);
}

// ===================================================================

class FeedbackRequest::_Internal {
 public:
  static const ::service::FeedbackRequest_Feedback& text_feedback(const FeedbackRequest* msg);
};

const ::service::FeedbackRequest_Feedback&
FeedbackRequest::_Internal::text_feedback(const FeedbackRequest* msg) {
  return *msg->_impl_.text_feedback_;
}
FeedbackRequest::FeedbackRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.FeedbackRequest)
}
FeedbackRequest::FeedbackRequest(const FeedbackRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FeedbackRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.interaction_id_){}
    , decltype(_impl_.character_id_){}
    , decltype(_impl_.session_id_){}
    , decltype(_impl_.user_query_){}
    , decltype(_impl_.response_){}
    , decltype(_impl_.text_feedback_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.interaction_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_interaction_id().empty()) {
    _this->_impl_.interaction_id_.Set(from._internal_interaction_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.character_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_character_id().empty()) {
    _this->_impl_.character_id_.Set(from._internal_character_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_session_id().empty()) {
    _this->_impl_.session_id_.Set(from._internal_session_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_query_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_query_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_query().empty()) {
    _this->_impl_.user_query_.Set(from._internal_user_query(), 
      _this->GetArenaForAllocation());
  }
  _impl_.response_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_response().empty()) {
    _this->_impl_.response_.Set(from._internal_response(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_text_feedback()) {
    _this->_impl_.text_feedback_ = new ::service::FeedbackRequest_Feedback(*from._impl_.text_feedback_);
  }
  // @@protoc_insertion_point(copy_constructor:service.FeedbackRequest)
}

inline void FeedbackRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.interaction_id_){}
    , decltype(_impl_.character_id_){}
    , decltype(_impl_.session_id_){}
    , decltype(_impl_.user_query_){}
    , decltype(_impl_.response_){}
    , decltype(_impl_.text_feedback_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.interaction_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.character_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_query_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_query_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.response_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FeedbackRequest::~FeedbackRequest() {
  // @@protoc_insertion_point(destructor:service.FeedbackRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FeedbackRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.interaction_id_.Destroy();
  _impl_.character_id_.Destroy();
  _impl_.session_id_.Destroy();
  _impl_.user_query_.Destroy();
  _impl_.response_.Destroy();
  if (this != internal_default_instance()) delete _impl_.text_feedback_;
}

void FeedbackRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FeedbackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:service.FeedbackRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.interaction_id_.ClearToEmpty();
  _impl_.character_id_.ClearToEmpty();
  _impl_.session_id_.ClearToEmpty();
  _impl_.user_query_.ClearToEmpty();
  _impl_.response_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.text_feedback_ != nullptr) {
    delete _impl_.text_feedback_;
  }
  _impl_.text_feedback_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FeedbackRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string interaction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_interaction_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.FeedbackRequest.interaction_id"));
        } else
          goto handle_unusual;
        continue;
      // string character_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_character_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.FeedbackRequest.character_id"));
        } else
          goto handle_unusual;
        continue;
      // string session_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_session_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.FeedbackRequest.session_id"));
        } else
          goto handle_unusual;
        continue;
      // .service.FeedbackRequest.Feedback text_feedback = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_text_feedback(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string user_query = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_user_query();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.FeedbackRequest.user_query"));
        } else
          goto handle_unusual;
        continue;
      // string response = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_response();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.FeedbackRequest.response"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FeedbackRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.FeedbackRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string interaction_id = 1;
  if (!this->_internal_interaction_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_interaction_id().data(), static_cast<int>(this->_internal_interaction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.FeedbackRequest.interaction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_interaction_id(), target);
  }

  // string character_id = 2;
  if (!this->_internal_character_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character_id().data(), static_cast<int>(this->_internal_character_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.FeedbackRequest.character_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_character_id(), target);
  }

  // string session_id = 3;
  if (!this->_internal_session_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.FeedbackRequest.session_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_session_id(), target);
  }

  // .service.FeedbackRequest.Feedback text_feedback = 5;
  if (this->_internal_has_text_feedback()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::text_feedback(this),
        _Internal::text_feedback(this).GetCachedSize(), target, stream);
  }

  // string user_query = 6;
  if (!this->_internal_user_query().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_query().data(), static_cast<int>(this->_internal_user_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.FeedbackRequest.user_query");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_user_query(), target);
  }

  // string response = 7;
  if (!this->_internal_response().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_response().data(), static_cast<int>(this->_internal_response().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.FeedbackRequest.response");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_response(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.FeedbackRequest)
  return target;
}

size_t FeedbackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.FeedbackRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string interaction_id = 1;
  if (!this->_internal_interaction_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_interaction_id());
  }

  // string character_id = 2;
  if (!this->_internal_character_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character_id());
  }

  // string session_id = 3;
  if (!this->_internal_session_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  // string user_query = 6;
  if (!this->_internal_user_query().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_query());
  }

  // string response = 7;
  if (!this->_internal_response().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_response());
  }

  // .service.FeedbackRequest.Feedback text_feedback = 5;
  if (this->_internal_has_text_feedback()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.text_feedback_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FeedbackRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FeedbackRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FeedbackRequest::GetClassData() const { return &_class_data_; }


void FeedbackRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FeedbackRequest*>(&to_msg);
  auto& from = static_cast<const FeedbackRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.FeedbackRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_interaction_id().empty()) {
    _this->_internal_set_interaction_id(from._internal_interaction_id());
  }
  if (!from._internal_character_id().empty()) {
    _this->_internal_set_character_id(from._internal_character_id());
  }
  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (!from._internal_user_query().empty()) {
    _this->_internal_set_user_query(from._internal_user_query());
  }
  if (!from._internal_response().empty()) {
    _this->_internal_set_response(from._internal_response());
  }
  if (from._internal_has_text_feedback()) {
    _this->_internal_mutable_text_feedback()->::service::FeedbackRequest_Feedback::MergeFrom(
        from._internal_text_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FeedbackRequest::CopyFrom(const FeedbackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.FeedbackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeedbackRequest::IsInitialized() const {
  return true;
}

void FeedbackRequest::InternalSwap(FeedbackRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.interaction_id_, lhs_arena,
      &other->_impl_.interaction_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.character_id_, lhs_arena,
      &other->_impl_.character_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.session_id_, lhs_arena,
      &other->_impl_.session_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_query_, lhs_arena,
      &other->_impl_.user_query_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.response_, lhs_arena,
      &other->_impl_.response_, rhs_arena
  );
  swap(_impl_.text_feedback_, other->_impl_.text_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FeedbackRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[28]);
}

// ===================================================================

class FeedbackResponse::_Internal {
 public:
};

FeedbackResponse::FeedbackResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:service.FeedbackResponse)
}
FeedbackResponse::FeedbackResponse(const FeedbackResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FeedbackResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.feedback_response_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.feedback_response_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.feedback_response_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_feedback_response().empty()) {
    _this->_impl_.feedback_response_.Set(from._internal_feedback_response(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:service.FeedbackResponse)
}

inline void FeedbackResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.feedback_response_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.feedback_response_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.feedback_response_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FeedbackResponse::~FeedbackResponse() {
  // @@protoc_insertion_point(destructor:service.FeedbackResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FeedbackResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.feedback_response_.Destroy();
}

void FeedbackResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FeedbackResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.FeedbackResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.feedback_response_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FeedbackResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string feedback_response = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_feedback_response();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "service.FeedbackResponse.feedback_response"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FeedbackResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.FeedbackResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string feedback_response = 1;
  if (!this->_internal_feedback_response().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_feedback_response().data(), static_cast<int>(this->_internal_feedback_response().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.FeedbackResponse.feedback_response");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_feedback_response(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.FeedbackResponse)
  return target;
}

size_t FeedbackResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.FeedbackResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string feedback_response = 1;
  if (!this->_internal_feedback_response().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_feedback_response());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FeedbackResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FeedbackResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FeedbackResponse::GetClassData() const { return &_class_data_; }


void FeedbackResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FeedbackResponse*>(&to_msg);
  auto& from = static_cast<const FeedbackResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:service.FeedbackResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_feedback_response().empty()) {
    _this->_internal_set_feedback_response(from._internal_feedback_response());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FeedbackResponse::CopyFrom(const FeedbackResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.FeedbackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeedbackResponse::IsInitialized() const {
  return true;
}

void FeedbackResponse::InternalSwap(FeedbackResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.feedback_response_, lhs_arena,
      &other->_impl_.feedback_response_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FeedbackResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[29]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace service
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::service::AudioConfig*
Arena::CreateMaybeMessage< ::service::AudioConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::AudioConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::service::TriggerConfig*
Arena::CreateMaybeMessage< ::service::TriggerConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::TriggerConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::service::ActionConfig_Character*
Arena::CreateMaybeMessage< ::service::ActionConfig_Character >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::ActionConfig_Character >(arena);
}
template<> PROTOBUF_NOINLINE ::service::ActionConfig_Object*
Arena::CreateMaybeMessage< ::service::ActionConfig_Object >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::ActionConfig_Object >(arena);
}
template<> PROTOBUF_NOINLINE ::service::ActionConfig*
Arena::CreateMaybeMessage< ::service::ActionConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::ActionConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::service::STTRequest*
Arena::CreateMaybeMessage< ::service::STTRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::STTRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::service::STTResponse*
Arena::CreateMaybeMessage< ::service::STTResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::STTResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::service::DynamicInfoConfig*
Arena::CreateMaybeMessage< ::service::DynamicInfoConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::DynamicInfoConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::service::VisionInput_ImageData*
Arena::CreateMaybeMessage< ::service::VisionInput_ImageData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::VisionInput_ImageData >(arena);
}
template<> PROTOBUF_NOINLINE ::service::VisionInput_VideoData*
Arena::CreateMaybeMessage< ::service::VisionInput_VideoData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::VisionInput_VideoData >(arena);
}
template<> PROTOBUF_NOINLINE ::service::VisionInput*
Arena::CreateMaybeMessage< ::service::VisionInput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::VisionInput >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse*
Arena::CreateMaybeMessage< ::service::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseRequest_GetResponseConfig_NarrativeTemplateKeysEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseRequest_GetResponseConfig*
Arena::CreateMaybeMessage< ::service::GetResponseRequest_GetResponseConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseRequest_GetResponseConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseRequest_GetResponseData*
Arena::CreateMaybeMessage< ::service::GetResponseRequest_GetResponseData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseRequest_GetResponseData >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseRequest*
Arena::CreateMaybeMessage< ::service::GetResponseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseRequestSingle*
Arena::CreateMaybeMessage< ::service::GetResponseRequestSingle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseRequestSingle >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseResponse_AudioResponse*
Arena::CreateMaybeMessage< ::service::GetResponseResponse_AudioResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseResponse_AudioResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseResponse_ActionResponse*
Arena::CreateMaybeMessage< ::service::GetResponseResponse_ActionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseResponse_ActionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseResponse_BehaviorTreeResponse*
Arena::CreateMaybeMessage< ::service::GetResponseResponse_BehaviorTreeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseResponse_BehaviorTreeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseResponse_UserTranscript*
Arena::CreateMaybeMessage< ::service::GetResponseResponse_UserTranscript >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseResponse_UserTranscript >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseResponse*
Arena::CreateMaybeMessage< ::service::GetResponseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::service::VisemesData*
Arena::CreateMaybeMessage< ::service::VisemesData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::VisemesData >(arena);
}
template<> PROTOBUF_NOINLINE ::service::EmotionResponse*
Arena::CreateMaybeMessage< ::service::EmotionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::EmotionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::service::Viseme*
Arena::CreateMaybeMessage< ::service::Viseme >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::Viseme >(arena);
}
template<> PROTOBUF_NOINLINE ::service::BlendShapesData*
Arena::CreateMaybeMessage< ::service::BlendShapesData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::BlendShapesData >(arena);
}
template<> PROTOBUF_NOINLINE ::service::HelloRequest*
Arena::CreateMaybeMessage< ::service::HelloRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::HelloRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::service::HelloResponse*
Arena::CreateMaybeMessage< ::service::HelloResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::HelloResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::service::FeedbackRequest_Feedback*
Arena::CreateMaybeMessage< ::service::FeedbackRequest_Feedback >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::FeedbackRequest_Feedback >(arena);
}
template<> PROTOBUF_NOINLINE ::service::FeedbackRequest*
Arena::CreateMaybeMessage< ::service::FeedbackRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::FeedbackRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::service::FeedbackResponse*
Arena::CreateMaybeMessage< ::service::FeedbackResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::FeedbackResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

#endif
